{"version":3,"sources":["lib/addons/p5.dom.js"],"names":["root","factory","define","amd","p5","exports","require","this","getContainer","p","container","document","slice","getElementById","Element","elt","HTMLElement","addElement","pInst","media","_userNode","body","appendChild","c","MediaElement","_elements","push","prototype","select","e","_validateParameters","arguments","res","getElementsByClassName","length","getElementsByTagName","_wrapElement","selectAll","arr","j","obj","children","Array","call","tagName","type","converted","checked","createSelect","every","createRadio","removeElements","i","HTMLCanvasElement","remove","createMedia","src","callback","createElement","source","callbackHandler","removeEventListener","addEventListener","loadedmetadata","width","videoWidth","height","videoHeight","presetPlaybackRate","playbackRate","forEach","tag","method","charAt","toUpperCase","html","innerHTML","createImg","self","args","alt","onload","offsetWidth","offsetHeight","fn","createA","href","target","createSlider","min","max","value","step","createButton","label","createCheckbox","checkbox","cb","val","ran","Math","random","toString","setAttribute","htmlFor","createTextNode","arg","nodeName","option","name","index","undefined","opt","selected","selectedIndex","getAttribute","selectedOptions","existing_radios","radios","querySelectorAll","count","prev","current","_getInputChildrenArray","filter","times","inputChildren","createColorPicker","Color","_colorMode","_colorMaxes","rgb","hsb","hsl","color","mode","maxes","createInput","createFileInput","multiple","window","File","FileReader","FileList","Blob","evt","makeLoader","theFile","p5file","data","result","files","f","reader","indexOf","readAsText","readAsDataURL","console","log","createVideo","createAudio","VIDEO","AUDIO","navigator","mediaDevices","getUserMedia","constraints","webkitGetUserMedia","mozGetUserMedia","Promise","resolve","reject","Error","createCapture","useVideo","useAudio","video","audio","then","stream","srcObject","URL","createObjectURL","err","play","content","addClass","className","removeClass","regex","RegExp","replace","child","childNodes","substring","center","align","style","display","hidden","parentHidden","parent","pos","x","offsetLeft","y","offsetTop","show","position","wOffset","abs","hOffset","hide","left","top","_translate","transform","parentElement","perspective","_rotate","prop","levels","getComputedStyle","getPropertyValue","attrs","split","parts","trim","trans","shift","apply","numVal","parseInt","attribute","attr","firstChild","removeAttribute","parseFloat","size","w","h","aW","aH","AUTO","k","getContext","_pInst","_pixelDensity","scale","_curElement","_setProperty","ev","_events","parentNode","removeChild","crossOrigin","_prevTime","_cueIDCounter","_cues","_modified","_pixelsDirty","_pixelsTime","Object","defineProperty","get","firstChildSrc","srcVal","location","set","newValue","modified","_onended","onended","create","promise","currentTime","duration","readyState","load","catch","stop","pause","loop","noLoop","autoplay","volume","speed","time","pixels","loadPixels","canvas","drawingContext","drawImage","Renderer2D","setModified","updatePixels","Image","imgOrCol","copy","mask","isModified","connect","audioContext","masterOutput","getAudioContext","soundOut","input","context","destination","audioSourceNode","createMediaElementSource","disconnect","showControls","controls","hideControls","Cue","id","addCue","cue","ontimeupdate","_onTimeUpdate","bind","removeCue","splice","clearCues","playbackTime","callbackTime","file","typeList","subtype"],"mappings":"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","file":"p5.dom.min.js","sourcesContent":["/*! p5.dom.js v0.3.4 Jan 19, 2017 */\r\n/**\r\n * <p>The web is much more than just canvas and p5.dom makes it easy to interact\r\n * with other HTML5 objects, including text, hyperlink, image, input, video,\r\n * audio, and webcam.</p>\r\n * <p>There is a set of creation methods, DOM manipulation methods, and\r\n * an extended <a href=\"#/p5.Element\">p5.Element</a> that supports a range of HTML elements. See the\r\n * <a href='https://github.com/processing/p5.js/wiki/Beyond-the-canvas'>\r\n * beyond the canvas tutorial</a> for a full overview of how this addon works.\r\n *\r\n * <p>Methods and properties shown in black are part of the p5.js core, items in\r\n * blue are part of the p5.dom library. You will need to include an extra file\r\n * in order to access the blue functions. See the\r\n * <a href='http://p5js.org/libraries/#using-a-library'>using a library</a>\r\n * section for information on how to include this library. p5.dom comes with\r\n * <a href='http://p5js.org/download'>p5 complete</a> or you can download the single file\r\n * <a href='https://raw.githubusercontent.com/lmccart/p5.js/master/lib/addons/p5.dom.js'>\r\n * here</a>.</p>\r\n * <p>See <a href='https://github.com/processing/p5.js/wiki/Beyond-the-canvas'>tutorial: beyond the canvas</a>\r\n * for more info on how to use this libary.</a>\r\n *\r\n * @module p5.dom\r\n * @submodule p5.dom\r\n * @for p5\r\n * @main\r\n */\r\n\r\n(function(root, factory) {\r\n  if (typeof define === 'function' && define.amd)\r\n    define('p5.dom', ['p5'], function(p5) {\r\n      factory(p5);\r\n    });\r\n  else if (typeof exports === 'object') factory(require('../p5'));\r\n  else factory(root['p5']);\r\n})(this, function(p5) {\r\n  // =============================================================================\r\n  //                         p5 additions\r\n  // =============================================================================\r\n\r\n  /**\r\n   * Searches the page for an element with the given ID, class, or tag name (using the '#' or '.'\r\n   * prefixes to specify an ID or class respectively, and none for a tag) and returns it as\r\n   * a <a href=\"#/p5.Element\">p5.Element</a>. If a class or tag name is given with more than 1 element,\r\n   * only the first element will be returned.\r\n   * The DOM node itself can be accessed with .elt.\r\n   * Returns null if none found. You can also specify a container to search within.\r\n   *\r\n   * @method select\r\n   * @param  {String} name id, class, or tag name of element to search for\r\n   * @param  {String|p5.Element|HTMLElement} [container] id, <a href=\"#/p5.Element\">p5.Element</a>, or\r\n   *                                             HTML element to search within\r\n   * @return {p5.Element|null} <a href=\"#/p5.Element\">p5.Element</a> containing node found\r\n   * @example\r\n   * <div ><code class='norender'>\r\n   * function setup() {\r\n   *   createCanvas(100, 100);\r\n   *   //translates canvas 50px down\r\n   *   select('canvas').position(100, 100);\r\n   * }\r\n   * </code></div>\r\n   * <div><code class='norender'>\r\n   * // these are all valid calls to select()\r\n   * var a = select('#moo');\r\n   * var b = select('#blah', '#myContainer');\r\n   * var c, e;\r\n   * if (b) {\r\n   *   c = select('#foo', b);\r\n   * }\r\n   * var d = document.getElementById('beep');\r\n   * if (d) {\r\n   *   e = select('p', d);\r\n   * }\r\n   * [a, b, c, d, e]; // unused\r\n   * </code></div>\r\n   *\r\n   */\r\n  p5.prototype.select = function(e, p) {\r\n    p5._validateParameters('select', arguments);\r\n    var res = null;\r\n    var container = getContainer(p);\r\n    if (e[0] === '.') {\r\n      e = e.slice(1);\r\n      res = container.getElementsByClassName(e);\r\n      if (res.length) {\r\n        res = res[0];\r\n      } else {\r\n        res = null;\r\n      }\r\n    } else if (e[0] === '#') {\r\n      e = e.slice(1);\r\n      res = container.getElementById(e);\r\n    } else {\r\n      res = container.getElementsByTagName(e);\r\n      if (res.length) {\r\n        res = res[0];\r\n      } else {\r\n        res = null;\r\n      }\r\n    }\r\n    if (res) {\r\n      return this._wrapElement(res);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Searches the page for elements with the given class or tag name (using the '.' prefix\r\n   * to specify a class and no prefix for a tag) and returns them as <a href=\"#/p5.Element\">p5.Element</a>s\r\n   * in an array.\r\n   * The DOM node itself can be accessed with .elt.\r\n   * Returns an empty array if none found.\r\n   * You can also specify a container to search within.\r\n   *\r\n   * @method selectAll\r\n   * @param  {String} name class or tag name of elements to search for\r\n   * @param  {String} [container] id, <a href=\"#/p5.Element\">p5.Element</a>, or HTML element to search within\r\n   * @return {p5.Element[]} Array of <a href=\"#/p5.Element\">p5.Element</a>s containing nodes found\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * function setup() {\r\n   *   createButton('btn');\r\n   *   createButton('2nd btn');\r\n   *   createButton('3rd btn');\r\n   *   var buttons = selectAll('button');\r\n   *\r\n   *   for (var i = 0; i < buttons.length; i++) {\r\n   *     buttons[i].size(100, 100);\r\n   *   }\r\n   * }\r\n   * </code></div>\r\n   * <div class='norender'><code>\r\n   * // these are all valid calls to selectAll()\r\n   * var a = selectAll('.moo');\r\n   * a = selectAll('div');\r\n   * a = selectAll('button', '#myContainer');\r\n   *\r\n   * var d = select('#container');\r\n   * a = selectAll('p', d);\r\n   *\r\n   * var f = document.getElementById('beep');\r\n   * a = select('.blah', f);\r\n   *\r\n   * a; // unused\r\n   * </code></div>\r\n   *\r\n   */\r\n  p5.prototype.selectAll = function(e, p) {\r\n    p5._validateParameters('selectAll', arguments);\r\n    var arr = [];\r\n    var res;\r\n    var container = getContainer(p);\r\n    if (e[0] === '.') {\r\n      e = e.slice(1);\r\n      res = container.getElementsByClassName(e);\r\n    } else {\r\n      res = container.getElementsByTagName(e);\r\n    }\r\n    if (res) {\r\n      for (var j = 0; j < res.length; j++) {\r\n        var obj = this._wrapElement(res[j]);\r\n        arr.push(obj);\r\n      }\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * Helper function for select and selectAll\r\n   */\r\n  function getContainer(p) {\r\n    var container = document;\r\n    if (typeof p === 'string' && p[0] === '#') {\r\n      p = p.slice(1);\r\n      container = document.getElementById(p) || document;\r\n    } else if (p instanceof p5.Element) {\r\n      container = p.elt;\r\n    } else if (p instanceof HTMLElement) {\r\n      container = p;\r\n    }\r\n    return container;\r\n  }\r\n\r\n  /**\r\n   * Helper function for getElement and getElements.\r\n   */\r\n  p5.prototype._wrapElement = function(elt) {\r\n    var children = Array.prototype.slice.call(elt.children);\r\n    if (elt.tagName === 'INPUT' && elt.type === 'checkbox') {\r\n      var converted = new p5.Element(elt);\r\n      converted.checked = function() {\r\n        if (arguments.length === 0) {\r\n          return this.elt.checked;\r\n        } else if (arguments[0]) {\r\n          this.elt.checked = true;\r\n        } else {\r\n          this.elt.checked = false;\r\n        }\r\n        return this;\r\n      };\r\n      return converted;\r\n    } else if (elt.tagName === 'VIDEO' || elt.tagName === 'AUDIO') {\r\n      return new p5.MediaElement(elt);\r\n    } else if (elt.tagName === 'SELECT') {\r\n      return this.createSelect(new p5.Element(elt));\r\n    } else if (\r\n      children.length > 0 &&\r\n      children.every(function(c) {\r\n        return c.tagName === 'INPUT' || c.tagName === 'LABEL';\r\n      })\r\n    ) {\r\n      return this.createRadio(new p5.Element(elt));\r\n    } else {\r\n      return new p5.Element(elt);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Removes all elements created by p5, except any canvas / graphics\r\n   * elements created by <a href=\"#/p5/createCanvas\">createCanvas</a> or <a href=\"#/p5/createGraphics\">createGraphics</a>.\r\n   * Event handlers are removed, and element is removed from the DOM.\r\n   * @method removeElements\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * function setup() {\r\n   *   createCanvas(100, 100);\r\n   *   createDiv('this is some text');\r\n   *   createP('this is a paragraph');\r\n   * }\r\n   * function mousePressed() {\r\n   *   removeElements(); // this will remove the div and p, not canvas\r\n   * }\r\n   * </code></div>\r\n   *\r\n   */\r\n  p5.prototype.removeElements = function(e) {\r\n    p5._validateParameters('removeElements', arguments);\r\n    for (var i = 0; i < this._elements.length; i++) {\r\n      if (!(this._elements[i].elt instanceof HTMLCanvasElement)) {\r\n        this._elements[i].remove();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Helpers for create methods.\r\n   */\r\n  function addElement(elt, pInst, media) {\r\n    var node = pInst._userNode ? pInst._userNode : document.body;\r\n    node.appendChild(elt);\r\n    var c = media ? new p5.MediaElement(elt) : new p5.Element(elt);\r\n    pInst._elements.push(c);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * Creates a &lt;div&gt;&lt;/div&gt; element in the DOM with given inner HTML.\r\n   * Appends to the container node if one is specified, otherwise\r\n   * appends to body.\r\n   *\r\n   * @method createDiv\r\n   * @param  {String} [html] inner HTML for element created\r\n   * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * createDiv('this is some text');\r\n   * </code></div>\r\n   */\r\n\r\n  /**\r\n   * Creates a &lt;p&gt;&lt;/p&gt; element in the DOM with given inner HTML. Used\r\n   * for paragraph length text.\r\n   * Appends to the container node if one is specified, otherwise\r\n   * appends to body.\r\n   *\r\n   * @method createP\r\n   * @param  {String} [html] inner HTML for element created\r\n   * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * createP('this is some text');\r\n   * </code></div>\r\n   */\r\n\r\n  /**\r\n   * Creates a &lt;span&gt;&lt;/span&gt; element in the DOM with given inner HTML.\r\n   * Appends to the container node if one is specified, otherwise\r\n   * appends to body.\r\n   *\r\n   * @method createSpan\r\n   * @param  {String} [html] inner HTML for element created\r\n   * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * createSpan('this is some text');\r\n   * </code></div>\r\n   */\r\n  var tags = ['div', 'p', 'span'];\r\n  tags.forEach(function(tag) {\r\n    var method = 'create' + tag.charAt(0).toUpperCase() + tag.slice(1);\r\n    p5.prototype[method] = function(html) {\r\n      var elt = document.createElement(tag);\r\n      elt.innerHTML = typeof html === 'undefined' ? '' : html;\r\n      return addElement(elt, this);\r\n    };\r\n  });\r\n\r\n  /**\r\n   * Creates an &lt;img&gt; element in the DOM with given src and\r\n   * alternate text.\r\n   * Appends to the container node if one is specified, otherwise\r\n   * appends to body.\r\n   *\r\n   * @method createImg\r\n   * @param  {String} src src path or url for image\r\n   * @param  {String} [alt] alternate text to be used if image does not load\r\n   * @param  {Function} [successCallback] callback to be called once image data is loaded\r\n   * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * createImg('http://p5js.org/img/asterisk-01.png');\r\n   * </code></div>\r\n   */\r\n  /**\r\n   * @method createImg\r\n   * @param  {String} src\r\n   * @param  {Function} successCallback\r\n   * @return {Object|p5.Element}\r\n   */\r\n  p5.prototype.createImg = function() {\r\n    p5._validateParameters('createImg', arguments);\r\n    var elt = document.createElement('img');\r\n    var args = arguments;\r\n    var self;\r\n    var setAttrs = function() {\r\n      self.width = elt.offsetWidth || elt.width;\r\n      self.height = elt.offsetHeight || elt.height;\r\n      if (args.length > 1 && typeof args[1] === 'function') {\r\n        self.fn = args[1];\r\n        self.fn();\r\n      } else if (args.length > 1 && typeof args[2] === 'function') {\r\n        self.fn = args[2];\r\n        self.fn();\r\n      }\r\n    };\r\n    elt.src = args[0];\r\n    if (args.length > 1 && typeof args[1] === 'string') {\r\n      elt.alt = args[1];\r\n    }\r\n    elt.onload = function() {\r\n      setAttrs();\r\n    };\r\n    self = addElement(elt, this);\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Creates an &lt;a&gt;&lt;/a&gt; element in the DOM for including a hyperlink.\r\n   * Appends to the container node if one is specified, otherwise\r\n   * appends to body.\r\n   *\r\n   * @method createA\r\n   * @param  {String} href       url of page to link to\r\n   * @param  {String} html       inner html of link element to display\r\n   * @param  {String} [target]   target where new link should open,\r\n   *                             could be _blank, _self, _parent, _top.\r\n   * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * createA('http://p5js.org/', 'this is a link');\r\n   * </code></div>\r\n   */\r\n  p5.prototype.createA = function(href, html, target) {\r\n    p5._validateParameters('createA', arguments);\r\n    var elt = document.createElement('a');\r\n    elt.href = href;\r\n    elt.innerHTML = html;\r\n    if (target) elt.target = target;\r\n    return addElement(elt, this);\r\n  };\r\n\r\n  /** INPUT **/\r\n\r\n  /**\r\n   * Creates a slider &lt;input&gt;&lt;/input&gt; element in the DOM.\r\n   * Use .size() to set the display length of the slider.\r\n   * Appends to the container node if one is specified, otherwise\r\n   * appends to body.\r\n   *\r\n   * @method createSlider\r\n   * @param  {Number} min minimum value of the slider\r\n   * @param  {Number} max maximum value of the slider\r\n   * @param  {Number} [value] default value of the slider\r\n   * @param  {Number} [step] step size for each tick of the slider (if step is set to 0, the slider will move continuously from the minimum to the maximum value)\r\n   * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\r\n   * @example\r\n   * <div><code>\r\n   * var slider;\r\n   * function setup() {\r\n   *   slider = createSlider(0, 255, 100);\r\n   *   slider.position(10, 10);\r\n   *   slider.style('width', '80px');\r\n   * }\r\n   *\r\n   * function draw() {\r\n   *   var val = slider.value();\r\n   *   background(val);\r\n   * }\r\n   * </code></div>\r\n   *\r\n   * <div><code>\r\n   * var slider;\r\n   * function setup() {\r\n   *   colorMode(HSB);\r\n   *   slider = createSlider(0, 360, 60, 40);\r\n   *   slider.position(10, 10);\r\n   *   slider.style('width', '80px');\r\n   * }\r\n   *\r\n   * function draw() {\r\n   *   var val = slider.value();\r\n   *   background(val, 100, 100, 1);\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.prototype.createSlider = function(min, max, value, step) {\r\n    p5._validateParameters('createSlider', arguments);\r\n    var elt = document.createElement('input');\r\n    elt.type = 'range';\r\n    elt.min = min;\r\n    elt.max = max;\r\n    if (step === 0) {\r\n      elt.step = 0.000000000000000001; // smallest valid step\r\n    } else if (step) {\r\n      elt.step = step;\r\n    }\r\n    if (typeof value === 'number') elt.value = value;\r\n    return addElement(elt, this);\r\n  };\r\n\r\n  /**\r\n   * Creates a &lt;button&gt;&lt;/button&gt; element in the DOM.\r\n   * Use .size() to set the display size of the button.\r\n   * Use .mousePressed() to specify behavior on press.\r\n   * Appends to the container node if one is specified, otherwise\r\n   * appends to body.\r\n   *\r\n   * @method createButton\r\n   * @param  {String} label label displayed on the button\r\n   * @param  {String} [value] value of the button\r\n   * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * var button;\r\n   * function setup() {\r\n   *   createCanvas(100, 100);\r\n   *   background(0);\r\n   *   button = createButton('click me');\r\n   *   button.position(19, 19);\r\n   *   button.mousePressed(changeBG);\r\n   * }\r\n   *\r\n   * function changeBG() {\r\n   *   var val = random(255);\r\n   *   background(val);\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.prototype.createButton = function(label, value) {\r\n    p5._validateParameters('createButton', arguments);\r\n    var elt = document.createElement('button');\r\n    elt.innerHTML = label;\r\n    if (value) elt.value = value;\r\n    return addElement(elt, this);\r\n  };\r\n\r\n  /**\r\n   * Creates a checkbox &lt;input&gt;&lt;/input&gt; element in the DOM.\r\n   * Calling .checked() on a checkbox returns if it is checked or not\r\n   *\r\n   * @method createCheckbox\r\n   * @param  {String} [label] label displayed after checkbox\r\n   * @param  {boolean} [value] value of the checkbox; checked is true, unchecked is false\r\n   * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * var checkbox;\r\n   *\r\n   * function setup() {\r\n   *   checkbox = createCheckbox('label', false);\r\n   *   checkbox.changed(myCheckedEvent);\r\n   * }\r\n   *\r\n   * function myCheckedEvent() {\r\n   *   if (this.checked()) {\r\n   *     console.log('Checking!');\r\n   *   } else {\r\n   *     console.log('Unchecking!');\r\n   *   }\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.prototype.createCheckbox = function() {\r\n    p5._validateParameters('createCheckbox', arguments);\r\n    var elt = document.createElement('div');\r\n    var checkbox = document.createElement('input');\r\n    checkbox.type = 'checkbox';\r\n    elt.appendChild(checkbox);\r\n    //checkbox must be wrapped in p5.Element before label so that label appears after\r\n    var self = addElement(elt, this);\r\n    self.checked = function() {\r\n      var cb = self.elt.getElementsByTagName('input')[0];\r\n      if (cb) {\r\n        if (arguments.length === 0) {\r\n          return cb.checked;\r\n        } else if (arguments[0]) {\r\n          cb.checked = true;\r\n        } else {\r\n          cb.checked = false;\r\n        }\r\n      }\r\n      return self;\r\n    };\r\n    this.value = function(val) {\r\n      self.value = val;\r\n      return this;\r\n    };\r\n    if (arguments[0]) {\r\n      var ran = Math.random()\r\n        .toString(36)\r\n        .slice(2);\r\n      var label = document.createElement('label');\r\n      checkbox.setAttribute('id', ran);\r\n      label.htmlFor = ran;\r\n      self.value(arguments[0]);\r\n      label.appendChild(document.createTextNode(arguments[0]));\r\n      elt.appendChild(label);\r\n    }\r\n    if (arguments[1]) {\r\n      checkbox.checked = true;\r\n    }\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Creates a dropdown menu &lt;select&gt;&lt;/select&gt; element in the DOM.\r\n   * It also helps to assign select-box methods to <a href=\"#/p5.Element\">p5.Element</a> when selecting existing select box\r\n   * @method createSelect\r\n   * @param {boolean} [multiple] true if dropdown should support multiple selections\r\n   * @return {p5.Element}\r\n   * @example\r\n   * <div><code>\r\n   * var sel;\r\n   *\r\n   * function setup() {\r\n   *   textAlign(CENTER);\r\n   *   background(200);\r\n   *   sel = createSelect();\r\n   *   sel.position(10, 10);\r\n   *   sel.option('pear');\r\n   *   sel.option('kiwi');\r\n   *   sel.option('grape');\r\n   *   sel.changed(mySelectEvent);\r\n   * }\r\n   *\r\n   * function mySelectEvent() {\r\n   *   var item = sel.value();\r\n   *   background(200);\r\n   *   text('it is a' + item + '!', 50, 50);\r\n   * }\r\n   * </code></div>\r\n   */\r\n  /**\r\n   * @method createSelect\r\n   * @param {Object} existing DOM select element\r\n   * @return {p5.Element}\r\n   */\r\n\r\n  p5.prototype.createSelect = function() {\r\n    p5._validateParameters('createSelect', arguments);\r\n    var elt, self;\r\n    var arg = arguments[0];\r\n    if (typeof arg === 'object' && arg.elt.nodeName === 'SELECT') {\r\n      self = arg;\r\n      elt = this.elt = arg.elt;\r\n    } else {\r\n      elt = document.createElement('select');\r\n      if (arg && typeof arg === 'boolean') {\r\n        elt.setAttribute('multiple', 'true');\r\n      }\r\n      self = addElement(elt, this);\r\n    }\r\n    self.option = function(name, value) {\r\n      var index;\r\n      //see if there is already an option with this name\r\n      for (var i = 0; i < this.elt.length; i++) {\r\n        if (this.elt[i].innerHTML === name) {\r\n          index = i;\r\n          break;\r\n        }\r\n      }\r\n      //if there is an option with this name we will modify it\r\n      if (index !== undefined) {\r\n        //if the user passed in false then delete that option\r\n        if (value === false) {\r\n          this.elt.remove(index);\r\n        } else {\r\n          //otherwise if the name and value are the same then change both\r\n          if (this.elt[index].innerHTML === this.elt[index].value) {\r\n            this.elt[index].innerHTML = this.elt[index].value = value;\r\n            //otherwise just change the value\r\n          } else {\r\n            this.elt[index].value = value;\r\n          }\r\n        }\r\n      } else {\r\n        //if it doesn't exist make it\r\n        var opt = document.createElement('option');\r\n        opt.innerHTML = name;\r\n        if (arguments.length > 1) opt.value = value;\r\n        else opt.value = name;\r\n        elt.appendChild(opt);\r\n      }\r\n    };\r\n    self.selected = function(value) {\r\n      var arr = [],\r\n        i;\r\n      if (arguments.length > 0) {\r\n        for (i = 0; i < this.elt.length; i++) {\r\n          if (value.toString() === this.elt[i].value) {\r\n            this.elt.selectedIndex = i;\r\n          }\r\n        }\r\n        return this;\r\n      } else {\r\n        if (this.elt.getAttribute('multiple')) {\r\n          for (i = 0; i < this.elt.selectedOptions.length; i++) {\r\n            arr.push(this.elt.selectedOptions[i].value);\r\n          }\r\n          return arr;\r\n        } else {\r\n          return this.elt.value;\r\n        }\r\n      }\r\n    };\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Creates a radio button &lt;input&gt;&lt;/input&gt; element in the DOM.\r\n   * The .option() method can be used to set options for the radio after it is\r\n   * created. The .value() method will return the currently selected option.\r\n   *\r\n   * @method createRadio\r\n   * @param  {String} [divId] the id and name of the created div and input field respectively\r\n   * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\r\n   * @example\r\n   * <div><code>\r\n   * var radio;\r\n   *\r\n   * function setup() {\r\n   *   radio = createRadio();\r\n   *   radio.option('black');\r\n   *   radio.option('white');\r\n   *   radio.option('gray');\r\n   *   radio.style('width', '60px');\r\n   *   textAlign(CENTER);\r\n   *   fill(255, 0, 0);\r\n   * }\r\n   *\r\n   * function draw() {\r\n   *   var val = radio.value();\r\n   *   background(val);\r\n   *   text(val, width / 2, height / 2);\r\n   * }\r\n   * </code></div>\r\n   * <div><code>\r\n   * var radio;\r\n   *\r\n   * function setup() {\r\n   *   radio = createRadio();\r\n   *   radio.option('apple', 1);\r\n   *   radio.option('bread', 2);\r\n   *   radio.option('juice', 3);\r\n   *   radio.style('width', '60px');\r\n   *   textAlign(CENTER);\r\n   * }\r\n   *\r\n   * function draw() {\r\n   *   background(200);\r\n   *   var val = radio.value();\r\n   *   if (val) {\r\n   *     text('item cost is $' + val, width / 2, height / 2);\r\n   *   }\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.prototype.createRadio = function(existing_radios) {\r\n    p5._validateParameters('createRadio', arguments);\r\n    // do some prep by counting number of radios on page\r\n    var radios = document.querySelectorAll('input[type=radio]');\r\n    var count = 0;\r\n    if (radios.length > 1) {\r\n      var length = radios.length;\r\n      var prev = radios[0].name;\r\n      var current = radios[1].name;\r\n      count = 1;\r\n      for (var i = 1; i < length; i++) {\r\n        current = radios[i].name;\r\n        if (prev !== current) {\r\n          count++;\r\n        }\r\n        prev = current;\r\n      }\r\n    } else if (radios.length === 1) {\r\n      count = 1;\r\n    }\r\n    // see if we got an existing set of radios from callee\r\n    var elt, self;\r\n    if (typeof existing_radios === 'object') {\r\n      // use existing elements\r\n      self = existing_radios;\r\n      elt = this.elt = existing_radios.elt;\r\n    } else {\r\n      // create a set of radio buttons\r\n      elt = document.createElement('div');\r\n      self = addElement(elt, this);\r\n    }\r\n    // setup member functions\r\n    self._getInputChildrenArray = function() {\r\n      return Array.prototype.slice.call(this.elt.children).filter(function(c) {\r\n        return c.tagName === 'INPUT';\r\n      });\r\n    };\r\n\r\n    var times = -1;\r\n    self.option = function(name, value) {\r\n      var opt = document.createElement('input');\r\n      opt.type = 'radio';\r\n      opt.innerHTML = name;\r\n      if (value) opt.value = value;\r\n      else opt.value = name;\r\n      opt.setAttribute('name', 'defaultradio' + count);\r\n      elt.appendChild(opt);\r\n      if (name) {\r\n        times++;\r\n        var label = document.createElement('label');\r\n        opt.setAttribute('id', 'defaultradio' + count + '-' + times);\r\n        label.htmlFor = 'defaultradio' + count + '-' + times;\r\n        label.appendChild(document.createTextNode(name));\r\n        elt.appendChild(label);\r\n      }\r\n      return opt;\r\n    };\r\n    self.selected = function(value) {\r\n      var i;\r\n      var inputChildren = self._getInputChildrenArray();\r\n      if (value) {\r\n        for (i = 0; i < inputChildren.length; i++) {\r\n          if (inputChildren[i].value === value) inputChildren[i].checked = true;\r\n        }\r\n        return this;\r\n      } else {\r\n        for (i = 0; i < inputChildren.length; i++) {\r\n          if (inputChildren[i].checked === true) return inputChildren[i].value;\r\n        }\r\n      }\r\n    };\r\n    self.value = function(value) {\r\n      var i;\r\n      var inputChildren = self._getInputChildrenArray();\r\n      if (value) {\r\n        for (i = 0; i < inputChildren.length; i++) {\r\n          if (inputChildren[i].value === value) inputChildren[i].checked = true;\r\n        }\r\n        return this;\r\n      } else {\r\n        for (i = 0; i < inputChildren.length; i++) {\r\n          if (inputChildren[i].checked === true) return inputChildren[i].value;\r\n        }\r\n        return '';\r\n      }\r\n    };\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Creates a colorPicker element in the DOM for color input.\r\n   * The .value() method will return a hex string (#rrggbb) of the color.\r\n   * The .color() method will return a p5.Color object with the current chosen color.\r\n   *\r\n   * @method createColorPicker\r\n   * @param {String|p5.Color} [value] default color of element\r\n   * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\r\n   * @example\r\n   * <div>\r\n   * <code>\r\n   * var inp1, inp2;\r\n   * function setup() {\r\n   *   createCanvas(100, 100);\r\n   *   background('grey');\r\n   *   inp1 = createColorPicker('#ff0000');\r\n   *   inp2 = createColorPicker(color('yellow'));\r\n   *   inp1.input(setShade1);\r\n   *   inp2.input(setShade2);\r\n   *   setMidShade();\r\n   * }\r\n   *\r\n   * function setMidShade() {\r\n   *   // Finding a shade between the two\r\n   *   var commonShade = lerpColor(inp1.color(), inp2.color(), 0.5);\r\n   *   fill(commonShade);\r\n   *   rect(20, 20, 60, 60);\r\n   * }\r\n   *\r\n   * function setShade1() {\r\n   *   setMidShade();\r\n   *   console.log('You are choosing shade 1 to be : ', this.value());\r\n   * }\r\n   * function setShade2() {\r\n   *   setMidShade();\r\n   *   console.log('You are choosing shade 2 to be : ', this.value());\r\n   * }\r\n   * </code>\r\n   * </div>\r\n   */\r\n  p5.prototype.createColorPicker = function(value) {\r\n    p5._validateParameters('createColorPicker', arguments);\r\n    var elt = document.createElement('input');\r\n    var self;\r\n    elt.type = 'color';\r\n    if (value) {\r\n      if (value instanceof p5.Color) {\r\n        elt.value = value.toString('#rrggbb');\r\n      } else {\r\n        p5.prototype._colorMode = 'rgb';\r\n        p5.prototype._colorMaxes = {\r\n          rgb: [255, 255, 255, 255],\r\n          hsb: [360, 100, 100, 1],\r\n          hsl: [360, 100, 100, 1]\r\n        };\r\n        elt.value = p5.prototype.color(value).toString('#rrggbb');\r\n      }\r\n    } else {\r\n      elt.value = '#000000';\r\n    }\r\n    self = addElement(elt, this);\r\n    // Method to return a p5.Color object for the given color.\r\n    self.color = function() {\r\n      if (value.mode) {\r\n        p5.prototype._colorMode = value.mode;\r\n      }\r\n      if (value.maxes) {\r\n        p5.prototype._colorMaxes = value.maxes;\r\n      }\r\n      return p5.prototype.color(this.elt.value);\r\n    };\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Creates an &lt;input&gt;&lt;/input&gt; element in the DOM for text input.\r\n   * Use .<a href=\"#/p5.Element/size\">size()</a> to set the display length of the box.\r\n   * Appends to the container node if one is specified, otherwise\r\n   * appends to body.\r\n   *\r\n   * @method createInput\r\n   * @param {String} [value] default value of the input box\r\n   * @param {String} [type] type of text, ie text, password etc. Defaults to text\r\n   * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * function setup() {\r\n   *   var inp = createInput('');\r\n   *   inp.input(myInputEvent);\r\n   * }\r\n   *\r\n   * function myInputEvent() {\r\n   *   console.log('you are typing: ', this.value());\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.prototype.createInput = function(value, type) {\r\n    p5._validateParameters('createInput', arguments);\r\n    var elt = document.createElement('input');\r\n    elt.type = type ? type : 'text';\r\n    if (value) elt.value = value;\r\n    return addElement(elt, this);\r\n  };\r\n\r\n  /**\r\n   * Creates an &lt;input&gt;&lt;/input&gt; element in the DOM of type 'file'.\r\n   * This allows users to select local files for use in a sketch.\r\n   *\r\n   * @method createFileInput\r\n   * @param  {Function} [callback] callback function for when a file loaded\r\n   * @param  {String} [multiple] optional to allow multiple files selected\r\n   * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created DOM element\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * var input;\r\n   * var img;\r\n   *\r\n   * function setup() {\r\n   *   input = createFileInput(handleFile);\r\n   *   input.position(0, 0);\r\n   * }\r\n   *\r\n   * function draw() {\r\n   *   if (img) {\r\n   *     image(img, 0, 0, width, height);\r\n   *   }\r\n   * }\r\n   *\r\n   * function handleFile(file) {\r\n   *   print(file);\r\n   *   if (file.type === 'image') {\r\n   *     img = createImg(file.data);\r\n   *     img.hide();\r\n   *   }\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.prototype.createFileInput = function(callback, multiple) {\r\n    p5._validateParameters('createFileInput', arguments);\r\n    // Function to handle when a file is selected\r\n    // We're simplifying life and assuming that we always\r\n    // want to load every selected file\r\n    function handleFileSelect(evt) {\r\n      function makeLoader(theFile) {\r\n        // Making a p5.File object\r\n        var p5file = new p5.File(theFile);\r\n        return function(e) {\r\n          p5file.data = e.target.result;\r\n          callback(p5file);\r\n        };\r\n      }\r\n      // These are the files\r\n      var files = evt.target.files;\r\n      // Load each one and trigger a callback\r\n      for (var i = 0; i < files.length; i++) {\r\n        var f = files[i];\r\n        var reader = new FileReader();\r\n\r\n        reader.onload = makeLoader(f);\r\n\r\n        // Text or data?\r\n        // This should likely be improved\r\n        if (f.type.indexOf('text') > -1) {\r\n          reader.readAsText(f);\r\n        } else {\r\n          reader.readAsDataURL(f);\r\n        }\r\n      }\r\n    }\r\n    // Is the file stuff supported?\r\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\r\n      // Yup, we're ok and make an input file selector\r\n      var elt = document.createElement('input');\r\n      elt.type = 'file';\r\n\r\n      // If we get a second argument that evaluates to true\r\n      // then we are looking for multiple files\r\n      if (multiple) {\r\n        // Anything gets the job done\r\n        elt.multiple = 'multiple';\r\n      }\r\n\r\n      // Now let's handle when a file was selected\r\n      elt.addEventListener('change', handleFileSelect, false);\r\n      return addElement(elt, this);\r\n    } else {\r\n      console.log(\r\n        'The File APIs are not fully supported in this browser. Cannot create element.'\r\n      );\r\n    }\r\n  };\r\n\r\n  /** VIDEO STUFF **/\r\n\r\n  function createMedia(pInst, type, src, callback) {\r\n    var elt = document.createElement(type);\r\n\r\n    // allow src to be empty\r\n    src = src || '';\r\n    if (typeof src === 'string') {\r\n      src = [src];\r\n    }\r\n    for (var i = 0; i < src.length; i++) {\r\n      var source = document.createElement('source');\r\n      source.src = src[i];\r\n      elt.appendChild(source);\r\n    }\r\n    if (typeof callback !== 'undefined') {\r\n      var callbackHandler = function() {\r\n        callback();\r\n        elt.removeEventListener('canplaythrough', callbackHandler);\r\n      };\r\n      elt.addEventListener('canplaythrough', callbackHandler);\r\n    }\r\n\r\n    var c = addElement(elt, pInst, true);\r\n    c.loadedmetadata = false;\r\n    // set width and height onload metadata\r\n    elt.addEventListener('loadedmetadata', function() {\r\n      c.width = elt.videoWidth;\r\n      c.height = elt.videoHeight;\r\n      //c.elt.playbackRate = s;\r\n      // set elt width and height if not set\r\n      if (c.elt.width === 0) c.elt.width = elt.videoWidth;\r\n      if (c.elt.height === 0) c.elt.height = elt.videoHeight;\r\n      if (c.presetPlaybackRate) {\r\n        c.elt.playbackRate = c.presetPlaybackRate;\r\n        delete c.presetPlaybackRate;\r\n      }\r\n      c.loadedmetadata = true;\r\n    });\r\n\r\n    return c;\r\n  }\r\n  /**\r\n   * Creates an HTML5 &lt;video&gt; element in the DOM for simple playback\r\n   * of audio/video. Shown by default, can be hidden with .<a href=\"#/p5.Element/hide\">hide()</a>\r\n   * and drawn into canvas using video(). Appends to the container\r\n   * node if one is specified, otherwise appends to body. The first parameter\r\n   * can be either a single string path to a video file, or an array of string\r\n   * paths to different formats of the same video. This is useful for ensuring\r\n   * that your video can play across different browsers, as each supports\r\n   * different formats. See <a href='https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats'>this\r\n   * page</a> for further information about supported formats.\r\n   *\r\n   * @method createVideo\r\n   * @param  {String|String[]} src path to a video file, or array of paths for\r\n   *                             supporting different browsers\r\n   * @param  {Function} [callback] callback function to be called upon\r\n   *                             'canplaythrough' event fire, that is, when the\r\n   *                             browser can play the media, and estimates that\r\n   *                             enough data has been loaded to play the media\r\n   *                             up to its end without having to stop for\r\n   *                             further buffering of content\r\n   * @return {p5.MediaElement}   pointer to video <a href=\"#/p5.Element\">p5.Element</a>\r\n   * @example\r\n   * <div><code>\r\n   * var vid;\r\n   * function setup() {\r\n   *   vid = createVideo(['small.mp4', 'small.ogv', 'small.webm'], vidLoad);\r\n   * }\r\n   *\r\n   * // This function is called when the video loads\r\n   * function vidLoad() {\r\n   *   vid.play();\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.prototype.createVideo = function(src, callback) {\r\n    p5._validateParameters('createVideo', arguments);\r\n    return createMedia(this, 'video', src, callback);\r\n  };\r\n\r\n  /** AUDIO STUFF **/\r\n\r\n  /**\r\n   * Creates a hidden HTML5 &lt;audio&gt; element in the DOM for simple audio\r\n   * playback. Appends to the container node if one is specified,\r\n   * otherwise appends to body. The first parameter\r\n   * can be either a single string path to a audio file, or an array of string\r\n   * paths to different formats of the same audio. This is useful for ensuring\r\n   * that your audio can play across different browsers, as each supports\r\n   * different formats. See <a href='https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats'>this\r\n   * page for further information about supported formats</a>.\r\n   *\r\n   * @method createAudio\r\n   * @param  {String|String[]} [src] path to an audio file, or array of paths\r\n   *                             for supporting different browsers\r\n   * @param  {Function} [callback] callback function to be called upon\r\n   *                             'canplaythrough' event fire, that is, when the\r\n   *                             browser can play the media, and estimates that\r\n   *                             enough data has been loaded to play the media\r\n   *                             up to its end without having to stop for\r\n   *                             further buffering of content\r\n   * @return {p5.MediaElement}   pointer to audio <a href=\"#/p5.Element\">p5.Element</a>\r\n   * @example\r\n   * <div><code>\r\n   * var ele;\r\n   * function setup() {\r\n   *   ele = createAudio('assets/beat.mp3');\r\n   *\r\n   *   // here we set the element to autoplay\r\n   *   // The element will play as soon\r\n   *   // as it is able to do so.\r\n   *   ele.autoplay(true);\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.prototype.createAudio = function(src, callback) {\r\n    p5._validateParameters('createAudio', arguments);\r\n    return createMedia(this, 'audio', src, callback);\r\n  };\r\n\r\n  /** CAMERA STUFF **/\r\n\r\n  /**\r\n   * @property {String} VIDEO\r\n   * @final\r\n   * @category Constants\r\n   */\r\n  p5.prototype.VIDEO = 'video';\r\n  /**\r\n   * @property {String} AUDIO\r\n   * @final\r\n   * @category Constants\r\n   */\r\n  p5.prototype.AUDIO = 'audio';\r\n\r\n  // from: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\r\n  // Older browsers might not implement mediaDevices at all, so we set an empty object first\r\n  if (navigator.mediaDevices === undefined) {\r\n    navigator.mediaDevices = {};\r\n  }\r\n\r\n  // Some browsers partially implement mediaDevices. We can't just assign an object\r\n  // with getUserMedia as it would overwrite existing properties.\r\n  // Here, we will just add the getUserMedia property if it's missing.\r\n  if (navigator.mediaDevices.getUserMedia === undefined) {\r\n    navigator.mediaDevices.getUserMedia = function(constraints) {\r\n      // First get ahold of the legacy getUserMedia, if present\r\n      var getUserMedia =\r\n        navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n\r\n      // Some browsers just don't implement it - return a rejected promise with an error\r\n      // to keep a consistent interface\r\n      if (!getUserMedia) {\r\n        return Promise.reject(\r\n          new Error('getUserMedia is not implemented in this browser')\r\n        );\r\n      }\r\n\r\n      // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\r\n      return new Promise(function(resolve, reject) {\r\n        getUserMedia.call(navigator, constraints, resolve, reject);\r\n      });\r\n    };\r\n  }\r\n\r\n  /**\r\n   * <p>Creates a new HTML5 &lt;video&gt; element that contains the audio/video\r\n   * feed from a webcam. The element is separate from the canvas and is\r\n   * displayed by default. The element can be hidden using .<a href=\"#/p5.Element/hide\">hide()</a>. The feed\r\n   * can be drawn onto the canvas using <a href=\"#/p5/image\">image()</a>. The loadedmetadata property can\r\n   * be used to detect when the element has fully loaded (see second example).</p>\r\n   * <p>More specific properties of the feed can be passing in a Constraints object.\r\n   * See the\r\n   * <a href='http://w3c.github.io/mediacapture-main/getusermedia.html#media-track-constraints'> W3C\r\n   * spec</a> for possible properties. Note that not all of these are supported\r\n   * by all browsers.</p>\r\n   * <p>Security note: A new browser security specification requires that getUserMedia,\r\n   * which is behind <a href=\"#/p5/createCapture\">createCapture()</a>, only works when you're running the code locally,\r\n   * or on HTTPS. Learn more <a href='http://stackoverflow.com/questions/34197653/getusermedia-in-chrome-47-without-using-https'>here</a>\r\n   * and <a href='https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia'>here</a>.</p>\r\n   *\r\n   * @method createCapture\r\n   * @param  {String|Constant|Object}   type type of capture, either VIDEO or\r\n   *                                   AUDIO if none specified, default both,\r\n   *                                   or a Constraints object\r\n   * @param  {Function}                 [callback] function to be called once\r\n   *                                   stream has loaded\r\n   * @return {p5.Element} capture video <a href=\"#/p5.Element\">p5.Element</a>\r\n   * @example\r\n   * <div class='norender notest'><code>\r\n   * var capture;\r\n   *\r\n   * function setup() {\r\n   *   createCanvas(480, 480);\r\n   *   capture = createCapture(VIDEO);\r\n   *   capture.hide();\r\n   * }\r\n   *\r\n   * function draw() {\r\n   *   image(capture, 0, 0, width, width * capture.height / capture.width);\r\n   *   filter(INVERT);\r\n   * }\r\n   * </code></div>\r\n   * <div class='norender notest'><code>\r\n   * function setup() {\r\n   *   createCanvas(480, 120);\r\n   *   var constraints = {\r\n   *     video: {\r\n   *       mandatory: {\r\n   *         minWidth: 1280,\r\n   *         minHeight: 720\r\n   *       },\r\n   *       optional: [{ maxFrameRate: 10 }]\r\n   *     },\r\n   *     audio: true\r\n   *   };\r\n   *   createCapture(constraints, function(stream) {\r\n   *     console.log(stream);\r\n   *   });\r\n   * }\r\n   * </code></div>\r\n   * <code><div class='norender notest'>\r\n   * var capture;\r\n   *\r\n   * function setup() {\r\n   *   createCanvas(640, 480);\r\n   *   capture = createCapture(VIDEO);\r\n   * }\r\n   * function draw() {\r\n   *   background(0);\r\n   *   if (capture.loadedmetadata) {\r\n   *     var c = capture.get(0, 0, 100, 100);\r\n   *     image(c, 0, 0);\r\n   *   }\r\n   * }\r\n   */\r\n  p5.prototype.createCapture = function() {\r\n    p5._validateParameters('createCapture', arguments);\r\n    var useVideo = true;\r\n    var useAudio = true;\r\n    var constraints;\r\n    var cb;\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      if (arguments[i] === p5.prototype.VIDEO) {\r\n        useAudio = false;\r\n      } else if (arguments[i] === p5.prototype.AUDIO) {\r\n        useVideo = false;\r\n      } else if (typeof arguments[i] === 'object') {\r\n        constraints = arguments[i];\r\n      } else if (typeof arguments[i] === 'function') {\r\n        cb = arguments[i];\r\n      }\r\n    }\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n      var elt = document.createElement('video');\r\n      // required to work in iOS 11 & up:\r\n      elt.setAttribute('playsinline', '');\r\n\r\n      if (!constraints) {\r\n        constraints = { video: useVideo, audio: useAudio };\r\n      }\r\n\r\n      navigator.mediaDevices.getUserMedia(constraints).then(\r\n        function(stream) {\r\n          try {\r\n            if ('srcObject' in elt) {\r\n              elt.srcObject = stream;\r\n            } else {\r\n              elt.src = window.URL.createObjectURL(stream);\r\n            }\r\n          } catch (err) {\r\n            elt.src = stream;\r\n          }\r\n          if (cb) {\r\n            cb(stream);\r\n          }\r\n        },\r\n        function(e) {\r\n          console.log(e);\r\n        }\r\n      );\r\n    } else {\r\n      throw 'getUserMedia not supported in this browser';\r\n    }\r\n    var c = addElement(elt, this, true);\r\n    c.loadedmetadata = false;\r\n    // set width and height onload metadata\r\n    elt.addEventListener('loadedmetadata', function() {\r\n      elt.play();\r\n      if (elt.width) {\r\n        c.width = elt.videoWidth = elt.width;\r\n        c.height = elt.videoHeight = elt.height;\r\n      } else {\r\n        c.width = c.elt.width = elt.videoWidth;\r\n        c.height = c.elt.height = elt.videoHeight;\r\n      }\r\n      c.loadedmetadata = true;\r\n    });\r\n    return c;\r\n  };\r\n\r\n  /**\r\n   * Creates element with given tag in the DOM with given content.\r\n   * Appends to the container node if one is specified, otherwise\r\n   * appends to body.\r\n   *\r\n   * @method createElement\r\n   * @param  {String} tag tag for the new element\r\n   * @param  {String} [content] html content to be inserted into the element\r\n   * @return {p5.Element} pointer to <a href=\"#/p5.Element\">p5.Element</a> holding created node\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * createElement('h2', 'im an h2 p5.element!');\r\n   * </code></div>\r\n   */\r\n  p5.prototype.createElement = function(tag, content) {\r\n    p5._validateParameters('createElement', arguments);\r\n    var elt = document.createElement(tag);\r\n    if (typeof content !== 'undefined') {\r\n      elt.innerHTML = content;\r\n    }\r\n    return addElement(elt, this);\r\n  };\r\n\r\n  // =============================================================================\r\n  //                         p5.Element additions\r\n  // =============================================================================\r\n  /**\r\n   *\r\n   * Adds specified class to the element.\r\n   *\r\n   * @for p5.Element\r\n   * @method addClass\r\n   * @param  {String} class name of class to add\r\n   * @chainable\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * var div = createDiv('div');\r\n   * div.addClass('myClass');\r\n   * </code></div>\r\n   */\r\n  p5.Element.prototype.addClass = function(c) {\r\n    if (this.elt.className) {\r\n      // PEND don't add class more than once\r\n      //var regex = new RegExp('[^a-zA-Z\\d:]?'+c+'[^a-zA-Z\\d:]?');\r\n      //if (this.elt.className.search(/[^a-zA-Z\\d:]?hi[^a-zA-Z\\d:]?/) === -1) {\r\n      this.elt.className = this.elt.className + ' ' + c;\r\n      //}\r\n    } else {\r\n      this.elt.className = c;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Removes specified class from the element.\r\n   *\r\n   * @method removeClass\r\n   * @param  {String} class name of class to remove\r\n   * @chainable\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * // In this example, a class is set when the div is created\r\n   * // and removed when mouse is pressed. This could link up\r\n   * // with a CSS style rule to toggle style properties.\r\n   *\r\n   * var div;\r\n   *\r\n   * function setup() {\r\n   *   div = createDiv('div');\r\n   *   div.addClass('myClass');\r\n   * }\r\n   *\r\n   * function mousePressed() {\r\n   *   div.removeClass('myClass');\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.Element.prototype.removeClass = function(c) {\r\n    var regex = new RegExp('(?:^|\\\\s)' + c + '(?!\\\\S)');\r\n    this.elt.className = this.elt.className.replace(regex, '');\r\n    this.elt.className = this.elt.className.replace(/^\\s+|\\s+$/g, ''); //prettify (optional)\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Attaches the element  as a child to the parent specified.\r\n   * Accepts either a string ID, DOM node, or <a href=\"#/p5.Element\">p5.Element</a>.\r\n   * If no argument is specified, an array of children DOM nodes is returned.\r\n   *\r\n   * @method child\r\n   * @returns {Node[]} an array of child nodes\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * var div0 = createDiv('this is the parent');\r\n   * var div1 = createDiv('this is the child');\r\n   * div0.child(div1); // use p5.Element\r\n   * </code></div>\r\n   * <div class='norender'><code>\r\n   * var div0 = createDiv('this is the parent');\r\n   * var div1 = createDiv('this is the child');\r\n   * div1.id('apples');\r\n   * div0.child('apples'); // use id\r\n   * </code></div>\r\n   * <div class='norender notest'><code>\r\n   * var div0 = createDiv('this is the parent');\r\n   * var elt = document.getElementById('myChildDiv');\r\n   * div0.child(elt); // use element from page\r\n   * </code></div>\r\n   */\r\n  /**\r\n   * @method child\r\n   * @param  {String|p5.Element} [child] the ID, DOM node, or <a href=\"#/p5.Element\">p5.Element</a>\r\n   *                         to add to the current element\r\n   * @chainable\r\n   */\r\n  p5.Element.prototype.child = function(c) {\r\n    if (typeof c === 'undefined') {\r\n      return this.elt.childNodes;\r\n    }\r\n    if (typeof c === 'string') {\r\n      if (c[0] === '#') {\r\n        c = c.substring(1);\r\n      }\r\n      c = document.getElementById(c);\r\n    } else if (c instanceof p5.Element) {\r\n      c = c.elt;\r\n    }\r\n    this.elt.appendChild(c);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Centers a p5 Element either vertically, horizontally,\r\n   * or both, relative to its parent or according to\r\n   * the body if the Element has no parent. If no argument is passed\r\n   * the Element is aligned both vertically and horizontally.\r\n   *\r\n   * @method center\r\n   * @param  {String} [align]       passing 'vertical', 'horizontal' aligns element accordingly\r\n   * @chainable\r\n   *\r\n   * @example\r\n   * <div><code>\r\n   * function setup() {\r\n   *   var div = createDiv('').size(10, 10);\r\n   *   div.style('background-color', 'orange');\r\n   *   div.center();\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.Element.prototype.center = function(align) {\r\n    var style = this.elt.style.display;\r\n    var hidden = this.elt.style.display === 'none';\r\n    var parentHidden = this.parent().style.display === 'none';\r\n    var pos = { x: this.elt.offsetLeft, y: this.elt.offsetTop };\r\n\r\n    if (hidden) this.show();\r\n\r\n    this.elt.style.display = 'block';\r\n    this.position(0, 0);\r\n\r\n    if (parentHidden) this.parent().style.display = 'block';\r\n\r\n    var wOffset = Math.abs(this.parent().offsetWidth - this.elt.offsetWidth);\r\n    var hOffset = Math.abs(this.parent().offsetHeight - this.elt.offsetHeight);\r\n    var y = pos.y;\r\n    var x = pos.x;\r\n\r\n    if (align === 'both' || align === undefined) {\r\n      this.position(wOffset / 2, hOffset / 2);\r\n    } else if (align === 'horizontal') {\r\n      this.position(wOffset / 2, y);\r\n    } else if (align === 'vertical') {\r\n      this.position(x, hOffset / 2);\r\n    }\r\n\r\n    this.style('display', style);\r\n\r\n    if (hidden) this.hide();\r\n\r\n    if (parentHidden) this.parent().style.display = 'none';\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * If an argument is given, sets the inner HTML of the element,\r\n   * replacing any existing html. If true is included as a second\r\n   * argument, html is appended instead of replacing existing html.\r\n   * If no arguments are given, returns\r\n   * the inner HTML of the element.\r\n   *\r\n   * @for p5.Element\r\n   * @method html\r\n   * @returns {String} the inner HTML of the element\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * var div = createDiv('').size(100, 100);\r\n   * div.html('hi');\r\n   * </code></div>\r\n   * <div class='norender'><code>\r\n   * var div = createDiv('Hello ').size(100, 100);\r\n   * div.html('World', true);\r\n   * </code></div>\r\n   */\r\n  /**\r\n   * @method html\r\n   * @param  {String} [html] the HTML to be placed inside the element\r\n   * @param  {boolean} [append] whether to append HTML to existing\r\n   * @chainable\r\n   */\r\n  p5.Element.prototype.html = function() {\r\n    if (arguments.length === 0) {\r\n      return this.elt.innerHTML;\r\n    } else if (arguments[1]) {\r\n      this.elt.innerHTML += arguments[0];\r\n      return this;\r\n    } else {\r\n      this.elt.innerHTML = arguments[0];\r\n      return this;\r\n    }\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Sets the position of the element relative to (0, 0) of the\r\n   * window. Essentially, sets position:absolute and left and top\r\n   * properties of style. If no arguments given returns the x and y position\r\n   * of the element in an object.\r\n   *\r\n   * @method position\r\n   * @returns {Object} the x and y position of the element in an object\r\n   * @example\r\n   * <div><code class='norender'>\r\n   * function setup() {\r\n   *   var cnv = createCanvas(100, 100);\r\n   *   // positions canvas 50px to the right and 100px\r\n   *   // below upper left corner of the window\r\n   *   cnv.position(50, 100);\r\n   * }\r\n   * </code></div>\r\n   */\r\n  /**\r\n   * @method position\r\n   * @param  {Number} [x] x-position relative to upper left of window\r\n   * @param  {Number} [y] y-position relative to upper left of window\r\n   * @chainable\r\n   */\r\n  p5.Element.prototype.position = function() {\r\n    if (arguments.length === 0) {\r\n      return { x: this.elt.offsetLeft, y: this.elt.offsetTop };\r\n    } else {\r\n      this.elt.style.position = 'absolute';\r\n      this.elt.style.left = arguments[0] + 'px';\r\n      this.elt.style.top = arguments[1] + 'px';\r\n      this.x = arguments[0];\r\n      this.y = arguments[1];\r\n      return this;\r\n    }\r\n  };\r\n\r\n  /* Helper method called by p5.Element.style() */\r\n  p5.Element.prototype._translate = function() {\r\n    this.elt.style.position = 'absolute';\r\n    // save out initial non-translate transform styling\r\n    var transform = '';\r\n    if (this.elt.style.transform) {\r\n      transform = this.elt.style.transform.replace(/translate3d\\(.*\\)/g, '');\r\n      transform = transform.replace(/translate[X-Z]?\\(.*\\)/g, '');\r\n    }\r\n    if (arguments.length === 2) {\r\n      this.elt.style.transform =\r\n        'translate(' + arguments[0] + 'px, ' + arguments[1] + 'px)';\r\n    } else if (arguments.length > 2) {\r\n      this.elt.style.transform =\r\n        'translate3d(' +\r\n        arguments[0] +\r\n        'px,' +\r\n        arguments[1] +\r\n        'px,' +\r\n        arguments[2] +\r\n        'px)';\r\n      if (arguments.length === 3) {\r\n        this.elt.parentElement.style.perspective = '1000px';\r\n      } else {\r\n        this.elt.parentElement.style.perspective = arguments[3] + 'px';\r\n      }\r\n    }\r\n    // add any extra transform styling back on end\r\n    this.elt.style.transform += transform;\r\n    return this;\r\n  };\r\n\r\n  /* Helper method called by p5.Element.style() */\r\n  p5.Element.prototype._rotate = function() {\r\n    // save out initial non-rotate transform styling\r\n    var transform = '';\r\n    if (this.elt.style.transform) {\r\n      transform = this.elt.style.transform.replace(/rotate3d\\(.*\\)/g, '');\r\n      transform = transform.replace(/rotate[X-Z]?\\(.*\\)/g, '');\r\n    }\r\n\r\n    if (arguments.length === 1) {\r\n      this.elt.style.transform = 'rotate(' + arguments[0] + 'deg)';\r\n    } else if (arguments.length === 2) {\r\n      this.elt.style.transform =\r\n        'rotate(' + arguments[0] + 'deg, ' + arguments[1] + 'deg)';\r\n    } else if (arguments.length === 3) {\r\n      this.elt.style.transform = 'rotateX(' + arguments[0] + 'deg)';\r\n      this.elt.style.transform += 'rotateY(' + arguments[1] + 'deg)';\r\n      this.elt.style.transform += 'rotateZ(' + arguments[2] + 'deg)';\r\n    }\r\n    // add remaining transform back on\r\n    this.elt.style.transform += transform;\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sets the given style (css) property (1st arg) of the element with the\r\n   * given value (2nd arg). If a single argument is given, .style()\r\n   * returns the value of the given property; however, if the single argument\r\n   * is given in css syntax ('text-align:center'), .style() sets the css\r\n   * appropriatly. .style() also handles 2d and 3d css transforms. If\r\n   * the 1st arg is 'rotate', 'translate', or 'position', the following arguments\r\n   * accept Numbers as values. ('translate', 10, 100, 50);\r\n   *\r\n   * @method style\r\n   * @param  {String} property   property to be set\r\n   * @returns {String} value of property\r\n   * @example\r\n   * <div><code class='norender'>\r\n   * var myDiv = createDiv('I like pandas.');\r\n   * myDiv.style('font-size', '18px');\r\n   * myDiv.style('color', '#ff0000');\r\n   * </code></div>\r\n   * <div><code class='norender'>\r\n   * var col = color(25, 23, 200, 50);\r\n   * var button = createButton('button');\r\n   * button.style('background-color', col);\r\n   * button.position(10, 10);\r\n   * </code></div>\r\n   * <div><code class='norender'>\r\n   * var myDiv = createDiv('I like lizards.');\r\n   * myDiv.style('position', 20, 20);\r\n   * myDiv.style('rotate', 45);\r\n   * </code></div>\r\n   * <div><code class='norender'>\r\n   * var myDiv;\r\n   * function setup() {\r\n   *   background(200);\r\n   *   myDiv = createDiv('I like gray.');\r\n   *   myDiv.position(20, 20);\r\n   * }\r\n   *\r\n   * function draw() {\r\n   *   myDiv.style('font-size', mouseX + 'px');\r\n   * }\r\n   * </code></div>\r\n   */\r\n  /**\r\n   * @method style\r\n   * @param  {String} property\r\n   * @param  {String|Number|p5.Color} value     value to assign to property (only String|Number for rotate/translate)\r\n   * @param  {String|Number|p5.Color} [value2]  position can take a 2nd value\r\n   * @param  {String|Number|p5.Color} [value3]  translate can take a 2nd & 3rd value\r\n   * @chainable\r\n   */\r\n  p5.Element.prototype.style = function(prop, val) {\r\n    var self = this;\r\n\r\n    if (val instanceof p5.Color) {\r\n      val =\r\n        'rgba(' +\r\n        val.levels[0] +\r\n        ',' +\r\n        val.levels[1] +\r\n        ',' +\r\n        val.levels[2] +\r\n        ',' +\r\n        val.levels[3] / 255 +\r\n        ')';\r\n    }\r\n\r\n    if (typeof val === 'undefined') {\r\n      if (prop.indexOf(':') === -1) {\r\n        var styles = window.getComputedStyle(self.elt);\r\n        var style = styles.getPropertyValue(prop);\r\n        return style;\r\n      } else {\r\n        var attrs = prop.split(';');\r\n        for (var i = 0; i < attrs.length; i++) {\r\n          var parts = attrs[i].split(':');\r\n          if (parts[0] && parts[1]) {\r\n            this.elt.style[parts[0].trim()] = parts[1].trim();\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (prop === 'rotate' || prop === 'translate' || prop === 'position') {\r\n        var trans = Array.prototype.shift.apply(arguments);\r\n        var f = this[trans] || this['_' + trans];\r\n        f.apply(this, arguments);\r\n      } else {\r\n        this.elt.style[prop] = val;\r\n        if (\r\n          prop === 'width' ||\r\n          prop === 'height' ||\r\n          prop === 'left' ||\r\n          prop === 'top'\r\n        ) {\r\n          var numVal = val.replace(/\\D+/g, '');\r\n          this[prop] = parseInt(numVal, 10); // pend: is this necessary?\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Adds a new attribute or changes the value of an existing attribute\r\n   * on the specified element. If no value is specified, returns the\r\n   * value of the given attribute, or null if attribute is not set.\r\n   *\r\n   * @method attribute\r\n   * @return {String} value of attribute\r\n   *\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * var myDiv = createDiv('I like pandas.');\r\n   * myDiv.attribute('align', 'center');\r\n   * </code></div>\r\n   */\r\n  /**\r\n   * @method attribute\r\n   * @param  {String} attr       attribute to set\r\n   * @param  {String} value      value to assign to attribute\r\n   * @chainable\r\n   */\r\n  p5.Element.prototype.attribute = function(attr, value) {\r\n    //handling for checkboxes and radios to ensure options get\r\n    //attributes not divs\r\n    if (\r\n      this.elt.firstChild != null &&\r\n      (this.elt.firstChild.type === 'checkbox' ||\r\n        this.elt.firstChild.type === 'radio')\r\n    ) {\r\n      if (typeof value === 'undefined') {\r\n        return this.elt.firstChild.getAttribute(attr);\r\n      } else {\r\n        for (var i = 0; i < this.elt.childNodes.length; i++) {\r\n          this.elt.childNodes[i].setAttribute(attr, value);\r\n        }\r\n      }\r\n    } else if (typeof value === 'undefined') {\r\n      return this.elt.getAttribute(attr);\r\n    } else {\r\n      this.elt.setAttribute(attr, value);\r\n      return this;\r\n    }\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Removes an attribute on the specified element.\r\n   *\r\n   * @method removeAttribute\r\n   * @param  {String} attr       attribute to remove\r\n   * @chainable\r\n   *\r\n   * @example\r\n   * <div><code>\r\n   * var button;\r\n   * var checkbox;\r\n   *\r\n   * function setup() {\r\n   *   checkbox = createCheckbox('enable', true);\r\n   *   checkbox.changed(enableButton);\r\n   *   button = createButton('button');\r\n   *   button.position(10, 10);\r\n   * }\r\n   *\r\n   * function enableButton() {\r\n   *   if (this.checked()) {\r\n   *     // Re-enable the button\r\n   *     button.removeAttribute('disabled');\r\n   *   } else {\r\n   *     // Disable the button\r\n   *     button.attribute('disabled', '');\r\n   *   }\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.Element.prototype.removeAttribute = function(attr) {\r\n    if (\r\n      this.elt.firstChild != null &&\r\n      (this.elt.firstChild.type === 'checkbox' ||\r\n        this.elt.firstChild.type === 'radio')\r\n    ) {\r\n      for (var i = 0; i < this.elt.childNodes.length; i++) {\r\n        this.elt.childNodes[i].removeAttribute(attr);\r\n      }\r\n    }\r\n    this.elt.removeAttribute(attr);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Either returns the value of the element if no arguments\r\n   * given, or sets the value of the element.\r\n   *\r\n   * @method value\r\n   * @return {String|Number} value of the element\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * // gets the value\r\n   * var inp;\r\n   * function setup() {\r\n   *   inp = createInput('');\r\n   * }\r\n   *\r\n   * function mousePressed() {\r\n   *   print(inp.value());\r\n   * }\r\n   * </code></div>\r\n   * <div class='norender'><code>\r\n   * // sets the value\r\n   * var inp;\r\n   * function setup() {\r\n   *   inp = createInput('myValue');\r\n   * }\r\n   *\r\n   * function mousePressed() {\r\n   *   inp.value('myValue');\r\n   * }\r\n   * </code></div>\r\n   */\r\n  /**\r\n   * @method value\r\n   * @param  {String|Number}     value\r\n   * @chainable\r\n   */\r\n  p5.Element.prototype.value = function() {\r\n    if (arguments.length > 0) {\r\n      this.elt.value = arguments[0];\r\n      return this;\r\n    } else {\r\n      if (this.elt.type === 'range') {\r\n        return parseFloat(this.elt.value);\r\n      } else return this.elt.value;\r\n    }\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Shows the current element. Essentially, setting display:block for the style.\r\n   *\r\n   * @method show\r\n   * @chainable\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * var div = createDiv('div');\r\n   * div.style('display', 'none');\r\n   * div.show(); // turns display to block\r\n   * </code></div>\r\n   */\r\n  p5.Element.prototype.show = function() {\r\n    this.elt.style.display = 'block';\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Hides the current element. Essentially, setting display:none for the style.\r\n   *\r\n   * @method hide\r\n   * @chainable\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * var div = createDiv('this is a div');\r\n   * div.hide();\r\n   * </code></div>\r\n   */\r\n  p5.Element.prototype.hide = function() {\r\n    this.elt.style.display = 'none';\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Sets the width and height of the element. AUTO can be used to\r\n   * only adjust one dimension. If no arguments given returns the width and height\r\n   * of the element in an object.\r\n   *\r\n   * @method size\r\n   * @return {Object} the width and height of the element in an object\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * var div = createDiv('this is a div');\r\n   * div.size(100, 100);\r\n   * </code></div>\r\n   */\r\n  /**\r\n   * @method size\r\n   * @param  {Number|Constant} w    width of the element, either AUTO, or a number\r\n   * @param  {Number|Constant} [h] height of the element, either AUTO, or a number\r\n   * @chainable\r\n   */\r\n  p5.Element.prototype.size = function(w, h) {\r\n    if (arguments.length === 0) {\r\n      return { width: this.elt.offsetWidth, height: this.elt.offsetHeight };\r\n    } else {\r\n      var aW = w;\r\n      var aH = h;\r\n      var AUTO = p5.prototype.AUTO;\r\n      if (aW !== AUTO || aH !== AUTO) {\r\n        if (aW === AUTO) {\r\n          aW = h * this.width / this.height;\r\n        } else if (aH === AUTO) {\r\n          aH = w * this.height / this.width;\r\n        }\r\n        // set diff for cnv vs normal div\r\n        if (this.elt instanceof HTMLCanvasElement) {\r\n          var j = {};\r\n          var k = this.elt.getContext('2d');\r\n          var prop;\r\n          for (prop in k) {\r\n            j[prop] = k[prop];\r\n          }\r\n          this.elt.setAttribute('width', aW * this._pInst._pixelDensity);\r\n          this.elt.setAttribute('height', aH * this._pInst._pixelDensity);\r\n          this.elt.setAttribute(\r\n            'style',\r\n            'width:' + aW + 'px; height:' + aH + 'px'\r\n          );\r\n          this._pInst.scale(\r\n            this._pInst._pixelDensity,\r\n            this._pInst._pixelDensity\r\n          );\r\n          for (prop in j) {\r\n            this.elt.getContext('2d')[prop] = j[prop];\r\n          }\r\n        } else {\r\n          this.elt.style.width = aW + 'px';\r\n          this.elt.style.height = aH + 'px';\r\n          this.elt.width = aW;\r\n          this.elt.height = aH;\r\n          this.width = aW;\r\n          this.height = aH;\r\n        }\r\n\r\n        this.width = this.elt.offsetWidth;\r\n        this.height = this.elt.offsetHeight;\r\n\r\n        if (this._pInst) {\r\n          // main canvas associated with p5 instance\r\n          if (this._pInst._curElement.elt === this.elt) {\r\n            this._pInst._setProperty('width', this.elt.offsetWidth);\r\n            this._pInst._setProperty('height', this.elt.offsetHeight);\r\n          }\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Removes the element and deregisters all listeners.\r\n   * @method remove\r\n   * @example\r\n   * <div class='norender'><code>\r\n   * var myDiv = createDiv('this is some text');\r\n   * myDiv.remove();\r\n   * </code></div>\r\n   */\r\n  p5.Element.prototype.remove = function() {\r\n    // deregister events\r\n    for (var ev in this._events) {\r\n      this.elt.removeEventListener(ev, this._events[ev]);\r\n    }\r\n    if (this.elt.parentNode) {\r\n      this.elt.parentNode.removeChild(this.elt);\r\n    }\r\n    delete this;\r\n  };\r\n\r\n  // =============================================================================\r\n  //                         p5.MediaElement additions\r\n  // =============================================================================\r\n\r\n  /**\r\n   * Extends <a href=\"#/p5.Element\">p5.Element</a> to handle audio and video. In addition to the methods\r\n   * of <a href=\"#/p5.Element\">p5.Element</a>, it also contains methods for controlling media. It is not\r\n   * called directly, but <a href=\"#/p5.MediaElement\">p5.MediaElement</a>s are created by calling <a href=\"#/p5/createVideo\">createVideo</a>,\r\n   * <a href=\"#/p5/createAudio\">createAudio</a>, and <a href=\"#/p5/createCapture\">createCapture</a>.\r\n   *\r\n   * @class p5.MediaElement\r\n   * @constructor\r\n   * @param {String} elt DOM node that is wrapped\r\n   */\r\n  p5.MediaElement = function(elt, pInst) {\r\n    p5.Element.call(this, elt, pInst);\r\n\r\n    var self = this;\r\n    this.elt.crossOrigin = 'anonymous';\r\n\r\n    this._prevTime = 0;\r\n    this._cueIDCounter = 0;\r\n    this._cues = [];\r\n    this._pixelDensity = 1;\r\n    this._modified = false;\r\n    this._pixelsDirty = true;\r\n    this._pixelsTime = -1; // the time at which we last updated 'pixels'\r\n\r\n    /**\r\n     * Path to the media element source.\r\n     *\r\n     * @property src\r\n     * @return {String} src\r\n     * @example\r\n     * <div><code>\r\n     * var ele;\r\n     *\r\n     * function setup() {\r\n     *   background(250);\r\n     *\r\n     *   //p5.MediaElement objects are usually created\r\n     *   //by calling the createAudio(), createVideo(),\r\n     *   //and createCapture() functions.\r\n     *\r\n     *   //In this example we create\r\n     *   //a new p5.MediaElement via createAudio().\r\n     *   ele = createAudio('assets/beat.mp3');\r\n     *\r\n     *   //We'll set up our example so that\r\n     *   //when you click on the text,\r\n     *   //an alert box displays the MediaElement's\r\n     *   //src field.\r\n     *   textAlign(CENTER);\r\n     *   text('Click Me!', width / 2, height / 2);\r\n     * }\r\n     *\r\n     * function mouseClicked() {\r\n     *   //here we test if the mouse is over the\r\n     *   //canvas element when it's clicked\r\n     *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\r\n     *     //Show our p5.MediaElement's src field\r\n     *     alert(ele.src);\r\n     *   }\r\n     * }\r\n     * </code></div>\r\n     */\r\n    Object.defineProperty(self, 'src', {\r\n      get: function() {\r\n        var firstChildSrc = self.elt.children[0].src;\r\n        var srcVal = self.elt.src === window.location.href ? '' : self.elt.src;\r\n        var ret =\r\n          firstChildSrc === window.location.href ? srcVal : firstChildSrc;\r\n        return ret;\r\n      },\r\n      set: function(newValue) {\r\n        for (var i = 0; i < self.elt.children.length; i++) {\r\n          self.elt.removeChild(self.elt.children[i]);\r\n        }\r\n        var source = document.createElement('source');\r\n        source.src = newValue;\r\n        elt.appendChild(source);\r\n        self.elt.src = newValue;\r\n        self.modified = true;\r\n      }\r\n    });\r\n\r\n    // private _onended callback, set by the method: onended(callback)\r\n    self._onended = function() {};\r\n    self.elt.onended = function() {\r\n      self._onended(self);\r\n    };\r\n  };\r\n  p5.MediaElement.prototype = Object.create(p5.Element.prototype);\r\n\r\n  /**\r\n   * Play an HTML5 media element.\r\n   *\r\n   * @method play\r\n   * @chainable\r\n   * @example\r\n   * <div><code>\r\n   * var ele;\r\n   *\r\n   * function setup() {\r\n   *   //p5.MediaElement objects are usually created\r\n   *   //by calling the createAudio(), createVideo(),\r\n   *   //and createCapture() functions.\r\n   *\r\n   *   //In this example we create\r\n   *   //a new p5.MediaElement via createAudio().\r\n   *   ele = createAudio('assets/beat.mp3');\r\n   *\r\n   *   background(250);\r\n   *   textAlign(CENTER);\r\n   *   text('Click to Play!', width / 2, height / 2);\r\n   * }\r\n   *\r\n   * function mouseClicked() {\r\n   *   //here we test if the mouse is over the\r\n   *   //canvas element when it's clicked\r\n   *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\r\n   *     //Here we call the play() function on\r\n   *     //the p5.MediaElement we created above.\r\n   *     //This will start the audio sample.\r\n   *     ele.play();\r\n   *\r\n   *     background(200);\r\n   *     text('You clicked Play!', width / 2, height / 2);\r\n   *   }\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.MediaElement.prototype.play = function() {\r\n    if (this.elt.currentTime === this.elt.duration) {\r\n      this.elt.currentTime = 0;\r\n    }\r\n    var promise;\r\n    if (this.elt.readyState > 1) {\r\n      promise = this.elt.play();\r\n    } else {\r\n      // in Chrome, playback cannot resume after being stopped and must reload\r\n      this.elt.load();\r\n      promise = this.elt.play();\r\n    }\r\n    if (promise && promise.catch) {\r\n      promise.catch(function(e) {\r\n        console.log(\r\n          'WARN: Element play method raised an error asynchronously',\r\n          e\r\n        );\r\n      });\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Stops an HTML5 media element (sets current time to zero).\r\n   *\r\n   * @method stop\r\n   * @chainable\r\n   * @example\r\n   * <div><code>\r\n   * //This example both starts\r\n   * //and stops a sound sample\r\n   * //when the user clicks the canvas\r\n   *\r\n   * //We will store the p5.MediaElement\r\n   * //object in here\r\n   * var ele;\r\n   *\r\n   * //while our audio is playing,\r\n   * //this will be set to true\r\n   * var sampleIsPlaying = false;\r\n   *\r\n   * function setup() {\r\n   *   //Here we create a p5.MediaElement object\r\n   *   //using the createAudio() function.\r\n   *   ele = createAudio('assets/beat.mp3');\r\n   *   background(200);\r\n   *   textAlign(CENTER);\r\n   *   text('Click to play!', width / 2, height / 2);\r\n   * }\r\n   *\r\n   * function mouseClicked() {\r\n   *   //here we test if the mouse is over the\r\n   *   //canvas element when it's clicked\r\n   *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\r\n   *     background(200);\r\n   *\r\n   *     if (sampleIsPlaying) {\r\n   *       //if the sample is currently playing\r\n   *       //calling the stop() function on\r\n   *       //our p5.MediaElement will stop\r\n   *       //it and reset its current\r\n   *       //time to 0 (i.e. it will start\r\n   *       //at the beginning the next time\r\n   *       //you play it)\r\n   *       ele.stop();\r\n   *\r\n   *       sampleIsPlaying = false;\r\n   *       text('Click to play!', width / 2, height / 2);\r\n   *     } else {\r\n   *       //loop our sound element until we\r\n   *       //call ele.stop() on it.\r\n   *       ele.loop();\r\n   *\r\n   *       sampleIsPlaying = true;\r\n   *       text('Click to stop!', width / 2, height / 2);\r\n   *     }\r\n   *   }\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.MediaElement.prototype.stop = function() {\r\n    this.elt.pause();\r\n    this.elt.currentTime = 0;\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Pauses an HTML5 media element.\r\n   *\r\n   * @method pause\r\n   * @chainable\r\n   * @example\r\n   * <div><code>\r\n   * //This example both starts\r\n   * //and pauses a sound sample\r\n   * //when the user clicks the canvas\r\n   *\r\n   * //We will store the p5.MediaElement\r\n   * //object in here\r\n   * var ele;\r\n   *\r\n   * //while our audio is playing,\r\n   * //this will be set to true\r\n   * var sampleIsPlaying = false;\r\n   *\r\n   * function setup() {\r\n   *   //Here we create a p5.MediaElement object\r\n   *   //using the createAudio() function.\r\n   *   ele = createAudio('assets/lucky_dragons.mp3');\r\n   *   background(200);\r\n   *   textAlign(CENTER);\r\n   *   text('Click to play!', width / 2, height / 2);\r\n   * }\r\n   *\r\n   * function mouseClicked() {\r\n   *   //here we test if the mouse is over the\r\n   *   //canvas element when it's clicked\r\n   *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\r\n   *     background(200);\r\n   *\r\n   *     if (sampleIsPlaying) {\r\n   *       //Calling pause() on our\r\n   *       //p5.MediaElement will stop it\r\n   *       //playing, but when we call the\r\n   *       //loop() or play() functions\r\n   *       //the sample will start from\r\n   *       //where we paused it.\r\n   *       ele.pause();\r\n   *\r\n   *       sampleIsPlaying = false;\r\n   *       text('Click to resume!', width / 2, height / 2);\r\n   *     } else {\r\n   *       //loop our sound element until we\r\n   *       //call ele.pause() on it.\r\n   *       ele.loop();\r\n   *\r\n   *       sampleIsPlaying = true;\r\n   *       text('Click to pause!', width / 2, height / 2);\r\n   *     }\r\n   *   }\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.MediaElement.prototype.pause = function() {\r\n    this.elt.pause();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Set 'loop' to true for an HTML5 media element, and starts playing.\r\n   *\r\n   * @method loop\r\n   * @chainable\r\n   * @example\r\n   * <div><code>\r\n   * //Clicking the canvas will loop\r\n   * //the audio sample until the user\r\n   * //clicks again to stop it\r\n   *\r\n   * //We will store the p5.MediaElement\r\n   * //object in here\r\n   * var ele;\r\n   *\r\n   * //while our audio is playing,\r\n   * //this will be set to true\r\n   * var sampleIsLooping = false;\r\n   *\r\n   * function setup() {\r\n   *   //Here we create a p5.MediaElement object\r\n   *   //using the createAudio() function.\r\n   *   ele = createAudio('assets/lucky_dragons.mp3');\r\n   *   background(200);\r\n   *   textAlign(CENTER);\r\n   *   text('Click to loop!', width / 2, height / 2);\r\n   * }\r\n   *\r\n   * function mouseClicked() {\r\n   *   //here we test if the mouse is over the\r\n   *   //canvas element when it's clicked\r\n   *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\r\n   *     background(200);\r\n   *\r\n   *     if (!sampleIsLooping) {\r\n   *       //loop our sound element until we\r\n   *       //call ele.stop() on it.\r\n   *       ele.loop();\r\n   *\r\n   *       sampleIsLooping = true;\r\n   *       text('Click to stop!', width / 2, height / 2);\r\n   *     } else {\r\n   *       ele.stop();\r\n   *\r\n   *       sampleIsLooping = false;\r\n   *       text('Click to loop!', width / 2, height / 2);\r\n   *     }\r\n   *   }\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.MediaElement.prototype.loop = function() {\r\n    this.elt.setAttribute('loop', true);\r\n    this.play();\r\n    return this;\r\n  };\r\n  /**\r\n   * Set 'loop' to false for an HTML5 media element. Element will stop\r\n   * when it reaches the end.\r\n   *\r\n   * @method noLoop\r\n   * @chainable\r\n   * @example\r\n   * <div><code>\r\n   * //This example both starts\r\n   * //and stops loop of sound sample\r\n   * //when the user clicks the canvas\r\n   *\r\n   * //We will store the p5.MediaElement\r\n   * //object in here\r\n   * var ele;\r\n   * //while our audio is playing,\r\n   * //this will be set to true\r\n   * var sampleIsPlaying = false;\r\n   *\r\n   * function setup() {\r\n   *   //Here we create a p5.MediaElement object\r\n   *   //using the createAudio() function.\r\n   *   ele = createAudio('assets/beat.mp3');\r\n   *   background(200);\r\n   *   textAlign(CENTER);\r\n   *   text('Click to play!', width / 2, height / 2);\r\n   * }\r\n   *\r\n   * function mouseClicked() {\r\n   *   //here we test if the mouse is over the\r\n   *   //canvas element when it's clicked\r\n   *   if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\r\n   *     background(200);\r\n   *\r\n   *     if (sampleIsPlaying) {\r\n   *       ele.noLoop();\r\n   *       text('No more Loops!', width / 2, height / 2);\r\n   *     } else {\r\n   *       ele.loop();\r\n   *       sampleIsPlaying = true;\r\n   *       text('Click to stop looping!', width / 2, height / 2);\r\n   *     }\r\n   *   }\r\n   * }\r\n   * </code></div>\r\n   *\r\n   */\r\n  p5.MediaElement.prototype.noLoop = function() {\r\n    this.elt.setAttribute('loop', false);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Set HTML5 media element to autoplay or not.\r\n   *\r\n   * @method autoplay\r\n   * @param {Boolean} autoplay whether the element should autoplay\r\n   * @chainable\r\n   */\r\n  p5.MediaElement.prototype.autoplay = function(val) {\r\n    this.elt.setAttribute('autoplay', val);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sets volume for this HTML5 media element. If no argument is given,\r\n   * returns the current volume.\r\n   *\r\n   * @method volume\r\n   * @return {Number} current volume\r\n   *\r\n   * @example\r\n   * <div><code>\r\n   * var ele;\r\n   * function setup() {\r\n   *   // p5.MediaElement objects are usually created\r\n   *   // by calling the createAudio(), createVideo(),\r\n   *   // and createCapture() functions.\r\n   *   // In this example we create\r\n   *   // a new p5.MediaElement via createAudio().\r\n   *   ele = createAudio('assets/lucky_dragons.mp3');\r\n   *   background(250);\r\n   *   textAlign(CENTER);\r\n   *   text('Click to Play!', width / 2, height / 2);\r\n   * }\r\n   * function mouseClicked() {\r\n   *   // Here we call the volume() function\r\n   *   // on the sound element to set its volume\r\n   *   // Volume must be between 0.0 and 1.0\r\n   *   ele.volume(0.2);\r\n   *   ele.play();\r\n   *   background(200);\r\n   *   text('You clicked Play!', width / 2, height / 2);\r\n   * }\r\n   * </code></div>\r\n   * <div><code>\r\n   * var audio;\r\n   * var counter = 0;\r\n   *\r\n   * function loaded() {\r\n   *   audio.play();\r\n   * }\r\n   *\r\n   * function setup() {\r\n   *   audio = createAudio('assets/lucky_dragons.mp3', loaded);\r\n   *   textAlign(CENTER);\r\n   * }\r\n   *\r\n   * function draw() {\r\n   *   if (counter === 0) {\r\n   *     background(0, 255, 0);\r\n   *     text('volume(0.9)', width / 2, height / 2);\r\n   *   } else if (counter === 1) {\r\n   *     background(255, 255, 0);\r\n   *     text('volume(0.5)', width / 2, height / 2);\r\n   *   } else if (counter === 2) {\r\n   *     background(255, 0, 0);\r\n   *     text('volume(0.1)', width / 2, height / 2);\r\n   *   }\r\n   * }\r\n   *\r\n   * function mousePressed() {\r\n   *   counter++;\r\n   *   if (counter === 0) {\r\n   *     audio.volume(0.9);\r\n   *   } else if (counter === 1) {\r\n   *     audio.volume(0.5);\r\n   *   } else if (counter === 2) {\r\n   *     audio.volume(0.1);\r\n   *   } else {\r\n   *     counter = 0;\r\n   *     audio.volume(0.9);\r\n   *   }\r\n   * }\r\n   * </code>\r\n   * </div>\r\n   */\r\n  /**\r\n   * @method volume\r\n   * @param {Number}            val volume between 0.0 and 1.0\r\n   * @chainable\r\n   */\r\n  p5.MediaElement.prototype.volume = function(val) {\r\n    if (typeof val === 'undefined') {\r\n      return this.elt.volume;\r\n    } else {\r\n      this.elt.volume = val;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * If no arguments are given, returns the current playback speed of the\r\n   * element. The speed parameter sets the speed where 2.0 will play the\r\n   * element twice as fast, 0.5 will play at half the speed, and -1 will play\r\n   * the element in normal speed in reverse.(Note that not all browsers support\r\n   * backward playback and even if they do, playback might not be smooth.)\r\n   *\r\n   * @method speed\r\n   * @return {Number} current playback speed of the element\r\n   *\r\n   * @example\r\n   * <div class='norender notest'><code>\r\n   * //Clicking the canvas will loop\r\n   * //the audio sample until the user\r\n   * //clicks again to stop it\r\n   *\r\n   * //We will store the p5.MediaElement\r\n   * //object in here\r\n   * var ele;\r\n   * var button;\r\n   *\r\n   * function setup() {\r\n   *   createCanvas(710, 400);\r\n   *   //Here we create a p5.MediaElement object\r\n   *   //using the createAudio() function.\r\n   *   ele = createAudio('assets/beat.mp3');\r\n   *   ele.loop();\r\n   *   background(200);\r\n   *\r\n   *   button = createButton('2x speed');\r\n   *   button.position(100, 68);\r\n   *   button.mousePressed(twice_speed);\r\n   *\r\n   *   button = createButton('half speed');\r\n   *   button.position(200, 68);\r\n   *   button.mousePressed(half_speed);\r\n   *\r\n   *   button = createButton('reverse play');\r\n   *   button.position(300, 68);\r\n   *   button.mousePressed(reverse_speed);\r\n   *\r\n   *   button = createButton('STOP');\r\n   *   button.position(400, 68);\r\n   *   button.mousePressed(stop_song);\r\n   *\r\n   *   button = createButton('PLAY!');\r\n   *   button.position(500, 68);\r\n   *   button.mousePressed(play_speed);\r\n   * }\r\n   *\r\n   * function twice_speed() {\r\n   *   ele.speed(2);\r\n   * }\r\n   *\r\n   * function half_speed() {\r\n   *   ele.speed(0.5);\r\n   * }\r\n   *\r\n   * function reverse_speed() {\r\n   *   ele.speed(-1);\r\n   * }\r\n   *\r\n   * function stop_song() {\r\n   *   ele.stop();\r\n   * }\r\n   *\r\n   * function play_speed() {\r\n   *   ele.play();\r\n   * }\r\n   * </code></div>\r\n   */\r\n  /**\r\n   * @method speed\r\n   * @param {Number} speed  speed multiplier for element playback\r\n   * @chainable\r\n   */\r\n  p5.MediaElement.prototype.speed = function(val) {\r\n    if (typeof val === 'undefined') {\r\n      return this.presetPlaybackRate || this.elt.playbackRate;\r\n    } else {\r\n      if (this.loadedmetadata) {\r\n        this.elt.playbackRate = val;\r\n      } else {\r\n        this.presetPlaybackRate = val;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * If no arguments are given, returns the current time of the element.\r\n   * If an argument is given the current time of the element is set to it.\r\n   *\r\n   * @method time\r\n   * @return {Number} current time (in seconds)\r\n   *\r\n   * @example\r\n   * <div><code>\r\n   * var ele;\r\n   * var beginning = true;\r\n   * function setup() {\r\n   *   //p5.MediaElement objects are usually created\r\n   *   //by calling the createAudio(), createVideo(),\r\n   *   //and createCapture() functions.\r\n   *\r\n   *   //In this example we create\r\n   *   //a new p5.MediaElement via createAudio().\r\n   *   ele = createAudio('assets/lucky_dragons.mp3');\r\n   *   background(250);\r\n   *   textAlign(CENTER);\r\n   *   text('start at beginning', width / 2, height / 2);\r\n   * }\r\n   *\r\n   * // this function fires with click anywhere\r\n   * function mousePressed() {\r\n   *   if (beginning === true) {\r\n   *     // here we start the sound at the beginning\r\n   *     // time(0) is not necessary here\r\n   *     // as this produces the same result as\r\n   *     // play()\r\n   *     ele.play().time(0);\r\n   *     background(200);\r\n   *     text('jump 2 sec in', width / 2, height / 2);\r\n   *     beginning = false;\r\n   *   } else {\r\n   *     // here we jump 2 seconds into the sound\r\n   *     ele.play().time(2);\r\n   *     background(250);\r\n   *     text('start at beginning', width / 2, height / 2);\r\n   *     beginning = true;\r\n   *   }\r\n   * }\r\n   * </code></div>\r\n   */\r\n  /**\r\n   * @method time\r\n   * @param {Number} time time to jump to (in seconds)\r\n   * @chainable\r\n   */\r\n  p5.MediaElement.prototype.time = function(val) {\r\n    if (typeof val === 'undefined') {\r\n      return this.elt.currentTime;\r\n    } else {\r\n      this.elt.currentTime = val;\r\n      return this;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the duration of the HTML5 media element.\r\n   *\r\n   * @method duration\r\n   * @return {Number} duration\r\n   *\r\n   * @example\r\n   * <div><code>\r\n   * var ele;\r\n   * function setup() {\r\n   *   //p5.MediaElement objects are usually created\r\n   *   //by calling the createAudio(), createVideo(),\r\n   *   //and createCapture() functions.\r\n   *   //In this example we create\r\n   *   //a new p5.MediaElement via createAudio().\r\n   *   ele = createAudio('assets/doorbell.mp3');\r\n   *   background(250);\r\n   *   textAlign(CENTER);\r\n   *   text('Click to know the duration!', 10, 25, 70, 80);\r\n   * }\r\n   * function mouseClicked() {\r\n   *   ele.play();\r\n   *   background(200);\r\n   *   //ele.duration dislpays the duration\r\n   *   text(ele.duration() + ' seconds', width / 2, height / 2);\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.MediaElement.prototype.duration = function() {\r\n    return this.elt.duration;\r\n  };\r\n  p5.MediaElement.prototype.pixels = [];\r\n  p5.MediaElement.prototype.loadPixels = function() {\r\n    if (!this.canvas) {\r\n      this.canvas = document.createElement('canvas');\r\n      this.drawingContext = this.canvas.getContext('2d');\r\n    }\r\n    if (this.loadedmetadata) {\r\n      // wait for metadata for w/h\r\n      if (this.canvas.width !== this.elt.width) {\r\n        this.canvas.width = this.elt.width;\r\n        this.canvas.height = this.elt.height;\r\n        this.width = this.canvas.width;\r\n        this.height = this.canvas.height;\r\n        this._pixelsDirty = true;\r\n      }\r\n\r\n      var currentTime = this.elt.currentTime;\r\n      if (this._pixelsDirty || this._pixelsTime !== currentTime) {\r\n        // only update the pixels array if it's dirty, or\r\n        // if the video time has changed.\r\n        this._pixelsTime = currentTime;\r\n        this._pixelsDirty = true;\r\n\r\n        this.drawingContext.drawImage(\r\n          this.elt,\r\n          0,\r\n          0,\r\n          this.canvas.width,\r\n          this.canvas.height\r\n        );\r\n        p5.Renderer2D.prototype.loadPixels.call(this);\r\n      }\r\n    }\r\n    this.setModified(true);\r\n    return this;\r\n  };\r\n  p5.MediaElement.prototype.updatePixels = function(x, y, w, h) {\r\n    if (this.loadedmetadata) {\r\n      // wait for metadata\r\n      p5.Renderer2D.prototype.updatePixels.call(this, x, y, w, h);\r\n    }\r\n    this.setModified(true);\r\n    return this;\r\n  };\r\n  p5.MediaElement.prototype.get = function(x, y, w, h) {\r\n    if (this.loadedmetadata) {\r\n      // wait for metadata\r\n      var currentTime = this.elt.currentTime;\r\n      if (this._pixelsTime !== currentTime) {\r\n        // if the video has changed time, then force an\r\n        // update to the pixels array.\r\n        this._pixelsDirty = true;\r\n        this._pixelsTime = currentTime;\r\n      }\r\n\r\n      return p5.Renderer2D.prototype.get.call(this, x, y, w, h);\r\n    } else if (typeof x === 'undefined') {\r\n      return new p5.Image(1, 1);\r\n    } else if (w > 1) {\r\n      return new p5.Image(x, y, w, h);\r\n    } else {\r\n      return [0, 0, 0, 255];\r\n    }\r\n  };\r\n  p5.MediaElement.prototype.set = function(x, y, imgOrCol) {\r\n    if (this.loadedmetadata) {\r\n      // wait for metadata\r\n      p5.Renderer2D.prototype.set.call(this, x, y, imgOrCol);\r\n      this.setModified(true);\r\n    }\r\n  };\r\n  p5.MediaElement.prototype.copy = function() {\r\n    p5.Renderer2D.prototype.copy.apply(this, arguments);\r\n  };\r\n  p5.MediaElement.prototype.mask = function() {\r\n    this.loadPixels();\r\n    this.setModified(true);\r\n    p5.Image.prototype.mask.apply(this, arguments);\r\n  };\r\n  /**\r\n   * helper method for web GL mode to figure out if the element\r\n   * has been modified and might need to be re-uploaded to texture\r\n   * memory between frames.\r\n   * @method isModified\r\n   * @private\r\n   * @return {boolean} a boolean indicating whether or not the\r\n   * image has been updated or modified since last texture upload.\r\n   */\r\n  p5.MediaElement.prototype.isModified = function() {\r\n    return this._modified;\r\n  };\r\n  /**\r\n   * helper method for web GL mode to indicate that an element has been\r\n   * changed or unchanged since last upload. gl texture upload will\r\n   * set this value to false after uploading the texture; or might set\r\n   * it to true if metadata has become available but there is no actual\r\n   * texture data available yet..\r\n   * @method setModified\r\n   * @param {boolean} val sets whether or not the element has been\r\n   * modified.\r\n   * @private\r\n   */\r\n  p5.MediaElement.prototype.setModified = function(value) {\r\n    this._modified = value;\r\n  };\r\n  /**\r\n   * Schedule an event to be called when the audio or video\r\n   * element reaches the end. If the element is looping,\r\n   * this will not be called. The element is passed in\r\n   * as the argument to the onended callback.\r\n   *\r\n   * @method  onended\r\n   * @param  {Function} callback function to call when the\r\n   *                             soundfile has ended. The\r\n   *                             media element will be passed\r\n   *                             in as the argument to the\r\n   *                             callback.\r\n   * @chainable\r\n   * @example\r\n   * <div><code>\r\n   * function setup() {\r\n   *   var audioEl = createAudio('assets/beat.mp3');\r\n   *   audioEl.showControls();\r\n   *   audioEl.onended(sayDone);\r\n   * }\r\n   *\r\n   * function sayDone(elt) {\r\n   *   alert('done playing ' + elt.src);\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.MediaElement.prototype.onended = function(callback) {\r\n    this._onended = callback;\r\n    return this;\r\n  };\r\n\r\n  /*** CONNECT TO WEB AUDIO API / p5.sound.js ***/\r\n\r\n  /**\r\n   * Send the audio output of this element to a specified audioNode or\r\n   * p5.sound object. If no element is provided, connects to p5's master\r\n   * output. That connection is established when this method is first called.\r\n   * All connections are removed by the .disconnect() method.\r\n   *\r\n   * This method is meant to be used with the p5.sound.js addon library.\r\n   *\r\n   * @method  connect\r\n   * @param  {AudioNode|Object} audioNode AudioNode from the Web Audio API,\r\n   * or an object from the p5.sound library\r\n   */\r\n  p5.MediaElement.prototype.connect = function(obj) {\r\n    var audioContext, masterOutput;\r\n\r\n    // if p5.sound exists, same audio context\r\n    if (typeof p5.prototype.getAudioContext === 'function') {\r\n      audioContext = p5.prototype.getAudioContext();\r\n      masterOutput = p5.soundOut.input;\r\n    } else {\r\n      try {\r\n        audioContext = obj.context;\r\n        masterOutput = audioContext.destination;\r\n      } catch (e) {\r\n        throw 'connect() is meant to be used with Web Audio API or p5.sound.js';\r\n      }\r\n    }\r\n\r\n    // create a Web Audio MediaElementAudioSourceNode if none already exists\r\n    if (!this.audioSourceNode) {\r\n      this.audioSourceNode = audioContext.createMediaElementSource(this.elt);\r\n\r\n      // connect to master output when this method is first called\r\n      this.audioSourceNode.connect(masterOutput);\r\n    }\r\n\r\n    // connect to object if provided\r\n    if (obj) {\r\n      if (obj.input) {\r\n        this.audioSourceNode.connect(obj.input);\r\n      } else {\r\n        this.audioSourceNode.connect(obj);\r\n      }\r\n    } else {\r\n      // otherwise connect to master output of p5.sound / AudioContext\r\n      this.audioSourceNode.connect(masterOutput);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Disconnect all Web Audio routing, including to master output.\r\n   * This is useful if you want to re-route the output through\r\n   * audio effects, for example.\r\n   *\r\n   * @method  disconnect\r\n   */\r\n  p5.MediaElement.prototype.disconnect = function() {\r\n    if (this.audioSourceNode) {\r\n      this.audioSourceNode.disconnect();\r\n    } else {\r\n      throw 'nothing to disconnect';\r\n    }\r\n  };\r\n\r\n  /*** SHOW / HIDE CONTROLS ***/\r\n\r\n  /**\r\n   * Show the default MediaElement controls, as determined by the web browser.\r\n   *\r\n   * @method  showControls\r\n   * @example\r\n   * <div><code>\r\n   * var ele;\r\n   * function setup() {\r\n   *   //p5.MediaElement objects are usually created\r\n   *   //by calling the createAudio(), createVideo(),\r\n   *   //and createCapture() functions.\r\n   *   //In this example we create\r\n   *   //a new p5.MediaElement via createAudio()\r\n   *   ele = createAudio('assets/lucky_dragons.mp3');\r\n   *   background(200);\r\n   *   textAlign(CENTER);\r\n   *   text('Click to Show Controls!', 10, 25, 70, 80);\r\n   * }\r\n   * function mousePressed() {\r\n   *   ele.showControls();\r\n   *   background(200);\r\n   *   text('Controls Shown', width / 2, height / 2);\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.MediaElement.prototype.showControls = function() {\r\n    // must set style for the element to show on the page\r\n    this.elt.style['text-align'] = 'inherit';\r\n    this.elt.controls = true;\r\n  };\r\n\r\n  /**\r\n   * Hide the default mediaElement controls.\r\n   * @method hideControls\r\n   * @example\r\n   * <div><code>\r\n   * var ele;\r\n   * function setup() {\r\n   *   //p5.MediaElement objects are usually created\r\n   *   //by calling the createAudio(), createVideo(),\r\n   *   //and createCapture() functions.\r\n   *   //In this example we create\r\n   *   //a new p5.MediaElement via createAudio()\r\n   *   ele = createAudio('assets/lucky_dragons.mp3');\r\n   *   ele.showControls();\r\n   *   background(200);\r\n   *   textAlign(CENTER);\r\n   *   text('Click to hide Controls!', 10, 25, 70, 80);\r\n   * }\r\n   * function mousePressed() {\r\n   *   ele.hideControls();\r\n   *   background(200);\r\n   *   text('Controls hidden', width / 2, height / 2);\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.MediaElement.prototype.hideControls = function() {\r\n    this.elt.controls = false;\r\n  };\r\n\r\n  /*** SCHEDULE EVENTS ***/\r\n\r\n  // Cue inspired by JavaScript setTimeout, and the\r\n  // Tone.js Transport Timeline Event, MIT License Yotam Mann 2015 tonejs.org\r\n  var Cue = function(callback, time, id, val) {\r\n    this.callback = callback;\r\n    this.time = time;\r\n    this.id = id;\r\n    this.val = val;\r\n  };\r\n\r\n  /**\r\n   * Schedule events to trigger every time a MediaElement\r\n   * (audio/video) reaches a playback cue point.\r\n   *\r\n   * Accepts a callback function, a time (in seconds) at which to trigger\r\n   * the callback, and an optional parameter for the callback.\r\n   *\r\n   * Time will be passed as the first parameter to the callback function,\r\n   * and param will be the second parameter.\r\n   *\r\n   *\r\n   * @method  addCue\r\n   * @param {Number}   time     Time in seconds, relative to this media\r\n   *                             element's playback. For example, to trigger\r\n   *                             an event every time playback reaches two\r\n   *                             seconds, pass in the number 2. This will be\r\n   *                             passed as the first parameter to\r\n   *                             the callback function.\r\n   * @param {Function} callback Name of a function that will be\r\n   *                             called at the given time. The callback will\r\n   *                             receive time and (optionally) param as its\r\n   *                             two parameters.\r\n   * @param {Object} [value]    An object to be passed as the\r\n   *                             second parameter to the\r\n   *                             callback function.\r\n   * @return {Number} id ID of this cue,\r\n   *                     useful for removeCue(id)\r\n   * @example\r\n   * <div><code>\r\n   * //\r\n   * //\r\n   * function setup() {\r\n   *   noCanvas();\r\n   *\r\n   *   var audioEl = createAudio('assets/beat.mp3');\r\n   *   audioEl.showControls();\r\n   *\r\n   *   // schedule three calls to changeBackground\r\n   *   audioEl.addCue(0.5, changeBackground, color(255, 0, 0));\r\n   *   audioEl.addCue(1.0, changeBackground, color(0, 255, 0));\r\n   *   audioEl.addCue(2.5, changeBackground, color(0, 0, 255));\r\n   *   audioEl.addCue(3.0, changeBackground, color(0, 255, 255));\r\n   *   audioEl.addCue(4.2, changeBackground, color(255, 255, 0));\r\n   *   audioEl.addCue(5.0, changeBackground, color(255, 255, 0));\r\n   * }\r\n   *\r\n   * function changeBackground(val) {\r\n   *   background(val);\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.MediaElement.prototype.addCue = function(time, callback, val) {\r\n    var id = this._cueIDCounter++;\r\n\r\n    var cue = new Cue(callback, time, id, val);\r\n    this._cues.push(cue);\r\n\r\n    if (!this.elt.ontimeupdate) {\r\n      this.elt.ontimeupdate = this._onTimeUpdate.bind(this);\r\n    }\r\n\r\n    return id;\r\n  };\r\n\r\n  /**\r\n   * Remove a callback based on its ID. The ID is returned by the\r\n   * addCue method.\r\n   * @method removeCue\r\n   * @param  {Number} id ID of the cue, as returned by addCue\r\n   * @example\r\n   * <div><code>\r\n   * var audioEl, id1, id2;\r\n   * function setup() {\r\n   *   background(255, 255, 255);\r\n   *   audioEl = createAudio('assets/beat.mp3');\r\n   *   audioEl.showControls();\r\n   *   // schedule five calls to changeBackground\r\n   *   id1 = audioEl.addCue(0.5, changeBackground, color(255, 0, 0));\r\n   *   audioEl.addCue(1.0, changeBackground, color(0, 255, 0));\r\n   *   audioEl.addCue(2.5, changeBackground, color(0, 0, 255));\r\n   *   audioEl.addCue(3.0, changeBackground, color(0, 255, 255));\r\n   *   id2 = audioEl.addCue(4.2, changeBackground, color(255, 255, 0));\r\n   *   text('Click to remove first and last Cue!', 10, 25, 70, 80);\r\n   * }\r\n   * function mousePressed() {\r\n   *   audioEl.removeCue(id1);\r\n   *   audioEl.removeCue(id2);\r\n   * }\r\n   * function changeBackground(val) {\r\n   *   background(val);\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.MediaElement.prototype.removeCue = function(id) {\r\n    for (var i = 0; i < this._cues.length; i++) {\r\n      if (this._cues[i].id === id) {\r\n        console.log(id);\r\n        this._cues.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    if (this._cues.length === 0) {\r\n      this.elt.ontimeupdate = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Remove all of the callbacks that had originally been scheduled\r\n   * via the addCue method.\r\n   * @method  clearCues\r\n   * @param  {Number} id ID of the cue, as returned by addCue\r\n   * @example\r\n   * <div><code>\r\n   * var audioEl;\r\n   * function setup() {\r\n   *   background(255, 255, 255);\r\n   *   audioEl = createAudio('assets/beat.mp3');\r\n   *   //Show the default MediaElement controls, as determined by the web browser\r\n   *   audioEl.showControls();\r\n   *   // schedule calls to changeBackground\r\n   *   background(200);\r\n   *   text('Click to change Cue!', 10, 25, 70, 80);\r\n   *   audioEl.addCue(0.5, changeBackground, color(255, 0, 0));\r\n   *   audioEl.addCue(1.0, changeBackground, color(0, 255, 0));\r\n   *   audioEl.addCue(2.5, changeBackground, color(0, 0, 255));\r\n   *   audioEl.addCue(3.0, changeBackground, color(0, 255, 255));\r\n   *   audioEl.addCue(4.2, changeBackground, color(255, 255, 0));\r\n   * }\r\n   * function mousePressed() {\r\n   *   // here we clear the scheduled callbacks\r\n   *   audioEl.clearCues();\r\n   *   // then we add some more callbacks\r\n   *   audioEl.addCue(1, changeBackground, color(2, 2, 2));\r\n   *   audioEl.addCue(3, changeBackground, color(255, 255, 0));\r\n   * }\r\n   * function changeBackground(val) {\r\n   *   background(val);\r\n   * }\r\n   * </code></div>\r\n   */\r\n  p5.MediaElement.prototype.clearCues = function() {\r\n    this._cues = [];\r\n    this.elt.ontimeupdate = null;\r\n  };\r\n\r\n  // private method that checks for cues to be fired if events\r\n  // have been scheduled using addCue(callback, time).\r\n  p5.MediaElement.prototype._onTimeUpdate = function() {\r\n    var playbackTime = this.time();\r\n\r\n    for (var i = 0; i < this._cues.length; i++) {\r\n      var callbackTime = this._cues[i].time;\r\n      var val = this._cues[i].val;\r\n\r\n      if (this._prevTime < callbackTime && callbackTime <= playbackTime) {\r\n        // pass the scheduled callbackTime as parameter to the callback\r\n        this._cues[i].callback(val);\r\n      }\r\n    }\r\n\r\n    this._prevTime = playbackTime;\r\n  };\r\n\r\n  // =============================================================================\r\n  //                         p5.File\r\n  // =============================================================================\r\n\r\n  /**\r\n   * Base class for a file\r\n   * Using this for createFileInput\r\n   *\r\n   * @class p5.File\r\n   * @constructor\r\n   * @param {File} file File that is wrapped\r\n   */\r\n  p5.File = function(file, pInst) {\r\n    /**\r\n     * Underlying File object. All normal File methods can be called on this.\r\n     *\r\n     * @property file\r\n     */\r\n    this.file = file;\r\n\r\n    this._pInst = pInst;\r\n\r\n    // Splitting out the file type into two components\r\n    // This makes determining if image or text etc simpler\r\n    var typeList = file.type.split('/');\r\n    /**\r\n     * File type (image, text, etc.)\r\n     *\r\n     * @property type\r\n     */\r\n    this.type = typeList[0];\r\n    /**\r\n     * File subtype (usually the file extension jpg, png, xml, etc.)\r\n     *\r\n     * @property subtype\r\n     */\r\n    this.subtype = typeList[1];\r\n    /**\r\n     * File name\r\n     *\r\n     * @property name\r\n     */\r\n    this.name = file.name;\r\n    /**\r\n     * File size\r\n     *\r\n     * @property size\r\n     */\r\n    this.size = file.size;\r\n\r\n    /**\r\n     * URL string containing image data.\r\n     *\r\n     * @property data\r\n     */\r\n    this.data = undefined;\r\n  };\r\n});\r\n"]}