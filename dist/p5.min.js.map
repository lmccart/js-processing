{"version":3,"file":"p5.min.js","sources":["src/var/shim.js","src/var/constants.js","src/core/core.js","src/math/pvector.js","src/color/creating_reading.js","src/color/setting.js","src/data/array_functions.js","src/data/string_functions.js","src/input/mouse.js","src/input/touch.js","src/dom/pelement.js","src/dom/manipulate.js","src/environment/environment.js","src/var/canvas.js","src/image/filters.js","src/image/image.js","src/image/loading_displaying.js","node_modules/reqwest/reqwest.js","src/input/files.js","src/input/keyboard.js","src/input/time_date.js","src/math/calculation.js","src/math/random.js","src/math/noise.js","src/var/polargeometry.js","src/math/trigonometry.js","src/output/files.js","src/output/image.js","src/output/text_area.js","src/shape/2d_primitives.js","src/shape/attributes.js","src/shape/curves.js","src/shape/vertex.js","src/structure/structure.js","src/var/linearalgebra.js","src/transform/transform.js","src/typography/attributes.js","src/typography/loading_displaying.js","src/app.js"],"names":[],"mappings":"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","sourcesContent":["var shim = function (require) {\n        window.requestDraw = function () {\n            return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback, element) {\n                window.setTimeout(callback, 1000 / 60);\n            };\n        }();\n    }({});\n","var constants = function (require) {\n        var PI = Math.PI;\n        return {\n            ARROW: 'default',\n            CROSS: 'crosshair',\n            HAND: 'pointer',\n            MOVE: 'move',\n            TEXT: 'text',\n            WAIT: 'wait',\n            HALF_PI: PI / 2,\n            PI: PI,\n            QUARTER_PI: PI / 4,\n            TAU: PI * 2,\n            TWO_PI: PI * 2,\n            DEGREES: 'degrees',\n            RADIANS: 'radians',\n            CORNER: 'corner',\n            CORNERS: 'corners',\n            RADIUS: 'radius',\n            RIGHT: 'right',\n            LEFT: 'left',\n            CENTER: 'center',\n            POINTS: 'points',\n            LINES: 'lines',\n            TRIANGLES: 'triangles',\n            TRIANGLE_FAN: 'triangles_fan',\n            TRIANGLE_STRIP: 'triangles_strip',\n            QUADS: 'quads',\n            QUAD_STRIP: 'quad_strip',\n            CLOSE: 'close',\n            OPEN: 'open',\n            CHORD: 'chord',\n            PIE: 'pie',\n            PROJECT: 'square',\n            SQUARE: 'butt',\n            ROUND: 'round',\n            BEVEL: 'bevel',\n            MITER: 'miter',\n            RGB: 'rgb',\n            HSB: 'hsb',\n            AUTO: 'auto',\n            NORMAL: 'normal',\n            ITALIC: 'italic',\n            BOLD: 'bold'\n        };\n    }({});\n","var core = function (require, shim, constants) {\n        'use strict';\n        var constants = constants;\n        var p5 = function (sketch, node) {\n            return new Sketch(sketch, node);\n        };\n        p5.prototype = { constructor: p5 };\n        var Sketch = function (sketch, node) {\n            this.frameCount = 0;\n            this.focused = true;\n            this.displayWidth = screen.width;\n            this.displayHeight = screen.height;\n            this.shapeKind = null;\n            this.shapeInited = false;\n            this.mouseX = 0;\n            this.mouseY = 0;\n            this.pmouseX = 0;\n            this.pmouseY = 0;\n            this.mouseButton = 0;\n            this.key = '';\n            this.keyCode = 0;\n            this.keyDown = false;\n            this.touchX = 0;\n            this.touchY = 0;\n            this.pWriters = [];\n            this._bezierDetail = 20;\n            this._curveDetail = 20;\n            this.curElement = null;\n            this.matrices = [[\n                    1,\n                    0,\n                    0,\n                    1,\n                    0,\n                    0\n                ]];\n            this.settings = {\n                loop: true,\n                fill: false,\n                updateInterval: 0,\n                rectMode: constants.CORNER,\n                imageMode: constants.CORNER,\n                ellipseMode: constants.CENTER,\n                colorMode: constants.RGB,\n                mousePressed: false,\n                angleMode: constants.RADIANS\n            };\n            this._startTime = new Date().getTime();\n            this._userNode = node;\n            this._preloadCount = 0;\n            this._isGlobal = false;\n            this._frameRate = 0;\n            this._lastFrameTime = 0;\n            this._targetFrameRate = 60;\n            this._textLeading = 15;\n            this._textFont = 'sans-serif';\n            this._textSize = 12;\n            this._textStyle = constants.NORMAL;\n            this._curveDetail = 20;\n            this.styles = [];\n            if (!sketch) {\n                this._isGlobal = true;\n                for (var method in p5.prototype) {\n                    window[method] = p5.prototype[method].bind(this);\n                }\n                for (var prop in this) {\n                    if (this.hasOwnProperty(prop)) {\n                        window[prop] = this[prop];\n                    }\n                }\n                for (var constant in constants) {\n                    if (constants.hasOwnProperty(constant)) {\n                        window[constant] = constants[constant];\n                    }\n                }\n            } else {\n                sketch(this);\n            }\n            if (document.readyState === 'complete') {\n                this._start();\n            } else {\n                window.addEventListener('load', this._start.bind(this), false);\n            }\n        };\n        Sketch.prototype = p5.prototype;\n        p5.extend = p5.prototype.extend = function (obj) {\n            for (var prop in obj) {\n                if (obj.hasOwnProperty(prop) && obj[prop] && obj[prop] instanceof Function) {\n                    p5.prototype[prop] = obj[prop];\n                }\n            }\n        };\n        p5.prototype._start = function () {\n            this.createCanvas(800, 600, true);\n            if (this._userNode) {\n                if (typeof this._userNode === 'string') {\n                    this._userNode = document.getElementById(this._userNode);\n                }\n            }\n            var userPreload = this.preload || window.preload;\n            var context = this._isGlobal ? window : this;\n            if (userPreload) {\n                context.loadJSON = function (path) {\n                    return context._preload('loadJSON', path);\n                };\n                context.loadStrings = function (path) {\n                    return context._preload('loadStrings', path);\n                };\n                context.loadXML = function (path) {\n                    return context._preload('loadXML', path);\n                };\n                context.loadImage = function (path) {\n                    return context._preload('loadImage', path);\n                };\n                userPreload();\n                context.loadJSON = p5.prototype.loadJSON;\n                context.loadStrings = p5.prototype.loadStrings;\n                context.loadXML = p5.prototype.loadXML;\n                context.loadImage = p5.prototype.loadImage;\n            } else {\n                this._setup();\n                this._runFrames();\n                this._draw();\n            }\n        };\n        p5.prototype._preload = function (func, path) {\n            var context = this._isGlobal ? window : this;\n            context._setProperty('preload-count', context._preloadCount + 1);\n            return this[func](path, function (resp) {\n                context._setProperty('preload-count', context._preloadCount - 1);\n                if (context._preloadCount === 0) {\n                    context._setup();\n                    context._runFrames();\n                    context._draw();\n                }\n            });\n        };\n        p5.prototype._setup = function () {\n            var userSetup = this.setup || window.setup;\n            if (typeof userSetup === 'function') {\n                userSetup();\n            }\n        };\n        p5.prototype._draw = function () {\n            var now = new Date().getTime();\n            this._frameRate = 1000 / (now - this._lastFrameTime);\n            this._lastFrameTime = now;\n            var userDraw = this.draw || window.draw;\n            if (this.settings.loop) {\n                setTimeout(function () {\n                    window.requestDraw(this._draw.bind(this));\n                }.bind(this), 1000 / this._targetFrameRate);\n            }\n            if (typeof userDraw === 'function') {\n                userDraw();\n            }\n            this.curElement.context.setTransform(1, 0, 0, 1, 0, 0);\n        };\n        p5.prototype._runFrames = function () {\n            if (this.updateInterval) {\n                clearInterval(this.updateInterval);\n            }\n            this.updateInterval = setInterval(function () {\n                this._setProperty('frameCount', this.frameCount + 1);\n            }.bind(this), 1000 / this._targetFrameRate);\n        };\n        p5.prototype._applyDefaults = function () {\n            this.curElement.context.fillStyle = '#FFFFFF';\n            this.curElement.context.strokeStyle = '#000000';\n            this.curElement.context.lineCap = constants.ROUND;\n        };\n        p5.prototype._setProperty = function (prop, value) {\n            this[prop] = value;\n            if (this._isGlobal) {\n                window[prop] = value;\n            }\n        };\n        return p5;\n    }({}, shim, constants);\n","var mathpvector = function (require, core) {\n        'use strict';\n        var p5 = core;\n        function PVector(x, y, z) {\n            var sketch;\n            if (Object.getOwnPropertyNames(this).length > 0) {\n                sketch = this;\n            }\n            return new Vector(x, y, z, sketch);\n        }\n        p5.extend({ 'PVector': PVector });\n        function Vector(x, y, z, sketch) {\n            if (sketch) {\n                this.sketch = sketch;\n                console.log(this.sketch);\n                console.log('current angle mode is ' + this.sketch.settings.angleMode);\n            }\n            this.x = x || 0;\n            this.y = y || 0;\n            this.z = z || 0;\n        }\n        Vector.prototype.set = function (x, y, z) {\n            if (x instanceof Vector) {\n                return this.set(x.x, x.y, x.z);\n            }\n            if (x instanceof Array) {\n                return this.set(x[0], x[1], x[2]);\n            }\n            this.x = x || 0;\n            this.y = y || 0;\n            this.z = z || 0;\n        };\n        Vector.prototype.get = function () {\n            return new Vector(this.x, this.y, this.z);\n        };\n        Vector.prototype.add = function (x, y, z) {\n            if (x instanceof Vector) {\n                return this.add(x.x, x.y, x.z);\n            }\n            if (x instanceof Array) {\n                return this.add(x[0], x[1], x[2]);\n            }\n            this.x += x || 0;\n            this.y += y || 0;\n            this.z += z || 0;\n            return this;\n        };\n        Vector.prototype.sub = function (x, y, z) {\n            if (x instanceof Vector) {\n                return this.sub(x.x, x.y, x.z);\n            }\n            if (x instanceof Array) {\n                return this.sub(x[0], x[1], x[2]);\n            }\n            this.x -= x || 0;\n            this.y -= y || 0;\n            this.z -= z || 0;\n            return this;\n        };\n        Vector.prototype.mult = function (n) {\n            this.x *= n || 0;\n            this.y *= n || 0;\n            this.z *= n || 0;\n            return this;\n        };\n        Vector.prototype.div = function (n) {\n            this.x /= n;\n            this.y /= n;\n            this.z /= n;\n            return this;\n        };\n        Vector.prototype.mag = function () {\n            return Math.sqrt(this.magSq());\n        };\n        Vector.prototype.magSq = function () {\n            var x = this.x, y = this.y, z = this.z;\n            return x * x + y * y + z * z;\n        };\n        Vector.prototype.dot = function (x, y, z) {\n            if (x instanceof Vector) {\n                return this.dot(x.x, x.y, x.z);\n            }\n            return this.x * (x || 0) + this.y * (y || 0) + this.z * (z || 0);\n        };\n        Vector.prototype.cross = function (v) {\n            var x = this.y * v.z - this.z * v.y;\n            var y = this.z * v.x - this.x * v.z;\n            var z = this.x * v.y - this.y * v.x;\n            return new Vector(x, y, z);\n        };\n        Vector.prototype.dist = function (v) {\n            var d = v.get().sub(this);\n            return d.mag();\n        };\n        Vector.prototype.normalize = function () {\n            return this.div(this.mag());\n        };\n        Vector.prototype.limit = function (l) {\n            var mSq = this.magSq();\n            if (mSq > l * l) {\n                this.div(Math.sqrt(mSq));\n                this.mult(l);\n            }\n            return this;\n        };\n        Vector.prototype.setMag = function (n) {\n            return this.normalize().mult(n);\n        };\n        Vector.prototype.heading = function () {\n            return Math.atan2(this.y, this.x);\n        };\n        Vector.prototype.rotate2D = function (a) {\n            var newHeading = this.heading() + a;\n            var mag = this.mag();\n            this.x = Math.cos(newHeading) * mag;\n            this.y = Math.sin(newHeading) * mag;\n            return this;\n        };\n        Vector.prototype.lerp = function (x, y, z, amt) {\n            if (x instanceof Vector) {\n                return this.lerp(x.x, x.y, x.z, y);\n            }\n            this.x += (x - this.x) * amt || 0;\n            this.y += (y - this.y) * amt || 0;\n            this.z += (z - this.z) * amt || 0;\n            return this;\n        };\n        Vector.prototype.array = function () {\n            return [\n                this.x || 0,\n                this.y || 0,\n                this.z || 0\n            ];\n        };\n        Vector.fromAngle = function (angle) {\n            return new Vector(Math.cos(angle), Math.sin(angle), 0);\n        };\n        Vector.random2D = function () {\n            return this.fromAngle(Math.random(Math.PI * 2));\n        };\n        Vector.random3D = function () {\n            var angle = Math.random() * Math.PI * 2;\n            var vz = Math.random() * 2 - 1;\n            var vx = Math.sqrt(1 - vz * vz) * Math.cos(angle);\n            var vy = Math.sqrt(1 - vz * vz) * Math.sin(angle);\n            return new Vector(vx, vy, vz);\n        };\n        Vector.add = function (v1, v2) {\n            return v1.get().add(v2);\n        };\n        Vector.sub = function (v1, v2) {\n            return v1.get().sub(v2);\n        };\n        Vector.mult = function (v, n) {\n            return v.get().mult(n);\n        };\n        Vector.div = function (v, n) {\n            return v.get().div(n);\n        };\n        Vector.dot = function (v1, v2) {\n            return v1.dot(v2);\n        };\n        Vector.cross = function (v1, v2) {\n            return v1.cross(v2);\n        };\n        Vector.dist = function (v1, v2) {\n            return v1.dist(v2);\n        };\n        Vector.lerp = function (v1, v2, amt) {\n            return v1.get().lerp(v2, amt);\n        };\n        Vector.angleBetween = function (v1, v2) {\n            return Math.acos(v1.dot(v2) / (v1.mag() * v2.mag()));\n        };\n        return PVector;\n    }({}, core);\n","var colorcreating_reading = function (require, core) {\n        'use strict';\n        var p5 = core;\n        p5.prototype.alpha = function (rgb) {\n            if (rgb.length > 3) {\n                return rgb[3];\n            } else {\n                return 255;\n            }\n        };\n        p5.prototype.blue = function (rgb) {\n            if (rgb.length > 2) {\n                return rgb[2];\n            } else {\n                return 0;\n            }\n        };\n        p5.prototype.brightness = function (hsv) {\n            if (hsv.length > 2) {\n                return hsv[2];\n            } else {\n                return 0;\n            }\n        };\n        p5.prototype.color = function () {\n            return this.getNormalizedColor(arguments);\n        };\n        p5.prototype.green = function (rgb) {\n            if (rgb.length > 2) {\n                return rgb[1];\n            } else {\n                return 0;\n            }\n        };\n        p5.prototype.hue = function (hsv) {\n            if (hsv.length > 2) {\n                return hsv[0];\n            } else {\n                return 0;\n            }\n        };\n        p5.prototype.lerpColor = function (c1, c2, amt) {\n            var c = [];\n            for (var i = 0; i < c1.length; i++) {\n                c.push(p5.prototype.lerp(c1[i], c2[i], amt));\n            }\n            return c;\n        };\n        p5.prototype.red = function (rgb) {\n            if (rgb.length > 2) {\n                return rgb[0];\n            } else {\n                return 0;\n            }\n        };\n        p5.prototype.saturation = function (hsv) {\n            if (hsv.length > 2) {\n                return hsv[1];\n            } else {\n                return 0;\n            }\n        };\n        return p5;\n    }({}, core);\n","var colorsetting = function (require, core, constants) {\n        'use strict';\n        var p5 = core;\n        var constants = constants;\n        p5.prototype.background = function () {\n            var c = this.getNormalizedColor(arguments);\n            var curFill = this.curElement.context.fillStyle;\n            this.curElement.context.fillStyle = this.getCSSRGBAColor(c);\n            this.curElement.context.fillRect(0, 0, this.width, this.height);\n            this.curElement.context.fillStyle = curFill;\n        };\n        p5.prototype.clear = function () {\n            this.curElement.context.clearRect(0, 0, this.width, this.height);\n        };\n        p5.prototype.colorMode = function (mode) {\n            if (mode === constants.RGB || mode === constants.HSB) {\n                this.settings.colorMode = mode;\n            }\n        };\n        p5.prototype.fill = function () {\n            var c = this.getNormalizedColor(arguments);\n            this.curElement.context.fillStyle = this.getCSSRGBAColor(c);\n        };\n        p5.prototype.noFill = function () {\n            this.curElement.context.fillStyle = 'rgba(0,0,0,0)';\n        };\n        p5.prototype.noStroke = function () {\n            this.curElement.context.strokeStyle = 'rgba(0,0,0,0)';\n        };\n        p5.prototype.stroke = function () {\n            var c = this.getNormalizedColor(arguments);\n            this.curElement.context.strokeStyle = this.getCSSRGBAColor(c);\n        };\n        p5.prototype.getNormalizedColor = function (args) {\n            var r, g, b, a, rgba;\n            var _args = typeof args[0].length === 'number' ? args[0] : args;\n            if (_args.length >= 3) {\n                r = _args[0];\n                g = _args[1];\n                b = _args[2];\n                a = typeof _args[3] === 'number' ? _args[3] : 255;\n            } else {\n                r = g = b = _args[0];\n                a = typeof _args[1] === 'number' ? _args[1] : 255;\n            }\n            if (this.settings.colorMode === constants.HSB) {\n                rgba = this.hsv2rgb(r, g, b).concat(a);\n            } else {\n                rgba = [\n                    r,\n                    g,\n                    b,\n                    a\n                ];\n            }\n            return rgba;\n        };\n        p5.prototype.hsv2rgb = function (h, s, b) {\n            return [\n                h,\n                s,\n                b\n            ];\n        };\n        p5.prototype.getCSSRGBAColor = function (arr) {\n            var a = arr.map(function (val) {\n                    return Math.floor(val);\n                });\n            var alpha = a[3] ? a[3] / 255 : 1;\n            return 'rgba(' + a[0] + ',' + a[1] + ',' + a[2] + ',' + alpha + ')';\n        };\n        return p5;\n    }({}, core, constants);\n","var dataarray_functions = function (require, core) {\n        'use strict';\n        var p5 = core;\n        p5.prototype.append = function (array, value) {\n            array.push(value);\n            return array;\n        };\n        p5.prototype.arrayCopy = function (src, srcPosition, dst, dstPosition, length) {\n            var start, end;\n            if (typeof length !== 'undefined') {\n                end = Math.min(length, src.length);\n                start = dstPosition;\n                src = src.slice(srcPosition, end + srcPosition);\n            } else {\n                if (typeof dst !== 'undefined') {\n                    end = dst;\n                    end = Math.min(end, src.length);\n                } else {\n                    end = src.length;\n                }\n                start = 0;\n                dst = srcPosition;\n                src = src.slice(0, end);\n            }\n            Array.prototype.splice.apply(dst, [\n                start,\n                end\n            ].concat(src));\n        };\n        p5.prototype.concat = function (list0, list1) {\n            return list0.concat(list1);\n        };\n        p5.prototype.reverse = function (list) {\n            return list.reverse();\n        };\n        p5.prototype.shorten = function (list) {\n            list.pop();\n            return list;\n        };\n        p5.prototype.sort = function (list, count) {\n            var arr = count ? list.slice(0, Math.min(count, list.length)) : list;\n            var rest = count ? list.slice(Math.min(count, list.length)) : [];\n            if (typeof arr[0] === 'string') {\n                arr = arr.sort();\n            } else {\n                arr = arr.sort(function (a, b) {\n                    return a - b;\n                });\n            }\n            return arr.concat(rest);\n        };\n        p5.prototype.splice = function (list, value, index) {\n            Array.prototype.splice.apply(list, [\n                index,\n                0\n            ].concat(value));\n            return list;\n        };\n        p5.prototype.subset = function (list, start, count) {\n            if (typeof count !== 'undefined') {\n                return list.slice(start, start + count);\n            } else {\n                return list.slice(start, list.length);\n            }\n        };\n        return p5;\n    }({}, core);\n","var datastring_functions = function (require, core) {\n        'use strict';\n        var p5 = core;\n        p5.prototype.join = function (list, separator) {\n            return list.join(separator);\n        };\n        p5.prototype.match = function (str, reg) {\n            return str.match(reg);\n        };\n        p5.prototype.matchAll = function (str, reg) {\n            var re = new RegExp(reg, 'g');\n            var match = re.exec(str);\n            var matches = [];\n            while (match !== null) {\n                matches.push(match);\n                match = re.exec(str);\n            }\n            return matches;\n        };\n        p5.prototype.nf = function () {\n            if (arguments[0] instanceof Array) {\n                var a = arguments[1];\n                var b = arguments[2];\n                return arguments[0].map(function (x) {\n                    return doNf(x, a, b);\n                });\n            } else {\n                return doNf.apply(this, arguments);\n            }\n        };\n        function doNf() {\n            var num = arguments[0];\n            var neg = num < 0;\n            var n = neg ? num.toString().substring(1) : num.toString();\n            var decimalInd = n.indexOf('.');\n            var intPart = decimalInd !== -1 ? n.substring(0, decimalInd) : n;\n            var decPart = decimalInd !== -1 ? n.substring(decimalInd + 1) : '';\n            var str = neg ? '-' : '';\n            if (arguments.length === 3) {\n                for (var i = 0; i < arguments[1] - intPart.length; i++) {\n                    str += '0';\n                }\n                str += intPart;\n                str += '.';\n                str += decPart;\n                for (var j = 0; j < arguments[2] - decPart.length; j++) {\n                    str += '0';\n                }\n                return str;\n            } else {\n                for (var k = 0; k < Math.max(arguments[1] - intPart.length, 0); k++) {\n                    str += '0';\n                }\n                str += n;\n                return str;\n            }\n        }\n        p5.prototype.nfc = function () {\n            if (arguments[0] instanceof Array) {\n                var a = arguments[1];\n                return arguments[0].map(function (x) {\n                    return doNfc(x, a);\n                });\n            } else {\n                return doNfc.apply(this, arguments);\n            }\n        };\n        function doNfc() {\n            var num = arguments[0].toString();\n            var dec = num.indexOf('.');\n            var rem = dec !== -1 ? num.substring(dec) : '';\n            var n = dec !== -1 ? num.substring(0, dec) : num;\n            n = n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n            if (arguments.length > 1) {\n                rem = rem.substring(0, arguments[1] + 1);\n            }\n            return n + rem;\n        }\n        p5.prototype.nfp = function () {\n            var nfRes = this.nf(arguments);\n            if (nfRes instanceof Array) {\n                return nfRes.map(addNfp);\n            } else {\n                return addNfp(nfRes);\n            }\n        };\n        function addNfp() {\n            return parseFloat(arguments[0]) > 0 ? '+' + arguments[0].toString() : arguments[0].toString();\n        }\n        p5.prototype.nfs = function () {\n            var nfRes = this.nf(arguments);\n            if (nfRes instanceof Array) {\n                return nfRes.map(addNfs);\n            } else {\n                return addNfs(nfRes);\n            }\n        };\n        function addNfs() {\n            return parseFloat(arguments[0]) > 0 ? ' ' + arguments[0].toString() : arguments[0].toString();\n        }\n        p5.prototype.split = function (str, delim) {\n            return str.split(delim);\n        };\n        p5.prototype.splitTokens = function () {\n            var d = arguments.length > 0 ? arguments[1] : /\\s/g;\n            return arguments[0].split(d).filter(function (n) {\n                return n;\n            });\n        };\n        p5.prototype.trim = function (str) {\n            if (str instanceof Array) {\n                return str.map(this.trim);\n            } else {\n                return str.trim();\n            }\n        };\n        return p5;\n    }({}, core);\n","var inputmouse = function (require, core, constants) {\n        'use strict';\n        var p5 = core;\n        var constants = constants;\n        p5.prototype.isMousePressed = p5.prototype.mouseIsPressed = function () {\n            return this.settings.mousePressed;\n        };\n        p5.prototype.updateMouseCoords = function (e) {\n            this._setProperty('pmouseX', this.mouseX);\n            this._setProperty('pmouseY', this.mouseY);\n            this._setProperty('mouseX', Math.max(e.pageX - this.curElement.x, 0));\n            this._setProperty('mouseY', Math.max(e.pageY - this.curElement.y, 0));\n            this._setProperty('pwinMouseX', this.winMouseX);\n            this._setProperty('pwinMouseY', this.winMouseY);\n            this._setProperty('winMouseX', e.pageX);\n            this._setProperty('winMouseY', e.pageY);\n        };\n        p5.prototype.setMouseButton = function (e) {\n            if (e.button === 1) {\n                this._setProperty('mouseButton', constants.CENTER);\n            } else if (e.button === 2) {\n                this._setProperty('mouseButton', constants.RIGHT);\n            } else {\n                this._setProperty('mouseButton', constants.LEFT);\n            }\n        };\n        p5.prototype.onmousemove = function (e) {\n            var context = this._isGlobal ? window : this;\n            this.updateMouseCoords(e);\n            if (!this.isMousePressed() && typeof context.mouseMoved === 'function') {\n                context.mouseMoved(e);\n            }\n            if (this.isMousePressed() && typeof context.mouseDragged === 'function') {\n                context.mouseDragged(e);\n            }\n        };\n        p5.prototype.onmousedown = function (e) {\n            var context = this._isGlobal ? window : this;\n            this.settings.mousePressed = true;\n            this.setMouseButton(e);\n            if (typeof context.mousePressed === 'function') {\n                context.mousePressed(e);\n            }\n        };\n        p5.prototype.onmouseup = function (e) {\n            var context = this._isGlobal ? window : this;\n            this.settings.mousePressed = false;\n            if (typeof context.mouseReleased === 'function') {\n                context.mouseReleased(e);\n            }\n        };\n        p5.prototype.onmouseclick = function (e) {\n            var context = this._isGlobal ? window : this;\n            if (typeof context.mouseClicked === 'function') {\n                context.mouseClicked(e);\n            }\n        };\n        p5.prototype.onmousewheel = function (e) {\n            var context = this._isGlobal ? window : this;\n            if (typeof context.mouseWheel === 'function') {\n                context.mouseWheel(e);\n            }\n        };\n        return p5;\n    }({}, core, constants);\n","var inputtouch = function (require, core) {\n        'use strict';\n        var p5 = core;\n        p5.prototype.setTouchPoints = function (e) {\n            this._setProperty('touchX', e.changedTouches[0].pageX);\n            this._setProperty('touchY', e.changedTouches[0].pageY);\n            var touches = [];\n            for (var i = 0; i < e.changedTouches.length; i++) {\n                var ct = e.changedTouches[i];\n                touches[i] = {\n                    x: ct.pageX,\n                    y: ct.pageY\n                };\n            }\n            this._setProperty('touches', touches);\n        };\n        p5.prototype.ontouchstart = function (e) {\n            this.setTouchPoints(e);\n            if (typeof this.touchStarted === 'function') {\n                this.touchStarted(e);\n            }\n            var m = typeof touchMoved === 'function';\n            if (m) {\n                e.preventDefault();\n            }\n        };\n        p5.prototype.ontouchmove = function (e) {\n            this.setTouchPoints(e);\n            if (typeof this.touchMoved === 'function') {\n                this.touchMoved(e);\n            }\n        };\n        p5.prototype.ontouchend = function (e) {\n            this.setTouchPoints(e);\n            if (typeof this.touchEnded === 'function') {\n                this.touchEnded(e);\n            }\n        };\n        return p5;\n    }({}, core);\n","var dompelement = function (require, constants) {\n        var constants = constants;\n        function PElement(elt, pInst) {\n            this.elt = elt;\n            this.pInst = pInst;\n            this.width = this.elt.offsetWidth;\n            this.height = this.elt.offsetHeight;\n            this.elt.style.position = 'absolute';\n            this.x = 0;\n            this.y = 0;\n            this.elt.style.left = this.x + 'px';\n            this.elt.style.top = this.y + 'px';\n            if (elt instanceof HTMLCanvasElement) {\n                this.context = elt.getContext('2d');\n            }\n        }\n        PElement.prototype.html = function (html) {\n            this.elt.innerHTML = html;\n        };\n        PElement.prototype.position = function (x, y) {\n            this.x = x;\n            this.y = y;\n            this.elt.style.left = x + 'px';\n            this.elt.style.top = y + 'px';\n        };\n        PElement.prototype.size = function (w, h) {\n            var aW = w;\n            var aH = h;\n            var AUTO = constants.AUTO;\n            if (aW !== AUTO || aH !== AUTO) {\n                if (aW === AUTO) {\n                    aW = h * this.elt.width / this.elt.height;\n                } else if (aH === AUTO) {\n                    aH = w * this.elt.height / this.elt.width;\n                }\n                if (this.elt instanceof HTMLCanvasElement) {\n                    this.elt.setAttribute('width', aW);\n                    this.elt.setAttribute('height', aH);\n                } else {\n                    this.elt.style.width = aW;\n                    this.elt.style.height = aH;\n                }\n                this.width = this.elt.offsetWidth;\n                this.height = this.elt.offsetHeight;\n                if (this.pInst.curElement.elt === this.elt) {\n                    this.pInst.width = this.elt.offsetWidth;\n                    this.pInst.height = this.elt.offsetHeight;\n                }\n            }\n        };\n        PElement.prototype.style = function (s) {\n            this.elt.style.cssText += s;\n        };\n        PElement.prototype.id = function (id) {\n            this.elt.id = id;\n        };\n        PElement.prototype.class = function (c) {\n            this.elt.className = c;\n        };\n        PElement.prototype.show = function () {\n            this.elt.style.display = 'block';\n        };\n        PElement.prototype.hide = function () {\n            this.elt.style.display = 'none';\n        };\n        PElement.prototype.mousePressed = function (fxn) {\n            var _this = this;\n            this.elt.addEventListener('click', function (e) {\n                fxn(e, _this);\n            }, false);\n        };\n        PElement.prototype.mouseOver = function (fxn) {\n            var _this = this;\n            this.elt.addEventListener('mouseover', function (e) {\n                fxn(e, _this);\n            }, false);\n        };\n        PElement.prototype.mouseOut = function (fxn) {\n            var _this = this;\n            this.elt.addEventListener('mouseout', function (e) {\n                fxn(e, _this);\n            }, false);\n        };\n        return PElement;\n    }({}, constants);\n","var dommanipulate = function (require, core, inputmouse, inputtouch, dompelement) {\n        var p5 = core;\n        var PElement = dompelement;\n        p5.prototype.createCanvas = function (w, h, isDefault) {\n            var c = document.createElement('canvas');\n            c.setAttribute('width', w);\n            c.setAttribute('height', h);\n            if (isDefault) {\n                c.id = 'defaultCanvas';\n                document.body.appendChild(c);\n            } else {\n                var defaultCanvas = document.getElementById('defaultCanvas');\n                if (defaultCanvas) {\n                    defaultCanvas.parentNode.removeChild(defaultCanvas);\n                }\n                if (this._userNode) {\n                    if (this._userNode.tagName === 'CANVAS') {\n                        c = this._userNode;\n                        c.setAttribute('width', w);\n                        c.setAttribute('height', h);\n                    } else {\n                        this._userNode.appendChild(c);\n                    }\n                } else {\n                    document.body.appendChild(c);\n                }\n            }\n            var cnv = new PElement(c, this);\n            this.context(cnv);\n            this._applyDefaults();\n            return cnv;\n        };\n        p5.prototype.createHTML = function (html) {\n            var elt = document.createElement('div');\n            elt.innerHTML = html;\n            document.body.appendChild(elt);\n            var c = new PElement(elt, this);\n            return c;\n        };\n        p5.prototype.createHTMLImage = function (src, alt) {\n            var elt = document.createElement('img');\n            elt.src = src;\n            if (typeof alt !== 'undefined') {\n                elt.alt = alt;\n            }\n            document.body.appendChild(elt);\n            var c = new PElement(elt, this);\n            return c;\n        };\n        p5.prototype.find = function (e) {\n            var res = document.getElementById(e);\n            if (res) {\n                return [new PElement(res, this)];\n            } else {\n                res = document.getElementsByClassName(e);\n                if (res) {\n                    var arr = [];\n                    for (var i = 0, resl = res.length; i !== resl; i++) {\n                        arr.push(new PElement(res[i], this));\n                    }\n                    return arr;\n                }\n            }\n            return [];\n        };\n        p5.prototype.context = function (e) {\n            var obj;\n            if (typeof e === 'string' || e instanceof String) {\n                var elt = document.getElementById(e);\n                obj = elt ? new PElement(elt, this) : null;\n            } else {\n                obj = e;\n            }\n            if (typeof obj !== 'undefined') {\n                this.curElement = obj;\n                this._setProperty('width', obj.elt.offsetWidth);\n                this._setProperty('height', obj.elt.offsetHeight);\n                this.curElement.onfocus = function () {\n                    this.focused = true;\n                };\n                this.curElement.onblur = function () {\n                    this.focused = false;\n                };\n                if (!this._isGlobal) {\n                    this.curElement.context.canvas.onmousemove = this.onmousemove.bind(this);\n                    this.curElement.context.canvas.onmousedown = this.onmousedown.bind(this);\n                    this.curElement.context.canvas.onmouseup = this.onmouseup.bind(this);\n                    this.curElement.context.canvas.onmouseclick = this.onmouseclick.bind(this);\n                    this.curElement.context.canvas.onmousewheel = this.onmousewheel.bind(this);\n                    this.curElement.context.canvas.onkeydown = this.onkeydown.bind(this);\n                    this.curElement.context.canvas.onkeyup = this.onkeyup.bind(this);\n                    this.curElement.context.canvas.onkeypress = this.onkeypress.bind(this);\n                    this.curElement.context.canvas.ontouchstart = this.ontouchstart.bind(this);\n                    this.curElement.context.canvas.ontouchmove = this.ontouchmove.bind(this);\n                    this.curElement.context.canvas.ontouchend = this.ontouchend.bind(this);\n                }\n                if (typeof this.curElement.context !== 'undefined') {\n                    this.curElement.context.setTransform(1, 0, 0, 1, 0, 0);\n                }\n            }\n        };\n        return p5;\n    }({}, core, inputmouse, inputtouch, dompelement);\n","var environment = function (require, core, constants) {\n        'use strict';\n        var p5 = core;\n        var C = constants;\n        var standardCursors = [\n                C.ARROW,\n                C.CROSS,\n                C.HAND,\n                C.MOVE,\n                C.TEXT,\n                C.WAIT\n            ];\n        p5.prototype.cursor = function (type, x, y) {\n            var cursor = 'auto';\n            var canvas = this.curElement.elt;\n            if (standardCursors.indexOf(type) > -1) {\n                cursor = type;\n            } else if (typeof type === 'string') {\n                var coords = '';\n                if (x && y && (typeof x === 'number' && typeof y === 'number')) {\n                    coords = x + ' ' + y;\n                }\n                if (type.substring(0, 6) !== 'http://') {\n                    cursor = 'url(' + type + ') ' + coords + ', auto';\n                } else if (/\\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(type)) {\n                    cursor = 'url(' + type + ') ' + coords + ', auto';\n                } else {\n                    cursor = type;\n                }\n            }\n            canvas.style.cursor = cursor;\n        };\n        p5.prototype.frameRate = function (fps) {\n            if (typeof fps === 'undefined') {\n                return this._frameRate;\n            } else {\n                this._setProperty('_targetFrameRate', fps);\n                this._runFrames();\n                return this;\n            }\n        };\n        p5.prototype.getFrameRate = function () {\n            return this.frameRate();\n        };\n        p5.prototype.setFrameRate = function (fps) {\n            return this.frameRate(fps);\n        };\n        p5.prototype.noCursor = function () {\n            this.curElement.elt.style.cursor = 'none';\n        };\n        return p5;\n    }({}, core, constants);\n","var canvas = function (require, constants) {\n        var constants = constants;\n        return {\n            modeAdjust: function (a, b, c, d, mode) {\n                if (mode === constants.CORNER) {\n                    return {\n                        x: a,\n                        y: b,\n                        w: c,\n                        h: d\n                    };\n                } else if (mode === constants.CORNERS) {\n                    return {\n                        x: a,\n                        y: b,\n                        w: c - a,\n                        h: d - b\n                    };\n                } else if (mode === constants.RADIUS) {\n                    return {\n                        x: a - c,\n                        y: b - d,\n                        w: 2 * c,\n                        h: 2 * d\n                    };\n                } else if (mode === constants.CENTER) {\n                    return {\n                        x: a - c * 0.5,\n                        y: b - d * 0.5,\n                        w: c,\n                        h: d\n                    };\n                }\n            },\n            arcModeAdjust: function (a, b, c, d, mode) {\n                if (mode === constants.CORNER) {\n                    return {\n                        x: a + c * 0.5,\n                        y: b + d * 0.5,\n                        w: c,\n                        h: d\n                    };\n                } else if (mode === constants.CORNERS) {\n                    return {\n                        x: a,\n                        y: b,\n                        w: c + a,\n                        h: d + b\n                    };\n                } else if (mode === constants.RADIUS) {\n                    return {\n                        x: a,\n                        y: b,\n                        w: 2 * c,\n                        h: 2 * d\n                    };\n                } else if (mode === constants.CENTER) {\n                    return {\n                        x: a,\n                        y: b,\n                        w: c,\n                        h: d\n                    };\n                }\n            }\n        };\n    }({}, constants);\n","var filters = function (require) {\n        'use strict';\n        var Filters = {};\n        Filters._toPixels = function (canvas) {\n            if (canvas instanceof ImageData) {\n                return canvas.data;\n            } else {\n                return canvas.getContext('2d').getImageData(0, 0, canvas.width, canvas.height).data;\n            }\n        };\n        Filters._getARGB = function (data, i) {\n            var offset = i * 4;\n            return data[offset + 3] << 24 & 4278190080 | data[offset] << 16 & 16711680 | data[offset + 1] << 8 & 65280 | data[offset + 2] & 255;\n        };\n        Filters._setPixels = function (pixels, data) {\n            var offset = 0;\n            for (var i = 0, al = pixels.length; i < al; i++) {\n                offset = i * 4;\n                pixels[offset + 0] = (data[i] & 16711680) >>> 16;\n                pixels[offset + 1] = (data[i] & 65280) >>> 8;\n                pixels[offset + 2] = data[i] & 255;\n                pixels[offset + 3] = (data[i] & 4278190080) >>> 24;\n            }\n        };\n        Filters._toImageData = function (canvas) {\n            if (canvas instanceof ImageData) {\n                return canvas;\n            } else {\n                return canvas.getContext('2d').getImageData(0, 0, canvas.width, canvas.height);\n            }\n        };\n        Filters._createImageData = function (width, height) {\n            Filters._tmpCanvas = document.createElement('canvas');\n            Filters._tmpCtx = Filters._tmpCanvas.getContext('2d');\n            return this._tmpCtx.createImageData(width, height);\n        };\n        Filters.apply = function (canvas, func, filterParam) {\n            var ctx = canvas.getContext('2d');\n            var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var newImageData = func(imageData, filterParam);\n            if (newImageData instanceof ImageData) {\n                ctx.putImageData(newImageData, 0, 0, 0, 0, canvas.width, canvas.height);\n            } else {\n                ctx.putImageData(imageData, 0, 0, 0, 0, canvas.width, canvas.height);\n            }\n        };\n        Filters.threshold = function (canvas, level) {\n            var pixels = Filters._toPixels(canvas);\n            if (level === undefined) {\n                level = 0.5;\n            }\n            var thresh = Math.floor(level * 255);\n            for (var i = 0; i < pixels.length; i += 4) {\n                var r = pixels[i];\n                var g = pixels[i + 1];\n                var b = pixels[i + 2];\n                var grey = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n                var val;\n                if (grey >= thresh) {\n                    val = 255;\n                } else {\n                    val = 0;\n                }\n                pixels[i] = pixels[i + 1] = pixels[i + 2] = val;\n            }\n        };\n        Filters.gray = function (canvas) {\n            var pixels = Filters._toPixels(canvas);\n            for (var i = 0; i < pixels.length; i += 4) {\n                var r = pixels[i];\n                var g = pixels[i + 1];\n                var b = pixels[i + 2];\n                var gray = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n                pixels[i] = pixels[i + 1] = pixels[i + 2] = gray;\n            }\n        };\n        Filters.opaque = function (canvas) {\n            var pixels = Filters._toPixels(canvas);\n            for (var i = 0; i < pixels.length; i += 4) {\n                pixels[i + 3] = 255;\n            }\n            return pixels;\n        };\n        Filters.invert = function (canvas) {\n            var pixels = Filters._toPixels(canvas);\n            for (var i = 0; i < pixels.length; i += 4) {\n                pixels[i] = 255 - pixels[i];\n                pixels[i + 1] = 255 - pixels[i + 1];\n                pixels[i + 2] = 255 - pixels[i + 2];\n            }\n        };\n        Filters.posterize = function (canvas, level) {\n            var pixels = Filters._toPixels(canvas);\n            if (level < 2 || level > 255) {\n                throw new Error('Level must be greater than 2 and less than 255 for posterize');\n            }\n            var levels1 = level - 1;\n            for (var i = 0; i < pixels.length; i++) {\n                var rlevel = pixels[i] >> 16 & 255;\n                var glevel = pixels[i] >> 8 & 255;\n                var blevel = pixels[i] & 255;\n                rlevel = (rlevel * level >> 8) * 255 / levels1;\n                glevel = (glevel * level >> 8) * 255 / levels1;\n                blevel = (blevel * level >> 8) * 255 / levels1;\n                pixels[i] = 4278190080 & pixels[i] | rlevel << 16 | glevel << 8 | blevel;\n            }\n        };\n        Filters.dilate = function (canvas) {\n            var pixels = Filters._toPixels(canvas);\n            var currIdx = 0;\n            var maxIdx = pixels.length ? pixels.length / 4 : 0;\n            var out = new Int32Array(maxIdx);\n            var currRowIdx, maxRowIdx, colOrig, colOut, currLum;\n            var idxRight, idxLeft, idxUp, idxDown, colRight, colLeft, colUp, colDown, lumRight, lumLeft, lumUp, lumDown;\n            while (currIdx < maxIdx) {\n                currRowIdx = currIdx;\n                maxRowIdx = currIdx + canvas.width;\n                while (currIdx < maxRowIdx) {\n                    colOrig = colOut = Filters._getARGB(pixels, currIdx);\n                    idxLeft = currIdx - 1;\n                    idxRight = currIdx + 1;\n                    idxUp = currIdx - canvas.width;\n                    idxDown = currIdx + canvas.width;\n                    if (idxLeft < currRowIdx) {\n                        idxLeft = currIdx;\n                    }\n                    if (idxRight >= maxRowIdx) {\n                        idxRight = currIdx;\n                    }\n                    if (idxUp < 0) {\n                        idxUp = 0;\n                    }\n                    if (idxDown >= maxIdx) {\n                        idxDown = currIdx;\n                    }\n                    colUp = Filters._getARGB(pixels, idxUp);\n                    colLeft = Filters._getARGB(pixels, idxLeft);\n                    colDown = Filters._getARGB(pixels, idxDown);\n                    colRight = Filters._getARGB(pixels, idxRight);\n                    currLum = 77 * (colOrig >> 16 & 255) + 151 * (colOrig >> 8 & 255) + 28 * (colOrig & 255);\n                    lumLeft = 77 * (colLeft >> 16 & 255) + 151 * (colLeft >> 8 & 255) + 28 * (colLeft & 255);\n                    lumRight = 77 * (colRight >> 16 & 255) + 151 * (colRight >> 8 & 255) + 28 * (colRight & 255);\n                    lumUp = 77 * (colUp >> 16 & 255) + 151 * (colUp >> 8 & 255) + 28 * (colUp & 255);\n                    lumDown = 77 * (colDown >> 16 & 255) + 151 * (colDown >> 8 & 255) + 28 * (colDown & 255);\n                    if (lumLeft > currLum) {\n                        colOut = colLeft;\n                        currLum = lumLeft;\n                    }\n                    if (lumRight > currLum) {\n                        colOut = colRight;\n                        currLum = lumRight;\n                    }\n                    if (lumUp > currLum) {\n                        colOut = colUp;\n                        currLum = lumUp;\n                    }\n                    if (lumDown > currLum) {\n                        colOut = colDown;\n                        currLum = lumDown;\n                    }\n                    out[currIdx++] = colOut;\n                }\n            }\n            Filters._setPixels(pixels, out);\n        };\n        Filters.erode = function (canvas) {\n            var pixels = Filters._toPixels(canvas);\n            var currIdx = 0;\n            var maxIdx = pixels.length ? pixels.length / 4 : 0;\n            var out = new Int32Array(maxIdx);\n            var currRowIdx, maxRowIdx, colOrig, colOut, currLum;\n            var idxRight, idxLeft, idxUp, idxDown, colRight, colLeft, colUp, colDown, lumRight, lumLeft, lumUp, lumDown;\n            while (currIdx < maxIdx) {\n                currRowIdx = currIdx;\n                maxRowIdx = currIdx + canvas.width;\n                while (currIdx < maxRowIdx) {\n                    colOrig = colOut = Filters._getARGB(pixels, currIdx);\n                    idxLeft = currIdx - 1;\n                    idxRight = currIdx + 1;\n                    idxUp = currIdx - canvas.width;\n                    idxDown = currIdx + canvas.width;\n                    if (idxLeft < currRowIdx) {\n                        idxLeft = currIdx;\n                    }\n                    if (idxRight >= maxRowIdx) {\n                        idxRight = currIdx;\n                    }\n                    if (idxUp < 0) {\n                        idxUp = 0;\n                    }\n                    if (idxDown >= maxIdx) {\n                        idxDown = currIdx;\n                    }\n                    colUp = Filters._getARGB(pixels, idxUp);\n                    colLeft = Filters._getARGB(pixels, idxLeft);\n                    colDown = Filters._getARGB(pixels, idxDown);\n                    colRight = Filters._getARGB(pixels, idxRight);\n                    currLum = 77 * (colOrig >> 16 & 255) + 151 * (colOrig >> 8 & 255) + 28 * (colOrig & 255);\n                    lumLeft = 77 * (colLeft >> 16 & 255) + 151 * (colLeft >> 8 & 255) + 28 * (colLeft & 255);\n                    lumRight = 77 * (colRight >> 16 & 255) + 151 * (colRight >> 8 & 255) + 28 * (colRight & 255);\n                    lumUp = 77 * (colUp >> 16 & 255) + 151 * (colUp >> 8 & 255) + 28 * (colUp & 255);\n                    lumDown = 77 * (colDown >> 16 & 255) + 151 * (colDown >> 8 & 255) + 28 * (colDown & 255);\n                    if (lumLeft < currLum) {\n                        colOut = colLeft;\n                        currLum = lumLeft;\n                    }\n                    if (lumRight < currLum) {\n                        colOut = colRight;\n                        currLum = lumRight;\n                    }\n                    if (lumUp < currLum) {\n                        colOut = colUp;\n                        currLum = lumUp;\n                    }\n                    if (lumDown < currLum) {\n                        colOut = colDown;\n                        currLum = lumDown;\n                    }\n                    out[currIdx++] = colOut;\n                }\n            }\n            Filters._setPixels(pixels, out);\n        };\n        return Filters;\n    }({});\n","var image = function (require, core, canvas, constants, filters) {\n        'use strict';\n        var p5 = core;\n        var canvas = canvas;\n        var constants = constants;\n        var Filters = filters;\n        p5.prototype.createImage = function (width, height) {\n            return new PImage(width, height, this);\n        };\n        p5.prototype.loadImage = function (path, callback) {\n            var img = new Image();\n            var pImg = new PImage(1, 1, this);\n            img.onload = function () {\n                pImg.width = pImg.canvas.width = img.width;\n                pImg.height = pImg.canvas.height = img.height;\n                pImg.canvas.getContext('2d').drawImage(img, 0, 0);\n                if (typeof callback !== 'undefined') {\n                    callback(pImg);\n                }\n            };\n            img.crossOrigin = 'Anonymous';\n            img.src = path;\n            return pImg;\n        };\n        p5.prototype.image = function (image, x, y, width, height) {\n            if (width === undefined) {\n                width = image.width;\n            }\n            if (height === undefined) {\n                height = image.height;\n            }\n            var vals = canvas.modeAdjust(x, y, width, height, this.settings.imageMode);\n            this.curElement.context.drawImage(image.canvas, vals.x, vals.y, vals.w, vals.h);\n        };\n        p5.prototype.imageMode = function (m) {\n            if (m === constants.CORNER || m === constants.CORNERS || m === constants.CENTER) {\n                this.settings.imageMode = m;\n            }\n        };\n        function PImage(width, height, pInst) {\n            this.width = width;\n            this.height = height;\n            this.pInst = pInst;\n            this.canvas = document.createElement('canvas');\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            this.pixels = [];\n        }\n        PImage.prototype.loadPixels = function () {\n            var x = 0;\n            var y = 0;\n            var w = this.width;\n            var h = this.height;\n            var imageData = this.canvas.getContext('2d').getImageData(x, y, w, h);\n            var data = imageData.data;\n            var pixels = [];\n            for (var i = 0; i < data.length; i += 4) {\n                pixels.push([\n                    data[i],\n                    data[i + 1],\n                    data[i + 2],\n                    data[i + 3]\n                ]);\n            }\n            this.pixels = pixels;\n        };\n        PImage.prototype.updatePixels = function (x, y, w, h) {\n            if (x === undefined && y === undefined && w === undefined && h === undefined) {\n                x = 0;\n                y = 0;\n                w = this.width;\n                h = this.height;\n            }\n            var imageData = this.canvas.getContext('2d').getImageData(x, y, w, h);\n            var data = imageData.data;\n            for (var i = 0; i < this.pixels.length; i += 1) {\n                var j = i * 4;\n                data[j] = this.pixels[i][0];\n                data[j + 1] = this.pixels[i][1];\n                data[j + 2] = this.pixels[i][2];\n                data[j + 3] = this.pixels[i][3];\n            }\n            this.canvas.getContext('2d').putImageData(imageData, x, y, 0, 0, w, h);\n        };\n        PImage.prototype.get = function (x, y, w, h) {\n            if (x === undefined && y === undefined && w === undefined && h === undefined) {\n                x = 0;\n                y = 0;\n                w = this.width;\n                h = this.height;\n            } else if (w === undefined && h === undefined) {\n                w = 1;\n                h = 1;\n            }\n            if (x > this.width || y > this.height) {\n                return undefined;\n            }\n            var imageData = this.canvas.getContext('2d').getImageData(x, y, w, h);\n            var data = imageData.data;\n            if (w === 1 && h === 1) {\n                var pixels = [];\n                for (var i = 0; i < data.length; i += 4) {\n                    pixels.push(data[i], data[i + 1], data[i + 2], data[i + 3]);\n                }\n                return pixels;\n            } else {\n                w = Math.min(w, this.width);\n                h = Math.min(h, this.height);\n                var region = new PImage(w, h, this.pInst);\n                region.canvas.getContext('2d').putImageData(imageData, 0, 0, 0, 0, w, h);\n                return region;\n            }\n        };\n        PImage.prototype.set = function (x, y, imgOrCol) {\n            var idx = y * this.width + x;\n            if (imgOrCol instanceof Array) {\n                if (idx < this.pixels.length) {\n                    this.pixels[idx] = imgOrCol;\n                    this.updatePixels();\n                }\n            } else {\n                this.canvas.getContext('2d').drawImage(imgOrCol.canvas, 0, 0);\n                this.loadPixels();\n            }\n        };\n        PImage.prototype.resize = function (width, height) {\n            var tempCanvas = document.createElement('canvas');\n            tempCanvas.width = width;\n            tempCanvas.height = height;\n            tempCanvas.getContext('2d').drawImage(this.canvas, 0, 0, this.canvas.width, this.canvas.height, 0, 0, tempCanvas.width, tempCanvas.width);\n            this.canvas.width = this.width = width;\n            this.canvas.height = this.height = height;\n            this.canvas.getContext('2d').drawImage(tempCanvas, 0, 0, width, height, 0, 0, width, height);\n            if (this.pixels.length > 0) {\n                this.loadPixels();\n            }\n        };\n        PImage.prototype.copy = function () {\n            var srcImage, sx, sy, sw, sh, dx, dy, dw, dh;\n            if (arguments.length === 9) {\n                srcImage = arguments[0];\n                sx = arguments[1];\n                sy = arguments[2];\n                sw = arguments[3];\n                sh = arguments[4];\n                dx = arguments[5];\n                dy = arguments[6];\n                dw = arguments[7];\n                dh = arguments[8];\n            } else if (arguments.length === 8) {\n                sx = arguments[0];\n                sy = arguments[1];\n                sw = arguments[2];\n                sh = arguments[3];\n                dx = arguments[4];\n                dy = arguments[5];\n                dw = arguments[6];\n                dh = arguments[7];\n                srcImage = this;\n            } else {\n                throw new Error('Signature not supported');\n            }\n            this.canvas.getContext('2d').drawImage(srcImage.canvas, sx, sy, sw, sh, dx, dy, dw, dh);\n        };\n        PImage.prototype.mask = function (pImage) {\n            if (pImage === undefined) {\n                pImage = this;\n            }\n            var currBlend = this.canvas.getContext('2d').globalCompositeOperation;\n            var copyArgs = [\n                    pImage,\n                    0,\n                    0,\n                    pImage.width,\n                    pImage.height,\n                    0,\n                    0,\n                    this.width,\n                    this.height\n                ];\n            this.canvas.getContext('2d').globalCompositeOperation = 'destination-out';\n            this.copy.apply(this, copyArgs);\n            this.canvas.getContext('2d').globalCompositeOperation = currBlend;\n        };\n        PImage.prototype.filter = function (operation, value) {\n            Filters.apply(this.canvas, Filters[operation.toLowerCase()], value);\n        };\n        PImage.prototype.blend = function () {\n            var currBlend = this.canvas.getContext('2d').globalCompositeOperation;\n            var blendMode = arguments[arguments.length - 1];\n            var copyArgs = Array.prototype.slice.call(arguments, 0, arguments.length - 1);\n            this.canvas.getContext('2d').globalCompositeOperation = blendMode;\n            this.copy.apply(this, copyArgs);\n            this.canvas.getContext('2d').globalCompositeOperation = currBlend;\n        };\n        PImage.prototype.save = function (extension) {\n            var mimeType;\n            switch (extension.toLowerCase()) {\n            case 'png':\n                mimeType = 'image/png';\n                break;\n            case 'jpeg':\n                mimeType = 'image/jpeg';\n                break;\n            case 'jpg':\n                mimeType = 'image/jpeg';\n                break;\n            default:\n                mimeType = 'image/png';\n                break;\n            }\n            if (mimeType !== undefined) {\n                var downloadMime = 'image/octet-stream';\n                var imageData = this.canvas.toDataURL(mimeType);\n                imageData = imageData.replace(mimeType, downloadMime);\n                window.location.href = imageData;\n            }\n        };\n        return PImage;\n    }({}, core, canvas, constants, filters);\n","var imageloading_displaying = function (require, core) {\n        'use strict';\n        var p5 = core;\n        p5.prototype.blend = function () {\n        };\n        p5.prototype.copy = function () {\n        };\n        p5.prototype.filter = function () {\n        };\n        p5.prototype.get = function (x, y) {\n            var width = this.width;\n            var height = this.height;\n            var pix = this.curElement.context.getImageData(0, 0, width, height).data;\n            if (typeof x !== 'undefined' && typeof y !== 'undefined') {\n                if (x >= 0 && x < width && y >= 0 && y < height) {\n                    var offset = 4 * y * width + 4 * x;\n                    var c = [\n                            pix[offset],\n                            pix[offset + 1],\n                            pix[offset + 2],\n                            pix[offset + 3]\n                        ];\n                    return c;\n                } else {\n                    return [\n                        0,\n                        0,\n                        0,\n                        255\n                    ];\n                }\n            } else {\n                return [\n                    0,\n                    0,\n                    0,\n                    255\n                ];\n            }\n        };\n        p5.prototype.loadPixels = function () {\n            var width = this.width;\n            var height = this.height;\n            var a = this.curElement.context.getImageData(0, 0, width, height).data;\n            var pixels = [];\n            for (var i = 0; i < a.length; i += 4) {\n                pixels.push([\n                    a[i],\n                    a[i + 1],\n                    a[i + 2],\n                    a[i + 3]\n                ]);\n            }\n            this._setProperty('pixels', pixels);\n        };\n        p5.prototype.set = function () {\n        };\n        p5.prototype.updatePixels = function () {\n        };\n        return p5;\n    }({}, core);\n","!function (name, context, definition) {\n    if (typeof module != 'undefined' && module.exports)\n        module.exports = definition();\n    else if (typeof define == 'function' && define.amd)\n        define('reqwest', definition);\n    else\n        context[name] = definition();\n}('reqwest', this, function () {\n    var win = window, doc = document, twoHundo = /^(20\\d|1223)$/, byTag = 'getElementsByTagName', readyState = 'readyState', contentType = 'Content-Type', requestedWith = 'X-Requested-With', head = doc[byTag]('head')[0], uniqid = 0, callbackPrefix = 'reqwest_' + +new Date(), lastValue, xmlHttpRequest = 'XMLHttpRequest', xDomainRequest = 'XDomainRequest', noop = function () {\n        }, isArray = typeof Array.isArray == 'function' ? Array.isArray : function (a) {\n            return a instanceof Array;\n        }, defaultHeaders = {\n            'contentType': 'application/x-www-form-urlencoded',\n            'requestedWith': xmlHttpRequest,\n            'accept': {\n                '*': 'text/javascript, text/html, application/xml, text/xml, */*',\n                'xml': 'application/xml, text/xml',\n                'html': 'text/html',\n                'text': 'text/plain',\n                'json': 'application/json, text/javascript',\n                'js': 'application/javascript, text/javascript'\n            }\n        }, xhr = function (o) {\n            if (o['crossOrigin'] === true) {\n                var xhr = win[xmlHttpRequest] ? new XMLHttpRequest() : null;\n                if (xhr && 'withCredentials' in xhr) {\n                    return xhr;\n                } else if (win[xDomainRequest]) {\n                    return new XDomainRequest();\n                } else {\n                    throw new Error('Browser does not support cross-origin requests');\n                }\n            } else if (win[xmlHttpRequest]) {\n                return new XMLHttpRequest();\n            } else {\n                return new ActiveXObject('Microsoft.XMLHTTP');\n            }\n        }, globalSetupOptions = {\n            dataFilter: function (data) {\n                return data;\n            }\n        };\n    function handleReadyState(r, success, error) {\n        return function () {\n            if (r._aborted)\n                return error(r.request);\n            if (r.request && r.request[readyState] == 4) {\n                r.request.onreadystatechange = noop;\n                if (twoHundo.test(r.request.status))\n                    success(r.request);\n                else\n                    error(r.request);\n            }\n        };\n    }\n    function setHeaders(http, o) {\n        var headers = o['headers'] || {}, h;\n        headers['Accept'] = headers['Accept'] || defaultHeaders['accept'][o['type']] || defaultHeaders['accept']['*'];\n        if (!o['crossOrigin'] && !headers[requestedWith])\n            headers[requestedWith] = defaultHeaders['requestedWith'];\n        if (!headers[contentType])\n            headers[contentType] = o['contentType'] || defaultHeaders['contentType'];\n        for (h in headers)\n            headers.hasOwnProperty(h) && 'setRequestHeader' in http && http.setRequestHeader(h, headers[h]);\n    }\n    function setCredentials(http, o) {\n        if (typeof o['withCredentials'] !== 'undefined' && typeof http.withCredentials !== 'undefined') {\n            http.withCredentials = !!o['withCredentials'];\n        }\n    }\n    function generalCallback(data) {\n        lastValue = data;\n    }\n    function urlappend(url, s) {\n        return url + (/\\?/.test(url) ? '&' : '?') + s;\n    }\n    function handleJsonp(o, fn, err, url) {\n        var reqId = uniqid++, cbkey = o['jsonpCallback'] || 'callback', cbval = o['jsonpCallbackName'] || reqwest.getcallbackPrefix(reqId), cbreg = new RegExp('((^|\\\\?|&)' + cbkey + ')=([^&]+)'), match = url.match(cbreg), script = doc.createElement('script'), loaded = 0, isIE10 = navigator.userAgent.indexOf('MSIE 10.0') !== -1;\n        if (match) {\n            if (match[3] === '?') {\n                url = url.replace(cbreg, '$1=' + cbval);\n            } else {\n                cbval = match[3];\n            }\n        } else {\n            url = urlappend(url, cbkey + '=' + cbval);\n        }\n        win[cbval] = generalCallback;\n        script.type = 'text/javascript';\n        script.src = url;\n        script.async = true;\n        if (typeof script.onreadystatechange !== 'undefined' && !isIE10) {\n            script.event = 'onclick';\n            script.htmlFor = script.id = '_reqwest_' + reqId;\n        }\n        script.onload = script.onreadystatechange = function () {\n            if (script[readyState] && script[readyState] !== 'complete' && script[readyState] !== 'loaded' || loaded) {\n                return false;\n            }\n            script.onload = script.onreadystatechange = null;\n            script.onclick && script.onclick();\n            fn(lastValue);\n            lastValue = undefined;\n            head.removeChild(script);\n            loaded = 1;\n        };\n        head.appendChild(script);\n        return {\n            abort: function () {\n                script.onload = script.onreadystatechange = null;\n                err({}, 'Request is aborted: timeout', {});\n                lastValue = undefined;\n                head.removeChild(script);\n                loaded = 1;\n            }\n        };\n    }\n    function getRequest(fn, err) {\n        var o = this.o, method = (o['method'] || 'GET').toUpperCase(), url = typeof o === 'string' ? o : o['url'], data = o['processData'] !== false && o['data'] && typeof o['data'] !== 'string' ? reqwest.toQueryString(o['data']) : o['data'] || null, http, sendWait = false;\n        if ((o['type'] == 'jsonp' || method == 'GET') && data) {\n            url = urlappend(url, data);\n            data = null;\n        }\n        if (o['type'] == 'jsonp')\n            return handleJsonp(o, fn, err, url);\n        http = o.xhr && o.xhr(o) || xhr(o);\n        http.open(method, url, o['async'] === false ? false : true);\n        setHeaders(http, o);\n        setCredentials(http, o);\n        if (win[xDomainRequest] && http instanceof win[xDomainRequest]) {\n            http.onload = fn;\n            http.onerror = err;\n            http.onprogress = function () {\n            };\n            sendWait = true;\n        } else {\n            http.onreadystatechange = handleReadyState(this, fn, err);\n        }\n        o['before'] && o['before'](http);\n        if (sendWait) {\n            setTimeout(function () {\n                http.send(data);\n            }, 200);\n        } else {\n            http.send(data);\n        }\n        return http;\n    }\n    function Reqwest(o, fn) {\n        this.o = o;\n        this.fn = fn;\n        init.apply(this, arguments);\n    }\n    function setType(url) {\n        var m = url.match(/\\.(json|jsonp|html|xml)(\\?|$)/);\n        return m ? m[1] : 'js';\n    }\n    function init(o, fn) {\n        this.url = typeof o == 'string' ? o : o['url'];\n        this.timeout = null;\n        this._fulfilled = false;\n        this._successHandler = function () {\n        };\n        this._fulfillmentHandlers = [];\n        this._errorHandlers = [];\n        this._completeHandlers = [];\n        this._erred = false;\n        this._responseArgs = {};\n        var self = this, type = o['type'] || setType(this.url);\n        fn = fn || function () {\n        };\n        if (o['timeout']) {\n            this.timeout = setTimeout(function () {\n                self.abort();\n            }, o['timeout']);\n        }\n        if (o['success']) {\n            this._successHandler = function () {\n                o['success'].apply(o, arguments);\n            };\n        }\n        if (o['error']) {\n            this._errorHandlers.push(function () {\n                o['error'].apply(o, arguments);\n            });\n        }\n        if (o['complete']) {\n            this._completeHandlers.push(function () {\n                o['complete'].apply(o, arguments);\n            });\n        }\n        function complete(resp) {\n            o['timeout'] && clearTimeout(self.timeout);\n            self.timeout = null;\n            while (self._completeHandlers.length > 0) {\n                self._completeHandlers.shift()(resp);\n            }\n        }\n        function success(resp) {\n            resp = type !== 'jsonp' ? self.request : resp;\n            var filteredResponse = globalSetupOptions.dataFilter(resp.responseText, type), r = filteredResponse;\n            try {\n                resp.responseText = r;\n            } catch (e) {\n            }\n            if (r) {\n                switch (type) {\n                case 'json':\n                    try {\n                        resp = win.JSON ? win.JSON.parse(r) : eval('(' + r + ')');\n                    } catch (err) {\n                        return error(resp, 'Could not parse JSON in response', err);\n                    }\n                    break;\n                case 'js':\n                    resp = eval(r);\n                    break;\n                case 'html':\n                    resp = r;\n                    break;\n                case 'xml':\n                    resp = resp.responseXML && resp.responseXML.parseError && resp.responseXML.parseError.errorCode && resp.responseXML.parseError.reason ? null : resp.responseXML;\n                    break;\n                }\n            }\n            self._responseArgs.resp = resp;\n            self._fulfilled = true;\n            fn(resp);\n            self._successHandler(resp);\n            while (self._fulfillmentHandlers.length > 0) {\n                resp = self._fulfillmentHandlers.shift()(resp);\n            }\n            complete(resp);\n        }\n        function error(resp, msg, t) {\n            resp = self.request;\n            self._responseArgs.resp = resp;\n            self._responseArgs.msg = msg;\n            self._responseArgs.t = t;\n            self._erred = true;\n            while (self._errorHandlers.length > 0) {\n                self._errorHandlers.shift()(resp, msg, t);\n            }\n            complete(resp);\n        }\n        this.request = getRequest.call(this, success, error);\n    }\n    Reqwest.prototype = {\n        abort: function () {\n            this._aborted = true;\n            this.request.abort();\n        },\n        retry: function () {\n            init.call(this, this.o, this.fn);\n        },\n        then: function (success, fail) {\n            success = success || function () {\n            };\n            fail = fail || function () {\n            };\n            if (this._fulfilled) {\n                this._responseArgs.resp = success(this._responseArgs.resp);\n            } else if (this._erred) {\n                fail(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t);\n            } else {\n                this._fulfillmentHandlers.push(success);\n                this._errorHandlers.push(fail);\n            }\n            return this;\n        },\n        always: function (fn) {\n            if (this._fulfilled || this._erred) {\n                fn(this._responseArgs.resp);\n            } else {\n                this._completeHandlers.push(fn);\n            }\n            return this;\n        },\n        fail: function (fn) {\n            if (this._erred) {\n                fn(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t);\n            } else {\n                this._errorHandlers.push(fn);\n            }\n            return this;\n        }\n    };\n    function reqwest(o, fn) {\n        return new Reqwest(o, fn);\n    }\n    function normalize(s) {\n        return s ? s.replace(/\\r?\\n/g, '\\r\\n') : '';\n    }\n    function serial(el, cb) {\n        var n = el.name, t = el.tagName.toLowerCase(), optCb = function (o) {\n                if (o && !o['disabled'])\n                    cb(n, normalize(o['attributes']['value'] && o['attributes']['value']['specified'] ? o['value'] : o['text']));\n            }, ch, ra, val, i;\n        if (el.disabled || !n)\n            return;\n        switch (t) {\n        case 'input':\n            if (!/reset|button|image|file/i.test(el.type)) {\n                ch = /checkbox/i.test(el.type);\n                ra = /radio/i.test(el.type);\n                val = el.value;\n                (!(ch || ra) || el.checked) && cb(n, normalize(ch && val === '' ? 'on' : val));\n            }\n            break;\n        case 'textarea':\n            cb(n, normalize(el.value));\n            break;\n        case 'select':\n            if (el.type.toLowerCase() === 'select-one') {\n                optCb(el.selectedIndex >= 0 ? el.options[el.selectedIndex] : null);\n            } else {\n                for (i = 0; el.length && i < el.length; i++) {\n                    el.options[i].selected && optCb(el.options[i]);\n                }\n            }\n            break;\n        }\n    }\n    function eachFormElement() {\n        var cb = this, e, i, serializeSubtags = function (e, tags) {\n                var i, j, fa;\n                for (i = 0; i < tags.length; i++) {\n                    fa = e[byTag](tags[i]);\n                    for (j = 0; j < fa.length; j++)\n                        serial(fa[j], cb);\n                }\n            };\n        for (i = 0; i < arguments.length; i++) {\n            e = arguments[i];\n            if (/input|select|textarea/i.test(e.tagName))\n                serial(e, cb);\n            serializeSubtags(e, [\n                'input',\n                'select',\n                'textarea'\n            ]);\n        }\n    }\n    function serializeQueryString() {\n        return reqwest.toQueryString(reqwest.serializeArray.apply(null, arguments));\n    }\n    function serializeHash() {\n        var hash = {};\n        eachFormElement.apply(function (name, value) {\n            if (name in hash) {\n                hash[name] && !isArray(hash[name]) && (hash[name] = [hash[name]]);\n                hash[name].push(value);\n            } else\n                hash[name] = value;\n        }, arguments);\n        return hash;\n    }\n    reqwest.serializeArray = function () {\n        var arr = [];\n        eachFormElement.apply(function (name, value) {\n            arr.push({\n                name: name,\n                value: value\n            });\n        }, arguments);\n        return arr;\n    };\n    reqwest.serialize = function () {\n        if (arguments.length === 0)\n            return '';\n        var opt, fn, args = Array.prototype.slice.call(arguments, 0);\n        opt = args.pop();\n        opt && opt.nodeType && args.push(opt) && (opt = null);\n        opt && (opt = opt.type);\n        if (opt == 'map')\n            fn = serializeHash;\n        else if (opt == 'array')\n            fn = reqwest.serializeArray;\n        else\n            fn = serializeQueryString;\n        return fn.apply(null, args);\n    };\n    reqwest.toQueryString = function (o, trad) {\n        var prefix, i, traditional = trad || false, s = [], enc = encodeURIComponent, add = function (key, value) {\n                value = 'function' === typeof value ? value() : value == null ? '' : value;\n                s[s.length] = enc(key) + '=' + enc(value);\n            };\n        if (isArray(o)) {\n            for (i = 0; o && i < o.length; i++)\n                add(o[i]['name'], o[i]['value']);\n        } else {\n            for (prefix in o) {\n                if (o.hasOwnProperty(prefix))\n                    buildParams(prefix, o[prefix], traditional, add);\n            }\n        }\n        return s.join('&').replace(/%20/g, '+');\n    };\n    function buildParams(prefix, obj, traditional, add) {\n        var name, i, v, rbracket = /\\[\\]$/;\n        if (isArray(obj)) {\n            for (i = 0; obj && i < obj.length; i++) {\n                v = obj[i];\n                if (traditional || rbracket.test(prefix)) {\n                    add(prefix, v);\n                } else {\n                    buildParams(prefix + '[' + (typeof v === 'object' ? i : '') + ']', v, traditional, add);\n                }\n            }\n        } else if (obj && obj.toString() === '[object Object]') {\n            for (name in obj) {\n                buildParams(prefix + '[' + name + ']', obj[name], traditional, add);\n            }\n        } else {\n            add(prefix, obj);\n        }\n    }\n    reqwest.getcallbackPrefix = function () {\n        return callbackPrefix;\n    };\n    reqwest.compat = function (o, fn) {\n        if (o) {\n            o['type'] && (o['method'] = o['type']) && delete o['type'];\n            o['dataType'] && (o['type'] = o['dataType']);\n            o['jsonpCallback'] && (o['jsonpCallbackName'] = o['jsonpCallback']) && delete o['jsonpCallback'];\n            o['jsonp'] && (o['jsonpCallback'] = o['jsonp']);\n        }\n        return new Reqwest(o, fn);\n    };\n    reqwest.ajaxSetup = function (options) {\n        options = options || {};\n        for (var k in options) {\n            globalSetupOptions[k] = options[k];\n        }\n    };\n    return reqwest;\n});\n","var inputfiles = function (require, core, reqwest) {\n        'use strict';\n        var p5 = core;\n        var reqwest = reqwest;\n        p5.prototype.createInput = function () {\n        };\n        p5.prototype.createReader = function () {\n        };\n        p5.prototype.loadBytes = function () {\n        };\n        p5.prototype.loadJSON = function (url, callback) {\n            var self = [];\n            reqwest(url, function (resp) {\n                for (var k in resp) {\n                    self[k] = resp[k];\n                }\n                callback(resp);\n            });\n            return self;\n        };\n        p5.prototype.loadStrings = function (path, callback) {\n            var ret = [];\n            var req = new XMLHttpRequest();\n            req.open('GET', path, true);\n            req.onreadystatechange = function () {\n                if (req.readyState === 4 && (req.status === 200 || req.status === 0)) {\n                    var arr = req.responseText.match(/[^\\r\\n]+/g);\n                    for (var k in arr) {\n                        ret[k] = arr[k];\n                    }\n                    if (typeof callback !== 'undefined') {\n                        callback(ret);\n                    }\n                }\n            };\n            req.send(null);\n            return ret;\n        };\n        p5.prototype.loadTable = function () {\n        };\n        p5.prototype.loadXML = function (path, callback) {\n            var ret = [];\n            var self = this;\n            self.temp = [];\n            reqwest(path, function (resp) {\n                self.print(resp);\n                self.temp = resp;\n                ret[0] = resp;\n                if (typeof callback !== 'undefined') {\n                    callback(ret);\n                }\n            });\n        };\n        p5.prototype.open = function () {\n        };\n        p5.prototype.parseXML = function () {\n        };\n        p5.prototype.saveTable = function () {\n        };\n        p5.prototype.selectFolder = function () {\n        };\n        p5.prototype.selectInput = function () {\n        };\n        return p5;\n    }({}, core, reqwest);\n","var inputkeyboard = function (require, core) {\n        'use strict';\n        var p5 = core;\n        p5.prototype.isKeyPressed = p5.prototype.keyIsPressed = function () {\n            return this.keyDown;\n        };\n        p5.prototype.onkeydown = function (e) {\n            var keyPressed = this.keyPressed || window.keyPressed;\n            this._setProperty('keyDown', true);\n            this._setProperty('keyCode', e.keyCode);\n            this._setProperty('key', String.fromCharCode(e.keyCode));\n            if (typeof keyPressed === 'function') {\n                keyPressed(e);\n            }\n        };\n        p5.prototype.onkeyup = function (e) {\n            var keyReleased = this.keyReleased || window.keyReleased;\n            this._setProperty('keyDown', false);\n            if (typeof keyReleased === 'function') {\n                keyReleased(e);\n            }\n        };\n        p5.prototype.onkeypress = function (e) {\n            var keyTyped = this.keyTyped || window.keyTyped;\n            if (typeof keyTyped === 'function') {\n                keyTyped(e);\n            }\n        };\n        return p5;\n    }({}, core);\n","var inputtime_date = function (require, core) {\n        'use strict';\n        var p5 = core;\n        p5.prototype.day = function () {\n            return new Date().getDate();\n        };\n        p5.prototype.hour = function () {\n            return new Date().getHours();\n        };\n        p5.prototype.minute = function () {\n            return new Date().getMinutes();\n        };\n        p5.prototype.millis = function () {\n            return new Date().getTime() - this._startTime;\n        };\n        p5.prototype.month = function () {\n            return new Date().getMonth();\n        };\n        p5.prototype.second = function () {\n            return new Date().getSeconds();\n        };\n        p5.prototype.year = function () {\n            return new Date().getFullYear();\n        };\n        return p5;\n    }({}, core);\n","var mathcalculation = function (require, core) {\n        'use strict';\n        var p5 = core;\n        p5.prototype.abs = Math.abs;\n        p5.prototype.ceil = Math.ceil;\n        p5.prototype.constrain = function (n, l, h) {\n            return this.max(this.min(n, h), l);\n        };\n        p5.prototype.dist = function (x1, y1, x2, y2) {\n            var xs = x2 - x1;\n            var ys = y2 - y1;\n            return Math.sqrt(xs * xs + ys * ys);\n        };\n        p5.prototype.exp = Math.exp;\n        p5.prototype.floor = Math.floor;\n        p5.prototype.lerp = function (start, stop, amt) {\n            return amt * (stop - start) + start;\n        };\n        p5.prototype.log = Math.log;\n        p5.prototype.mag = function (x, y) {\n            return Math.sqrt(x * x + y * y);\n        };\n        p5.prototype.map = function (n, start1, stop1, start2, stop2) {\n            return (n - start1) / (stop1 - start1) * (stop2 - start2) + start2;\n        };\n        p5.prototype.max = Math.max;\n        p5.prototype.min = Math.min;\n        p5.prototype.norm = function (n, start, stop) {\n            return this.map(n, start, stop, 0, 1);\n        };\n        p5.prototype.pow = Math.pow;\n        p5.prototype.round = Math.round;\n        p5.prototype.sq = function (n) {\n            return n * n;\n        };\n        p5.prototype.sqrt = Math.sqrt;\n        return p5;\n    }({}, core);\n","var mathrandom = function (require, core) {\n        'use strict';\n        var p5 = core;\n        var randConst = 100000;\n        var seed = Math.ceil(Math.random() * randConst);\n        var seeded = false;\n        p5.prototype.randomSeed = function (nseed) {\n            seed = Math.ceil(Math.abs(nseed));\n            seeded = true;\n        };\n        p5.prototype.random = function (min, max) {\n            var rand;\n            if (seeded) {\n                rand = Math.sin(seed++) * randConst;\n                rand -= Math.floor(rand);\n            } else {\n                rand = Math.random();\n            }\n            if (arguments.length === 0) {\n                return rand;\n            } else if (arguments.length === 1) {\n                return rand * min;\n            } else {\n                if (min > max) {\n                    var tmp = min;\n                    min = max;\n                    max = tmp;\n                }\n                return rand * (max - min) + min;\n            }\n        };\n        return p5;\n    }({}, core);\n","var mathnoise = function (require, core) {\n        'use strict';\n        var p5 = core;\n        var PERLIN_YWRAPB = 4;\n        var PERLIN_YWRAP = 1 << PERLIN_YWRAPB;\n        var PERLIN_ZWRAPB = 8;\n        var PERLIN_ZWRAP = 1 << PERLIN_ZWRAPB;\n        var PERLIN_SIZE = 4095;\n        var perlin_octaves = 4;\n        var perlin_amp_falloff = 0.5;\n        var SINCOS_PRECISION = 0.5;\n        var SINCOS_LENGTH = Math.floor(360 / SINCOS_PRECISION);\n        var sinLUT = new Array(SINCOS_LENGTH);\n        var cosLUT = new Array(SINCOS_LENGTH);\n        var DEG_TO_RAD = Math.PI / 180;\n        for (var i = 0; i < SINCOS_LENGTH; i++) {\n            sinLUT[i] = Math.sin(i * DEG_TO_RAD * SINCOS_PRECISION);\n            cosLUT[i] = Math.cos(i * DEG_TO_RAD * SINCOS_PRECISION);\n        }\n        var perlin_PI = SINCOS_LENGTH;\n        perlin_PI >>= 1;\n        var perlin;\n        p5.prototype.noise = function (x, y, z) {\n            y = y || 0;\n            z = z || 0;\n            if (perlin == null) {\n                perlin = new Array(PERLIN_SIZE + 1);\n                for (var i = 0; i < PERLIN_SIZE + 1; i++) {\n                    perlin[i] = Math.random();\n                }\n            }\n            if (x < 0) {\n                x = -x;\n            }\n            if (y < 0) {\n                y = -y;\n            }\n            if (z < 0) {\n                z = -z;\n            }\n            var xi = Math.floor(x), yi = Math.floor(y), zi = Math.floor(z);\n            var xf = x - xi;\n            var yf = y - yi;\n            var zf = z - zi;\n            var rxf, ryf;\n            var r = 0;\n            var ampl = 0.5;\n            var n1, n2, n3;\n            var noise_fsc = function (i) {\n                return 0.5 * (1 - cosLUT[Math.floor(i * perlin_PI) % SINCOS_LENGTH]);\n            };\n            for (var o = 0; o < perlin_octaves; o++) {\n                var of = xi + (yi << PERLIN_YWRAPB) + (zi << PERLIN_ZWRAPB);\n                rxf = noise_fsc(xf);\n                ryf = noise_fsc(yf);\n                n1 = perlin[of & PERLIN_SIZE];\n                n1 += rxf * (perlin[of + 1 & PERLIN_SIZE] - n1);\n                n2 = perlin[of + PERLIN_YWRAP & PERLIN_SIZE];\n                n2 += rxf * (perlin[of + PERLIN_YWRAP + 1 & PERLIN_SIZE] - n2);\n                n1 += ryf * (n2 - n1);\n                of += PERLIN_ZWRAP;\n                n2 = perlin[of & PERLIN_SIZE];\n                n2 += rxf * (perlin[of + 1 & PERLIN_SIZE] - n2);\n                n3 = perlin[of + PERLIN_YWRAP & PERLIN_SIZE];\n                n3 += rxf * (perlin[of + PERLIN_YWRAP + 1 & PERLIN_SIZE] - n3);\n                n2 += ryf * (n3 - n2);\n                n1 += noise_fsc(zf) * (n2 - n1);\n                r += n1 * ampl;\n                ampl *= perlin_amp_falloff;\n                xi <<= 1;\n                xf *= 2;\n                yi <<= 1;\n                yf *= 2;\n                zi <<= 1;\n                zf *= 2;\n                if (xf >= 1) {\n                    xi++;\n                    xf--;\n                }\n                if (yf >= 1) {\n                    yi++;\n                    yf--;\n                }\n                if (zf >= 1) {\n                    zi++;\n                    zf--;\n                }\n            }\n            return r;\n        };\n        p5.prototype.noiseDetail = function (lod, falloff) {\n            if (lod > 0) {\n                perlin_octaves = lod;\n            }\n            if (falloff > 0) {\n                perlin_amp_falloff = falloff;\n            }\n        };\n        p5.prototype.noiseSeed = function (seed) {\n        };\n        return p5;\n    }({}, core);\n","var polargeometry = function (require) {\n        return {\n            degreesToRadians: function (x) {\n                return 2 * Math.PI * x / 360;\n            },\n            radiansToDegrees: function (x) {\n                return 360 * x / (2 * Math.PI);\n            }\n        };\n    }({});\n","var mathtrigonometry = function (require, core, polargeometry, constants) {\n        'use strict';\n        var p5 = core;\n        var polarGeometry = polargeometry;\n        var constants = constants;\n        p5.prototype.acos = function (x) {\n            return Math.acos(this.radians(x));\n        };\n        p5.prototype.asin = function (x) {\n            return Math.asin(this.radians(x));\n        };\n        p5.prototype.atan = function (x) {\n            return Math.atan(this.radians(x));\n        };\n        p5.prototype.atan2 = function (x, y) {\n            return Math.atan2(this.radians(x), this.radians(y));\n        };\n        p5.prototype.cos = function (x) {\n            return Math.cos(this.radians(x));\n        };\n        p5.prototype.sin = function (x) {\n            return Math.sin(this.radians(x));\n        };\n        p5.prototype.tan = function (x) {\n            return Math.tan(this.radians(x));\n        };\n        p5.prototype.degrees = function (angle) {\n            return this.settings.angleMode === constants.DEGREES ? angle : polarGeometry.radiansToDegrees(angle);\n        };\n        p5.prototype.radians = function (angle) {\n            return this.settings.angleMode === constants.RADIANS ? angle : polarGeometry.degreesToRadians(angle);\n        };\n        p5.prototype.angleMode = function (mode) {\n            if (mode === constants.DEGREES || mode === constants.RADIANS) {\n                this.settings.angleMode = mode;\n            }\n        };\n        return p5;\n    }({}, core, polargeometry, constants);\n","var outputfiles = function (require, core) {\n        'use strict';\n        var p5 = core;\n        p5.prototype.beginRaw = function () {\n        };\n        p5.prototype.beginRecord = function () {\n        };\n        p5.prototype.createOutput = function () {\n        };\n        p5.prototype.createWriter = function (name) {\n            if (this.pWriters.indexOf(name) === -1) {\n                this.pWriters.name = new this.PrintWriter(name);\n            }\n        };\n        p5.prototype.endRaw = function () {\n        };\n        p5.prototype.endRecord = function () {\n        };\n        p5.prototype.escape = function (content) {\n            return content;\n        };\n        p5.prototype.PrintWriter = function (name) {\n            this.name = name;\n            this.content = '';\n            this.print = function (data) {\n                this.content += data;\n            };\n            this.println = function (data) {\n                this.content += data + '\\n';\n            };\n            this.flush = function () {\n                this.content = '';\n            };\n            this.close = function () {\n                this.writeFile(this.content);\n            };\n        };\n        p5.prototype.saveBytes = function () {\n        };\n        p5.prototype.saveJSONArray = function () {\n        };\n        p5.prototype.saveJSONObject = function () {\n        };\n        p5.prototype.saveStream = function () {\n        };\n        p5.prototype.saveStrings = function (list) {\n            this.writeFile(list.join('\\n'));\n        };\n        p5.prototype.saveXML = function () {\n        };\n        p5.prototype.selectOutput = function () {\n        };\n        p5.prototype.writeFile = function (content) {\n            this.open('data:text/json;charset=utf-8,' + this.escape(content), 'download');\n        };\n        return p5;\n    }({}, core);\n","var outputimage = function (require, core) {\n        'use strict';\n        var p5 = core;\n        p5.prototype.save = function () {\n            this.open(this.curElement.elt.toDataURL('image/png'));\n        };\n        return p5;\n    }({}, core);\n","var outputtext_area = function (require, core) {\n        'use strict';\n        var p5 = core;\n        p5.prototype.print = function () {\n            if (window.console && console.log) {\n                console.log.apply(console, arguments);\n            }\n        };\n        p5.prototype.println = p5.prototype.print;\n        return p5;\n    }({}, core);\n","var shape2d_primitives = function (require, core, canvas, constants) {\n        'use strict';\n        var p5 = core;\n        var canvas = canvas;\n        var constants = constants;\n        p5.prototype.arc = function (a, b, c, d, start, stop, mode) {\n            var vals = canvas.arcModeAdjust(a, b, c, d, this.settings.ellipseMode);\n            var radius = vals.h > vals.w ? vals.h / 2 : vals.w / 2, xScale = vals.h > vals.w ? vals.w / vals.h : 1, yScale = vals.h > vals.w ? 1 : vals.h / vals.w;\n            this.curElement.context.scale(xScale, yScale);\n            this.curElement.context.beginPath();\n            this.curElement.context.arc(vals.x, vals.y, radius, start, stop);\n            this.curElement.context.stroke();\n            if (mode === constants.CHORD || mode === constants.OPEN) {\n                this.curElement.context.closePath();\n            } else if (mode === constants.PIE || mode === undefined) {\n                this.curElement.context.lineTo(vals.x, vals.y);\n                this.curElement.context.closePath();\n            }\n            this.curElement.context.fill();\n            if (mode !== constants.OPEN && mode !== undefined) {\n                this.curElement.context.stroke();\n            }\n            return this;\n        };\n        p5.prototype.ellipse = function (a, b, c, d) {\n            var vals = canvas.modeAdjust(a, b, c, d, this.settings.ellipseMode);\n            var kappa = 0.5522848, ox = vals.w / 2 * kappa, oy = vals.h / 2 * kappa, xe = vals.x + vals.w, ye = vals.y + vals.h, xm = vals.x + vals.w / 2, ym = vals.y + vals.h / 2;\n            this.curElement.context.beginPath();\n            this.curElement.context.moveTo(vals.x, ym);\n            this.curElement.context.bezierCurveTo(vals.x, ym - oy, xm - ox, vals.y, xm, vals.y);\n            this.curElement.context.bezierCurveTo(xm + ox, vals.y, xe, ym - oy, xe, ym);\n            this.curElement.context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n            this.curElement.context.bezierCurveTo(xm - ox, ye, vals.x, ym + oy, vals.x, ym);\n            this.curElement.context.closePath();\n            this.curElement.context.fill();\n            this.curElement.context.stroke();\n            return this;\n        };\n        p5.prototype.line = function (x1, y1, x2, y2) {\n            if (this.curElement.context.strokeStyle === 'rgba(0,0,0,0)') {\n                return;\n            }\n            this.curElement.context.beginPath();\n            this.curElement.context.moveTo(x1, y1);\n            this.curElement.context.lineTo(x2, y2);\n            this.curElement.context.stroke();\n            return this;\n        };\n        p5.prototype.point = function (x, y) {\n            var s = this.curElement.context.strokeStyle;\n            var f = this.curElement.context.fillStyle;\n            if (s === 'rgba(0,0,0,0)') {\n                return;\n            }\n            x = Math.round(x);\n            y = Math.round(y);\n            this.curElement.context.fillStyle = s;\n            if (this.curElement.context.lineWidth > 1) {\n                this.curElement.context.beginPath();\n                this.curElement.context.arc(x, y, this.curElement.context.lineWidth / 2, 0, constants.TWO_PI, false);\n                this.curElement.context.fill();\n            } else {\n                this.curElement.context.fillRect(x, y, 1, 1);\n            }\n            this.curElement.context.fillStyle = f;\n            return this;\n        };\n        p5.prototype.quad = function (x1, y1, x2, y2, x3, y3, x4, y4) {\n            this.curElement.context.beginPath();\n            this.curElement.context.moveTo(x1, y1);\n            this.curElement.context.lineTo(x2, y2);\n            this.curElement.context.lineTo(x3, y3);\n            this.curElement.context.lineTo(x4, y4);\n            this.curElement.context.closePath();\n            this.curElement.context.fill();\n            this.curElement.context.stroke();\n            return this;\n        };\n        p5.prototype.rect = function (a, b, c, d) {\n            var vals = canvas.modeAdjust(a, b, c, d, this.settings.rectMode);\n            this.curElement.context.beginPath();\n            this.curElement.context.rect(vals.x, vals.y, vals.w, vals.h);\n            this.curElement.context.fill();\n            this.curElement.context.stroke();\n            return this;\n        };\n        p5.prototype.triangle = function (x1, y1, x2, y2, x3, y3) {\n            this.curElement.context.beginPath();\n            this.curElement.context.moveTo(x1, y1);\n            this.curElement.context.lineTo(x2, y2);\n            this.curElement.context.lineTo(x3, y3);\n            this.curElement.context.closePath();\n            this.curElement.context.fill();\n            this.curElement.context.stroke();\n            return this;\n        };\n        return p5;\n    }({}, core, canvas, constants);\n","var shapeattributes = function (require, core, constants) {\n        'use strict';\n        var p5 = core;\n        var constants = constants;\n        p5.prototype.ellipseMode = function (m) {\n            if (m === constants.CORNER || m === constants.CORNERS || m === constants.RADIUS || m === constants.CENTER) {\n                this.settings.ellipseMode = m;\n            }\n            return this;\n        };\n        p5.prototype.noSmooth = function () {\n            this.curElement.context.mozImageSmoothingEnabled = false;\n            this.curElement.context.webkitImageSmoothingEnabled = false;\n            return this;\n        };\n        p5.prototype.rectMode = function (m) {\n            if (m === constants.CORNER || m === constants.CORNERS || m === constants.RADIUS || m === constants.CENTER) {\n                this.settings.rectMode = m;\n            }\n            return this;\n        };\n        p5.prototype.smooth = function () {\n            this.curElement.context.mozImageSmoothingEnabled = true;\n            this.curElement.context.webkitImageSmoothingEnabled = true;\n            return this;\n        };\n        p5.prototype.strokeCap = function (cap) {\n            if (cap === constants.ROUND || cap === constants.SQUARE || cap === constants.PROJECT) {\n                this.curElement.context.lineCap = cap;\n            }\n            return this;\n        };\n        p5.prototype.strokeJoin = function (join) {\n            if (join === constants.ROUND || join === constants.BEVEL || join === constants.MITER) {\n                this.curElement.context.lineJoin = join;\n            }\n            return this;\n        };\n        p5.prototype.strokeWeight = function (w) {\n            if (typeof w === 'undefined' || w === 0) {\n                this.curElement.context.lineWidth = 0.0001;\n            } else {\n                this.curElement.context.lineWidth = w;\n            }\n            return this;\n        };\n        return p5;\n    }({}, core, constants);\n","var shapecurves = function (require, core) {\n        'use strict';\n        var p5 = core;\n        p5.prototype.bezier = function (x1, y1, x2, y2, x3, y3, x4, y4) {\n            this.curElement.context.beginPath();\n            this.curElement.context.moveTo(x1, y1);\n            for (var i = 0; i <= this._bezierDetail; i++) {\n                var t = i / parseFloat(this._bezierDetail);\n                var x = p5.prototype.bezierPoint(x1, x2, x3, x4, t);\n                var y = p5.prototype.bezierPoint(y1, y2, y3, y4, t);\n                this.curElement.context.lineTo(x, y);\n            }\n            this.curElement.context.stroke();\n            return this;\n        };\n        p5.prototype.bezierDetail = function (d) {\n            this._setProperty('_bezierDetail', d);\n            return this;\n        };\n        p5.prototype.bezierPoint = function (a, b, c, d, t) {\n            var adjustedT = 1 - t;\n            return Math.pow(adjustedT, 3) * a + 3 * Math.pow(adjustedT, 2) * t * b + 3 * adjustedT * Math.pow(t, 2) * c + Math.pow(t, 3) * d;\n        };\n        p5.prototype.bezierTangent = function (a, b, c, d, t) {\n            var adjustedT = 1 - t;\n            return 3 * d * Math.pow(t, 2) - 3 * c * Math.pow(t, 2) + 6 * c * adjustedT * t - 6 * b * adjustedT * t + 3 * b * Math.pow(adjustedT, 2) - 3 * a * Math.pow(adjustedT, 2);\n        };\n        p5.prototype.curve = function (x1, y1, x2, y2, x3, y3, x4, y4) {\n            this.curElement.context.moveTo(x1, y1);\n            this.curElement.context.beginPath();\n            for (var i = 0; i <= this._curveDetail; i++) {\n                var t = parseFloat(i / this._curveDetail);\n                var x = p5.prototype.curvePoint(x1, x2, x3, x4, t);\n                var y = p5.prototype.curvePoint(y1, y2, y3, y4, t);\n                this.curElement.context.lineTo(x, y);\n            }\n            this.curElement.context.stroke();\n            this.curElement.context.closePath();\n            return this;\n        };\n        p5.prototype.curveDetail = function (d) {\n            this._setProperty('_curveDetail', d);\n            return this;\n        };\n        p5.prototype.curvePoint = function (a, b, c, d, t) {\n            var t3 = t * t * t, t2 = t * t, f1 = -0.5 * t3 + t2 - 0.5 * t, f2 = 1.5 * t3 - 2.5 * t2 + 1, f3 = -1.5 * t3 + 2 * t2 + 0.5 * t, f4 = 0.5 * t3 - 0.5 * t2;\n            return a * f1 + b * f2 + c * f3 + d * f4;\n        };\n        p5.prototype.curveTangent = function (a, b, c, d, t) {\n            var t2 = t * t, f1 = -3 * t2 / 2 + 2 * t - 0.5, f2 = 9 * t2 / 2 - 5 * t, f3 = -9 * t2 / 2 + 4 * t + 0.5, f4 = 3 * t2 / 2 - t;\n            return a * f1 + b * f2 + c * f3 + d * f4;\n        };\n        p5.prototype.curveTightness = function () {\n        };\n        return p5;\n    }({}, core);\n","var shapevertex = function (require, core, constants) {\n        'use strict';\n        var p5 = core;\n        var constants = constants;\n        p5.prototype.beginContour = function () {\n        };\n        p5.prototype.beginShape = function (kind) {\n            if (kind === constants.POINTS || kind === constants.LINES || kind === constants.TRIANGLES || kind === constants.TRIANGLE_FAN || kind === constants.TRIANGLE_STRIP || kind === constants.QUADS || kind === constants.QUAD_STRIP) {\n                this.shapeKind = kind;\n            } else {\n                this.shapeKind = null;\n            }\n            this.shapeInited = true;\n            this.curElement.context.beginPath();\n            return this;\n        };\n        p5.prototype.bezierVertex = function (x1, y1, x2, y2, x3, y3) {\n            this.curElement.context.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            return this;\n        };\n        p5.prototype.curveVertex = function () {\n        };\n        p5.prototype.endContour = function () {\n        };\n        p5.prototype.endShape = function (mode) {\n            if (mode === constants.CLOSE) {\n                this.curElement.context.closePath();\n                this.curElement.context.fill();\n            }\n            this.curElement.context.stroke();\n            return this;\n        };\n        p5.prototype.quadraticVertex = function (cx, cy, x3, y3) {\n            this.curElement.context.quadraticCurveTo(cx, cy, x3, y3);\n            return this;\n        };\n        p5.prototype.vertex = function (x, y) {\n            if (this.shapeInited) {\n                this.curElement.context.moveTo(x, y);\n            } else {\n                this.curElement.context.lineTo(x, y);\n            }\n            this.shapeInited = false;\n            return this;\n        };\n        return p5;\n    }({}, core, constants);\n","var structure = function (require, core) {\n        'use strict';\n        var p5 = core;\n        p5.prototype.exit = function () {\n            throw 'Not implemented';\n        };\n        p5.prototype.noLoop = function () {\n            this.settings.loop = false;\n        };\n        p5.prototype.loop = function () {\n            this.settings.loop = true;\n        };\n        p5.prototype.pushStyle = function () {\n            this.styles.push({\n                fillStyle: this.curElement.context.fillStyle,\n                strokeStyle: this.curElement.context.strokeStyle,\n                lineWidth: this.curElement.context.lineWidth,\n                lineCap: this.curElement.context.lineCap,\n                lineJoin: this.curElement.context.lineJoin,\n                imageMode: this.settings.imageMode,\n                rectMode: this.settings.rectMode,\n                ellipseMode: this.settings.ellipseMode,\n                colorMode: this.settings.colorMode,\n                textAlign: this.curElement.context.textAlign,\n                textFont: this.settings.textFont,\n                textLeading: this.settings.textLeading,\n                textSize: this.settings.textSize,\n                textStyle: this.settings.textStyle\n            });\n        };\n        p5.prototype.popStyle = function () {\n            var lastS = this.styles.pop();\n            this.curElement.context.fillStyle = lastS.fillStyle;\n            this.curElement.context.strokeStyle = lastS.strokeStyle;\n            this.curElement.context.lineWidth = lastS.lineWidth;\n            this.curElement.context.lineCap = lastS.lineCap;\n            this.curElement.context.lineJoin = lastS.lineJoin;\n            this.settings.imageMode = lastS.imageMode;\n            this.settings.rectMode = lastS.rectMode;\n            this.settings.ellipseMode = lastS.ellipseMode;\n            this.settings.colorMode = lastS.colorMode;\n            this.curElement.context.textAlign = lastS.textAlign;\n            this.settings.textFont = lastS.textFont;\n            this.settings.textLeading = lastS.textLeading;\n            this.settings.textSize = lastS.textSize;\n            this.settings.textStyle = lastS.textStyle;\n        };\n        p5.prototype.redraw = function () {\n            throw 'Not implemented';\n        };\n        p5.prototype.size = function () {\n            throw 'Not implemented';\n        };\n        return p5;\n    }({}, core);\n","var linearalgebra = function (require) {\n        return {\n            pMultiplyMatrix: function (m1, m2) {\n                var result = [];\n                var m1Length = m1.length;\n                var m2Length = m2.length;\n                var m10Length = m1[0].length;\n                for (var j = 0; j < m2Length; j++) {\n                    result[j] = [];\n                    for (var k = 0; k < m10Length; k++) {\n                        var sum = 0;\n                        for (var i = 0; i < m1Length; i++) {\n                            sum += m1[i][k] * m2[j][i];\n                        }\n                        result[j].push(sum);\n                    }\n                }\n                return result;\n            }\n        };\n    }({});\n","var transform = function (require, core, linearalgebra, outputtext_area) {\n        'use strict';\n        var p5 = core;\n        var linearAlgebra = linearalgebra;\n        p5.prototype.applyMatrix = function (n00, n01, n02, n10, n11, n12) {\n            this.curElement.context.transform(n00, n01, n02, n10, n11, n12);\n            var m = this.matrices[this.matrices.length - 1];\n            m = linearAlgebra.pMultiplyMatrix(m, [\n                n00,\n                n01,\n                n02,\n                n10,\n                n11,\n                n12\n            ]);\n            return this;\n        };\n        p5.prototype.popMatrix = function () {\n            this.curElement.context.restore();\n            this.matrices.pop();\n            return this;\n        };\n        p5.prototype.printMatrix = function () {\n            this.print(this.matrices[this.matrices.length - 1]);\n            return this;\n        };\n        p5.prototype.pushMatrix = function () {\n            this.curElement.context.save();\n            this.matrices.push([\n                1,\n                0,\n                0,\n                1,\n                0,\n                0\n            ]);\n            return this;\n        };\n        p5.prototype.resetMatrix = function () {\n            this.curElement.context.setTransform();\n            this.matrices[this.matrices.length - 1] = [\n                1,\n                0,\n                0,\n                1,\n                0,\n                0\n            ];\n            return this;\n        };\n        p5.prototype.rotate = function (r) {\n            r = this.radians(r);\n            this.curElement.context.rotate(r);\n            var m = this.matrices[this.matrices.length - 1];\n            var c = Math.cos(r);\n            var s = Math.sin(r);\n            var m11 = m[0] * c + m[2] * s;\n            var m12 = m[1] * c + m[3] * s;\n            var m21 = m[0] * -s + m[2] * c;\n            var m22 = m[1] * -s + m[3] * c;\n            m[0] = m11;\n            m[1] = m12;\n            m[2] = m21;\n            m[3] = m22;\n            return this;\n        };\n        p5.prototype.rotateX = function () {\n        };\n        p5.prototype.rotateY = function () {\n        };\n        p5.prototype.rotateZ = function () {\n        };\n        p5.prototype.scale = function () {\n            var x = 1, y = 1;\n            if (arguments.length === 1) {\n                x = y = arguments[0];\n            } else {\n                x = arguments[0];\n                y = arguments[1];\n            }\n            this.curElement.context.scale(x, y);\n            var m = this.matrices[this.matrices.length - 1];\n            m[0] *= x;\n            m[1] *= x;\n            m[2] *= y;\n            m[3] *= y;\n            return this;\n        };\n        p5.prototype.shearX = function (angle) {\n            this.curElement.context.transform(1, 0, this.tan(angle), 1, 0, 0);\n            var m = this.matrices[this.matrices.length - 1];\n            m = linearAlgebra.pMultiplyMatrix(m, [\n                1,\n                0,\n                this.tan(angle),\n                1,\n                0,\n                0\n            ]);\n            return this;\n        };\n        p5.prototype.shearY = function (angle) {\n            this.curElement.context.transform(1, this.tan(angle), 0, 1, 0, 0);\n            var m = this.matrices[this.matrices.length - 1];\n            m = linearAlgebra.pMultiplyMatrix(m, [\n                1,\n                this.tan(angle),\n                0,\n                1,\n                0,\n                0\n            ]);\n            return this;\n        };\n        p5.prototype.translate = function (x, y) {\n            this.curElement.context.translate(x, y);\n            var m = this.matrices[this.matrices.length - 1];\n            m[4] += m[0] * x + m[2] * y;\n            m[5] += m[1] * x + m[3] * y;\n            return this;\n        };\n        return p5;\n    }({}, core, linearalgebra, outputtext_area);\n","var typographyattributes = function (require, core, constants) {\n        'use strict';\n        var p5 = core;\n        var constants = constants;\n        p5.prototype.textAlign = function (a) {\n            if (a === constants.LEFT || a === constants.RIGHT || a === constants.CENTER) {\n                this.curElement.context.textAlign = a;\n            }\n        };\n        p5.prototype.textFont = function (str) {\n            this._setProperty('_textFont', str);\n        };\n        p5.prototype.textHeight = function (s) {\n            return this.curElement.context.measureText(s).height;\n        };\n        p5.prototype.textLeading = function (l) {\n            this._setProperty('_textLeading', l);\n        };\n        p5.prototype.textSize = function (s) {\n            this._setProperty('_textSize', s);\n        };\n        p5.prototype.textStyle = function (s) {\n            if (s === constants.NORMAL || s === constants.ITALIC || s === constants.BOLD) {\n                this._setProperty('_textStyle', s);\n            }\n        };\n        p5.prototype.textWidth = function (s) {\n            return this.curElement.context.measureText(s).width;\n        };\n        return p5;\n    }({}, core, constants);\n","var typographyloading_displaying = function (require, core) {\n        'use strict';\n        var p5 = core;\n        p5.prototype.text = function () {\n            this.curElement.context.font = this._textStyle + ' ' + this._textSize + 'px ' + this._textFont;\n            if (arguments.length === 3) {\n                this.curElement.context.fillText(arguments[0], arguments[1], arguments[2]);\n                this.curElement.context.strokeText(arguments[0], arguments[1], arguments[2]);\n            } else if (arguments.length === 5) {\n                var words = arguments[0].split(' ');\n                var line = '';\n                var vals = this.modeAdjust(arguments[1], arguments[2], arguments[3], arguments[4], this.rectMode);\n                vals.y += this.textLeading;\n                for (var n = 0; n < words.length; n++) {\n                    var testLine = line + words[n] + ' ';\n                    var metrics = this.curElement.context.measureText(testLine);\n                    var testWidth = metrics.width;\n                    if (vals.y > vals.h) {\n                        break;\n                    } else if (testWidth > vals.w && n > 0) {\n                        this.curElement.context.fillText(line, vals.x, vals.y);\n                        this.curElement.context.strokeText(line, vals.x, vals.y);\n                        line = words[n] + ' ';\n                        vals.y += this.textLeading;\n                    } else {\n                        line = testLine;\n                    }\n                }\n                if (vals.y <= vals.h) {\n                    this.curElement.context.fillText(line, vals.x, vals.y);\n                    this.curElement.context.strokeText(line, vals.x, vals.y);\n                }\n            }\n        };\n        return p5;\n    }({}, core);\n","var src_app = function (require, core, mathpvector, colorcreating_reading, colorsetting, dataarray_functions, datastring_functions, dommanipulate, dompelement, environment, image, imageloading_displaying, inputfiles, inputkeyboard, inputmouse, inputtime_date, inputtouch, mathcalculation, mathrandom, mathnoise, mathtrigonometry, outputfiles, outputimage, outputtext_area, shape2d_primitives, shapeattributes, shapecurves, shapevertex, structure, transform, typographyattributes, typographyloading_displaying) {\n        'use strict';\n        var p5 = core;\n        var PVector = mathpvector;\n        var _globalInit = function () {\n            if (window.setup && typeof window.setup === 'function' || window.draw && typeof window.draw === 'function') {\n                new p5();\n            }\n        };\n        if (document.readyState === 'complete') {\n            _globalInit();\n        } else {\n            window.addEventListener('load', _globalInit, false);\n        }\n        window.p5 = p5;\n        window.PVector = PVector;\n        return p5;\n    }({}, core, mathpvector, colorcreating_reading, colorsetting, dataarray_functions, datastring_functions, dommanipulate, dompelement, environment, image, imageloading_displaying, inputfiles, inputkeyboard, inputmouse, inputtime_date, inputtouch, mathcalculation, mathrandom, mathnoise, mathtrigonometry, outputfiles, outputimage, outputtext_area, shape2d_primitives, shapeattributes, shapecurves, shapevertex, structure, transform, typographyattributes, typographyloading_displaying);\n"]}